Terminals unused in grammar

   BOOLEAN


Grammar

    0 $accept: program $end

    1 program: program_decl statement_list body '.'

    2 program_decl: KW_PROGRAM IDENT ';'

    3 body: KW_BEGIN statement_list KW_END

    4 statement_list: %empty
    5               | statement statement_list

    6 statement: subprogram_def
    7          | proc_call ';'
    8          | label_decl
    9          | goto_statement
   10          | assignment
   11          | KW_RETURN
   12          | type_def
   13          | var_declaration
   14          | loops

   15 loops: if_statement
   16      | for_statement
   17      | while_statement

   18 if_statement: KW_IF expression KW_THEN KW_BEGIN statement_list KW_END ';'
   19             | KW_IF expression KW_THEN KW_BEGIN statement_list KW_END ';' KW_ELSE KW_BEGIN statement_list KW_END ';'
   20             | KW_IF expression KW_THEN statement
   21             | KW_IF expression KW_THEN statement KW_ELSE statement
   22             | KW_IF expression KW_THEN statement KW_ELSE KW_BEGIN statement_list KW_END ';'
   23             | KW_IF expression KW_THEN KW_BEGIN statement_list KW_END ';' KW_ELSE statement

   24 while_statement: KW_WHILE expression KW_DO KW_BEGIN statement_list KW_END ';'
   25                | KW_REPEAT KW_BEGIN statement_list KW_END ';' KW_UNTIL expression
   26                | KW_WHILE expression KW_DO statement
   27                | KW_REPEAT statement KW_UNTIL expression

   28 for_statement: KW_FOR IDENT ASSIGN expression KW_TO expression KW_DO KW_BEGIN statement_list KW_END ';'
   29              | KW_FOR IDENT ASSIGN expression KW_DOWNTO expression KW_DO KW_BEGIN statement_list KW_END ';'
   30              | KW_FOR IDENT ASSIGN expression KW_TO expression KW_DO statement
   31              | KW_FOR IDENT ASSIGN expression KW_DOWNTO expression KW_DO statement

   32 label_decl: IDENT ':' label_body

   33 label_body: subprogram_def
   34           | proc_call ';'
   35           | label_decl ';'
   36           | goto_statement
   37           | assignment
   38           | KW_RETURN
   39           | type_def
   40           | var_declaration
   41           | loops

   42 goto_statement: KW_GOTO IDENT ';'

   43 proc_call: IDENT '(' arguments ')'

   44 arguments: %empty
   45          | expression
   46          | expression ',' arguments

   47 casting: '(' basic_types ')' expression
   48        | '(' ARRAY array_brackets KW_OF basic_types ')' expression

   49 expression: POSINT
   50           | REAL
   51           | arrays
   52           | IDENT
   53           | proc_call
   54           | KW_RESULT
   55           | STRING
   56           | casting
   57           | KW_TRUE
   58           | KW_FALSE
   59           | '+' expression
   60           | '-' expression
   61           | expression '*' expression
   62           | expression '/' expression
   63           | expression KW_DIV expression
   64           | expression KW_MOD expression
   65           | expression '+' expression
   66           | expression '-' expression
   67           | KW_NOT expression
   68           | '!' expression
   69           | expression '=' expression
   70           | expression KW_DIFFERENT expression
   71           | expression '<' expression
   72           | expression '>' expression
   73           | expression KW_LESS_OR_EQ expression
   74           | expression KW_MORE_OR_EQ expression
   75           | expression KW_AND expression
   76           | expression KW_OR expression
   77           | expression KW_AND_SYMB expression
   78           | expression KW_OR_SYMB expression
   79           | '(' in_brackets ')'

   80 in_brackets: POSINT
   81            | REAL
   82            | proc_call
   83            | KW_RESULT
   84            | STRING
   85            | casting
   86            | KW_TRUE
   87            | KW_FALSE
   88            | '+' expression
   89            | '-' expression
   90            | expression '*' expression
   91            | expression '/' expression
   92            | expression KW_DIV expression
   93            | expression KW_MOD expression
   94            | expression '+' expression
   95            | expression '-' expression
   96            | KW_NOT expression
   97            | '!' expression
   98            | expression '=' expression
   99            | expression KW_DIFFERENT expression
  100            | expression '<' expression
  101            | expression '>' expression
  102            | expression KW_LESS_OR_EQ expression
  103            | expression KW_MORE_OR_EQ expression
  104            | expression KW_AND expression
  105            | expression KW_OR expression
  106            | expression KW_AND_SYMB expression
  107            | expression KW_OR_SYMB expression

  108 assignment: IDENT ASSIGN expression ';'
  109           | KW_RESULT ASSIGN expression ';'

  110 basic_types: KW_BOOLEAN
  111            | KW_INTEGER
  112            | KW_REAL
  113            | KW_CHAR
  114            | IDENT

  115 proc_def_arg_main: names ':' ARRAY KW_OF basic_types
  116                  | names ':' basic_types

  117 proc_def_arguments: %empty
  118                   | proc_def_arg_main
  119                   | proc_def_arg_main ';' proc_def_arguments

  120 arrays: ARRAY array_brackets KW_OF basic_types

  121 array_brackets: %empty
  122               | '[' array_arg ']' array_brackets

  123 subprogram_def: KW_FUNCTION IDENT '(' proc_def_arguments ')' ':' FuncReturnTypes ';' statement_list body ';'
  124               | KW_PROCEDURE IDENT '(' proc_def_arguments ')' ';' statement_list body ';'

  125 FuncReturnTypes: basic_types
  126                | arrays

  127 array_arg: POSINT
  128          | array_arg '+' array_arg
  129          | array_arg '-' array_arg
  130          | array_arg '*' array_arg
  131          | array_arg '/' array_arg

  132 type_def: KW_TYPE type_def_body

  133 type_def_body: IDENT '=' basic_types after_type_def
  134              | IDENT '=' KW_FUNCTION '(' proc_def_arguments ')' ':' FuncReturnTypes after_type_def
  135              | IDENT '=' ARRAY typedef_array_brackets KW_OF basic_types after_type_def

  136 typedef_array_brackets: %empty
  137                       | '[' array_arg ']' typedef_array_brackets

  138 after_type_def: ';' type_def_body
  139               | ';'

  140 var_declaration: KW_VAR names ':' basic_types var_decl_more
  141                | KW_VAR names ':' ARRAY array_brackets KW_OF basic_types var_decl_more

  142 var_decl_more: ';' names ':' basic_types var_decl_more
  143              | ';' names ':' ARRAY array_brackets KW_OF basic_types var_decl_more
  144              | ';'

  145 names: IDENT
  146      | IDENT ',' names


Terminals, with rules where they appear

$end (0) 0
'!' (33) 68 97
'(' (40) 43 47 48 79 123 124 134
')' (41) 43 47 48 79 123 124 134
'*' (42) 61 90 130
'+' (43) 59 65 88 94 128
',' (44) 46 146
'-' (45) 60 66 89 95 129
'.' (46) 1
'/' (47) 62 91 131
':' (58) 32 115 116 123 134 140 141 142 143
';' (59) 2 7 18 19 22 23 24 25 28 29 34 35 42 108 109 119 123 124 138
    139 142 143 144
'<' (60) 71 100
'=' (61) 69 98 133 134 135
'>' (62) 72 101
'[' (91) 122 137
']' (93) 122 137
error (256)
IDENT (258) 2 28 29 30 31 32 42 43 52 108 114 123 124 133 134 135 145
    146
POSINT (259) 49 80 127
REAL (260) 50 81
BOOLEAN (261)
STRING (262) 55 84
ASSIGN (263) 28 29 30 31 108 109
KW_PROGRAM (264) 2
KW_BEGIN (265) 3 18 19 22 23 24 25 28 29
KW_END (266) 3 18 19 22 23 24 25 28 29
KW_AND (267) 75 104
KW_DIV (268) 63 92
KW_FUNCTION (269) 123 134
KW_MOD (270) 64 93
KW_PROCEDURE (271) 124
KW_RESULT (272) 54 83 109
ARRAY (273) 48 115 120 135 141 143
KW_DO (274) 24 26 28 29 30 31
KW_GOTO (275) 42
KW_NOT (276) 67 96
KW_RETURN (277) 11 38
KW_BOOLEAN (278) 110
KW_ELSE (279) 19 21 22 23
KW_IF (280) 18 19 20 21 22 23
KW_OF (281) 48 115 120 135 141 143
KW_REAL (282) 112
KW_THEN (283) 18 19 20 21 22 23
KW_CHAR (284) 113
KW_FOR (285) 28 29 30 31
KW_INTEGER (286) 111
KW_OR (287) 76 105
KW_REPEAT (288) 25 27
KW_UNTIL (289) 25 27
KW_VAR (290) 140 141
KW_WHILE (291) 24 26
KW_TO (292) 28 30
KW_DOWNTO (293) 29 31
KW_DIFFERENT (294) 70 99
KW_LESS_OR_EQ (295) 73 102
KW_MORE_OR_EQ (296) 74 103
KW_AND_SYMB (297) 77 106
KW_OR_SYMB (298) 78 107
KW_TYPE (299) 132
KW_TRUE (300) 57 86
KW_FALSE (301) 58 87


Nonterminals, with rules where they appear

$accept (63)
    on left: 0
program (64)
    on left: 1, on right: 0
program_decl (65)
    on left: 2, on right: 1
body (66)
    on left: 3, on right: 1 123 124
statement_list (67)
    on left: 4 5, on right: 1 3 5 18 19 22 23 24 25 28 29 123 124
statement (68)
    on left: 6 7 8 9 10 11 12 13 14, on right: 5 20 21 22 23 26 27
    30 31
loops (69)
    on left: 15 16 17, on right: 14 41
if_statement (70)
    on left: 18 19 20 21 22 23, on right: 15
while_statement (71)
    on left: 24 25 26 27, on right: 17
for_statement (72)
    on left: 28 29 30 31, on right: 16
label_decl (73)
    on left: 32, on right: 8 35
label_body (74)
    on left: 33 34 35 36 37 38 39 40 41, on right: 32
goto_statement (75)
    on left: 42, on right: 9 36
proc_call (76)
    on left: 43, on right: 7 34 53 82
arguments (77)
    on left: 44 45 46, on right: 43 46
casting (78)
    on left: 47 48, on right: 56 85
expression (79)
    on left: 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66
    67 68 69 70 71 72 73 74 75 76 77 78 79, on right: 18 19 20 21 22
    23 24 25 26 27 28 29 30 31 45 46 47 48 59 60 61 62 63 64 65 66
    67 68 69 70 71 72 73 74 75 76 77 78 88 89 90 91 92 93 94 95 96
    97 98 99 100 101 102 103 104 105 106 107 108 109
in_brackets (80)
    on left: 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97
    98 99 100 101 102 103 104 105 106 107, on right: 79
assignment (81)
    on left: 108 109, on right: 10 37
basic_types (82)
    on left: 110 111 112 113 114, on right: 47 48 115 116 120 125 133
    135 140 141 142 143
proc_def_arg_main (83)
    on left: 115 116, on right: 118 119
proc_def_arguments (84)
    on left: 117 118 119, on right: 119 123 124 134
arrays (85)
    on left: 120, on right: 51 126
array_brackets (86)
    on left: 121 122, on right: 48 120 122 141 143
subprogram_def (87)
    on left: 123 124, on right: 6 33
FuncReturnTypes (88)
    on left: 125 126, on right: 123 134
array_arg (89)
    on left: 127 128 129 130 131, on right: 122 128 129 130 131 137
type_def (90)
    on left: 132, on right: 12 39
type_def_body (91)
    on left: 133 134 135, on right: 132 138
typedef_array_brackets (92)
    on left: 136 137, on right: 135 137
after_type_def (93)
    on left: 138 139, on right: 133 134 135
var_declaration (94)
    on left: 140 141, on right: 13 40
var_decl_more (95)
    on left: 142 143 144, on right: 140 141 142 143
names (96)
    on left: 145 146, on right: 115 116 140 141 142 143 146


State 0

    0 $accept: . program $end
    1 program: . program_decl statement_list body '.'
    2 program_decl: . KW_PROGRAM IDENT ';'

    KW_PROGRAM  shift, and go to state 1

    program       go to state 2
    program_decl  go to state 3


State 1

    2 program_decl: KW_PROGRAM . IDENT ';'

    IDENT  shift, and go to state 4


State 2

    0 $accept: program . $end

    $end  shift, and go to state 5


State 3

    1 program: program_decl . statement_list body '.'
    4 statement_list: . %empty  [KW_BEGIN]
    5               | . statement statement_list
    6 statement: . subprogram_def
    7          | . proc_call ';'
    8          | . label_decl
    9          | . goto_statement
   10          | . assignment
   11          | . KW_RETURN
   12          | . type_def
   13          | . var_declaration
   14          | . loops
   15 loops: . if_statement
   16      | . for_statement
   17      | . while_statement
   18 if_statement: . KW_IF expression KW_THEN KW_BEGIN statement_list KW_END ';'
   19             | . KW_IF expression KW_THEN KW_BEGIN statement_list KW_END ';' KW_ELSE KW_BEGIN statement_list KW_END ';'
   20             | . KW_IF expression KW_THEN statement
   21             | . KW_IF expression KW_THEN statement KW_ELSE statement
   22             | . KW_IF expression KW_THEN statement KW_ELSE KW_BEGIN statement_list KW_END ';'
   23             | . KW_IF expression KW_THEN KW_BEGIN statement_list KW_END ';' KW_ELSE statement
   24 while_statement: . KW_WHILE expression KW_DO KW_BEGIN statement_list KW_END ';'
   25                | . KW_REPEAT KW_BEGIN statement_list KW_END ';' KW_UNTIL expression
   26                | . KW_WHILE expression KW_DO statement
   27                | . KW_REPEAT statement KW_UNTIL expression
   28 for_statement: . KW_FOR IDENT ASSIGN expression KW_TO expression KW_DO KW_BEGIN statement_list KW_END ';'
   29              | . KW_FOR IDENT ASSIGN expression KW_DOWNTO expression KW_DO KW_BEGIN statement_list KW_END ';'
   30              | . KW_FOR IDENT ASSIGN expression KW_TO expression KW_DO statement
   31              | . KW_FOR IDENT ASSIGN expression KW_DOWNTO expression KW_DO statement
   32 label_decl: . IDENT ':' label_body
   42 goto_statement: . KW_GOTO IDENT ';'
   43 proc_call: . IDENT '(' arguments ')'
  108 assignment: . IDENT ASSIGN expression ';'
  109           | . KW_RESULT ASSIGN expression ';'
  123 subprogram_def: . KW_FUNCTION IDENT '(' proc_def_arguments ')' ':' FuncReturnTypes ';' statement_list body ';'
  124               | . KW_PROCEDURE IDENT '(' proc_def_arguments ')' ';' statement_list body ';'
  132 type_def: . KW_TYPE type_def_body
  140 var_declaration: . KW_VAR names ':' basic_types var_decl_more
  141                | . KW_VAR names ':' ARRAY array_brackets KW_OF basic_types var_decl_more

    IDENT         shift, and go to state 6
    KW_FUNCTION   shift, and go to state 7
    KW_PROCEDURE  shift, and go to state 8
    KW_RESULT     shift, and go to state 9
    KW_GOTO       shift, and go to state 10
    KW_RETURN     shift, and go to state 11
    KW_IF         shift, and go to state 12
    KW_FOR        shift, and go to state 13
    KW_REPEAT     shift, and go to state 14
    KW_VAR        shift, and go to state 15
    KW_WHILE      shift, and go to state 16
    KW_TYPE       shift, and go to state 17

    $default  reduce using rule 4 (statement_list)

    statement_list   go to state 18
    statement        go to state 19
    loops            go to state 20
    if_statement     go to state 21
    while_statement  go to state 22
    for_statement    go to state 23
    label_decl       go to state 24
    goto_statement   go to state 25
    proc_call        go to state 26
    assignment       go to state 27
    subprogram_def   go to state 28
    type_def         go to state 29
    var_declaration  go to state 30


State 4

    2 program_decl: KW_PROGRAM IDENT . ';'

    ';'  shift, and go to state 31


State 5

    0 $accept: program $end .

    $default  accept


State 6

   32 label_decl: IDENT . ':' label_body
   43 proc_call: IDENT . '(' arguments ')'
  108 assignment: IDENT . ASSIGN expression ';'

    ASSIGN  shift, and go to state 32
    '('     shift, and go to state 33
    ':'     shift, and go to state 34


State 7

  123 subprogram_def: KW_FUNCTION . IDENT '(' proc_def_arguments ')' ':' FuncReturnTypes ';' statement_list body ';'

    IDENT  shift, and go to state 35


State 8

  124 subprogram_def: KW_PROCEDURE . IDENT '(' proc_def_arguments ')' ';' statement_list body ';'

    IDENT  shift, and go to state 36


State 9

  109 assignment: KW_RESULT . ASSIGN expression ';'

    ASSIGN  shift, and go to state 37


State 10

   42 goto_statement: KW_GOTO . IDENT ';'

    IDENT  shift, and go to state 38


State 11

   11 statement: KW_RETURN .

    $default  reduce using rule 11 (statement)


State 12

   18 if_statement: KW_IF . expression KW_THEN KW_BEGIN statement_list KW_END ';'
   19             | KW_IF . expression KW_THEN KW_BEGIN statement_list KW_END ';' KW_ELSE KW_BEGIN statement_list KW_END ';'
   20             | KW_IF . expression KW_THEN statement
   21             | KW_IF . expression KW_THEN statement KW_ELSE statement
   22             | KW_IF . expression KW_THEN statement KW_ELSE KW_BEGIN statement_list KW_END ';'
   23             | KW_IF . expression KW_THEN KW_BEGIN statement_list KW_END ';' KW_ELSE statement
   43 proc_call: . IDENT '(' arguments ')'
   47 casting: . '(' basic_types ')' expression
   48        | . '(' ARRAY array_brackets KW_OF basic_types ')' expression
   49 expression: . POSINT
   50           | . REAL
   51           | . arrays
   52           | . IDENT
   53           | . proc_call
   54           | . KW_RESULT
   55           | . STRING
   56           | . casting
   57           | . KW_TRUE
   58           | . KW_FALSE
   59           | . '+' expression
   60           | . '-' expression
   61           | . expression '*' expression
   62           | . expression '/' expression
   63           | . expression KW_DIV expression
   64           | . expression KW_MOD expression
   65           | . expression '+' expression
   66           | . expression '-' expression
   67           | . KW_NOT expression
   68           | . '!' expression
   69           | . expression '=' expression
   70           | . expression KW_DIFFERENT expression
   71           | . expression '<' expression
   72           | . expression '>' expression
   73           | . expression KW_LESS_OR_EQ expression
   74           | . expression KW_MORE_OR_EQ expression
   75           | . expression KW_AND expression
   76           | . expression KW_OR expression
   77           | . expression KW_AND_SYMB expression
   78           | . expression KW_OR_SYMB expression
   79           | . '(' in_brackets ')'
  120 arrays: . ARRAY array_brackets KW_OF basic_types

    IDENT      shift, and go to state 39
    POSINT     shift, and go to state 40
    REAL       shift, and go to state 41
    STRING     shift, and go to state 42
    KW_RESULT  shift, and go to state 43
    ARRAY      shift, and go to state 44
    KW_NOT     shift, and go to state 45
    KW_TRUE    shift, and go to state 46
    KW_FALSE   shift, and go to state 47
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '('        shift, and go to state 51

    proc_call   go to state 52
    casting     go to state 53
    expression  go to state 54
    arrays      go to state 55


State 13

   28 for_statement: KW_FOR . IDENT ASSIGN expression KW_TO expression KW_DO KW_BEGIN statement_list KW_END ';'
   29              | KW_FOR . IDENT ASSIGN expression KW_DOWNTO expression KW_DO KW_BEGIN statement_list KW_END ';'
   30              | KW_FOR . IDENT ASSIGN expression KW_TO expression KW_DO statement
   31              | KW_FOR . IDENT ASSIGN expression KW_DOWNTO expression KW_DO statement

    IDENT  shift, and go to state 56


State 14

    6 statement: . subprogram_def
    7          | . proc_call ';'
    8          | . label_decl
    9          | . goto_statement
   10          | . assignment
   11          | . KW_RETURN
   12          | . type_def
   13          | . var_declaration
   14          | . loops
   15 loops: . if_statement
   16      | . for_statement
   17      | . while_statement
   18 if_statement: . KW_IF expression KW_THEN KW_BEGIN statement_list KW_END ';'
   19             | . KW_IF expression KW_THEN KW_BEGIN statement_list KW_END ';' KW_ELSE KW_BEGIN statement_list KW_END ';'
   20             | . KW_IF expression KW_THEN statement
   21             | . KW_IF expression KW_THEN statement KW_ELSE statement
   22             | . KW_IF expression KW_THEN statement KW_ELSE KW_BEGIN statement_list KW_END ';'
   23             | . KW_IF expression KW_THEN KW_BEGIN statement_list KW_END ';' KW_ELSE statement
   24 while_statement: . KW_WHILE expression KW_DO KW_BEGIN statement_list KW_END ';'
   25                | . KW_REPEAT KW_BEGIN statement_list KW_END ';' KW_UNTIL expression
   25                | KW_REPEAT . KW_BEGIN statement_list KW_END ';' KW_UNTIL expression
   26                | . KW_WHILE expression KW_DO statement
   27                | . KW_REPEAT statement KW_UNTIL expression
   27                | KW_REPEAT . statement KW_UNTIL expression
   28 for_statement: . KW_FOR IDENT ASSIGN expression KW_TO expression KW_DO KW_BEGIN statement_list KW_END ';'
   29              | . KW_FOR IDENT ASSIGN expression KW_DOWNTO expression KW_DO KW_BEGIN statement_list KW_END ';'
   30              | . KW_FOR IDENT ASSIGN expression KW_TO expression KW_DO statement
   31              | . KW_FOR IDENT ASSIGN expression KW_DOWNTO expression KW_DO statement
   32 label_decl: . IDENT ':' label_body
   42 goto_statement: . KW_GOTO IDENT ';'
   43 proc_call: . IDENT '(' arguments ')'
  108 assignment: . IDENT ASSIGN expression ';'
  109           | . KW_RESULT ASSIGN expression ';'
  123 subprogram_def: . KW_FUNCTION IDENT '(' proc_def_arguments ')' ':' FuncReturnTypes ';' statement_list body ';'
  124               | . KW_PROCEDURE IDENT '(' proc_def_arguments ')' ';' statement_list body ';'
  132 type_def: . KW_TYPE type_def_body
  140 var_declaration: . KW_VAR names ':' basic_types var_decl_more
  141                | . KW_VAR names ':' ARRAY array_brackets KW_OF basic_types var_decl_more

    IDENT         shift, and go to state 6
    KW_BEGIN      shift, and go to state 57
    KW_FUNCTION   shift, and go to state 7
    KW_PROCEDURE  shift, and go to state 8
    KW_RESULT     shift, and go to state 9
    KW_GOTO       shift, and go to state 10
    KW_RETURN     shift, and go to state 11
    KW_IF         shift, and go to state 12
    KW_FOR        shift, and go to state 13
    KW_REPEAT     shift, and go to state 14
    KW_VAR        shift, and go to state 15
    KW_WHILE      shift, and go to state 16
    KW_TYPE       shift, and go to state 17

    statement        go to state 58
    loops            go to state 20
    if_statement     go to state 21
    while_statement  go to state 22
    for_statement    go to state 23
    label_decl       go to state 24
    goto_statement   go to state 25
    proc_call        go to state 26
    assignment       go to state 27
    subprogram_def   go to state 28
    type_def         go to state 29
    var_declaration  go to state 30


State 15

  140 var_declaration: KW_VAR . names ':' basic_types var_decl_more
  141                | KW_VAR . names ':' ARRAY array_brackets KW_OF basic_types var_decl_more
  145 names: . IDENT
  146      | . IDENT ',' names

    IDENT  shift, and go to state 59

    names  go to state 60


State 16

   24 while_statement: KW_WHILE . expression KW_DO KW_BEGIN statement_list KW_END ';'
   26                | KW_WHILE . expression KW_DO statement
   43 proc_call: . IDENT '(' arguments ')'
   47 casting: . '(' basic_types ')' expression
   48        | . '(' ARRAY array_brackets KW_OF basic_types ')' expression
   49 expression: . POSINT
   50           | . REAL
   51           | . arrays
   52           | . IDENT
   53           | . proc_call
   54           | . KW_RESULT
   55           | . STRING
   56           | . casting
   57           | . KW_TRUE
   58           | . KW_FALSE
   59           | . '+' expression
   60           | . '-' expression
   61           | . expression '*' expression
   62           | . expression '/' expression
   63           | . expression KW_DIV expression
   64           | . expression KW_MOD expression
   65           | . expression '+' expression
   66           | . expression '-' expression
   67           | . KW_NOT expression
   68           | . '!' expression
   69           | . expression '=' expression
   70           | . expression KW_DIFFERENT expression
   71           | . expression '<' expression
   72           | . expression '>' expression
   73           | . expression KW_LESS_OR_EQ expression
   74           | . expression KW_MORE_OR_EQ expression
   75           | . expression KW_AND expression
   76           | . expression KW_OR expression
   77           | . expression KW_AND_SYMB expression
   78           | . expression KW_OR_SYMB expression
   79           | . '(' in_brackets ')'
  120 arrays: . ARRAY array_brackets KW_OF basic_types

    IDENT      shift, and go to state 39
    POSINT     shift, and go to state 40
    REAL       shift, and go to state 41
    STRING     shift, and go to state 42
    KW_RESULT  shift, and go to state 43
    ARRAY      shift, and go to state 44
    KW_NOT     shift, and go to state 45
    KW_TRUE    shift, and go to state 46
    KW_FALSE   shift, and go to state 47
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '('        shift, and go to state 51

    proc_call   go to state 52
    casting     go to state 53
    expression  go to state 61
    arrays      go to state 55


State 17

  132 type_def: KW_TYPE . type_def_body
  133 type_def_body: . IDENT '=' basic_types after_type_def
  134              | . IDENT '=' KW_FUNCTION '(' proc_def_arguments ')' ':' FuncReturnTypes after_type_def
  135              | . IDENT '=' ARRAY typedef_array_brackets KW_OF basic_types after_type_def

    IDENT  shift, and go to state 62

    type_def_body  go to state 63


State 18

    1 program: program_decl statement_list . body '.'
    3 body: . KW_BEGIN statement_list KW_END

    KW_BEGIN  shift, and go to state 64

    body  go to state 65


State 19

    4 statement_list: . %empty  [KW_BEGIN, KW_END]
    5               | . statement statement_list
    5               | statement . statement_list
    6 statement: . subprogram_def
    7          | . proc_call ';'
    8          | . label_decl
    9          | . goto_statement
   10          | . assignment
   11          | . KW_RETURN
   12          | . type_def
   13          | . var_declaration
   14          | . loops
   15 loops: . if_statement
   16      | . for_statement
   17      | . while_statement
   18 if_statement: . KW_IF expression KW_THEN KW_BEGIN statement_list KW_END ';'
   19             | . KW_IF expression KW_THEN KW_BEGIN statement_list KW_END ';' KW_ELSE KW_BEGIN statement_list KW_END ';'
   20             | . KW_IF expression KW_THEN statement
   21             | . KW_IF expression KW_THEN statement KW_ELSE statement
   22             | . KW_IF expression KW_THEN statement KW_ELSE KW_BEGIN statement_list KW_END ';'
   23             | . KW_IF expression KW_THEN KW_BEGIN statement_list KW_END ';' KW_ELSE statement
   24 while_statement: . KW_WHILE expression KW_DO KW_BEGIN statement_list KW_END ';'
   25                | . KW_REPEAT KW_BEGIN statement_list KW_END ';' KW_UNTIL expression
   26                | . KW_WHILE expression KW_DO statement
   27                | . KW_REPEAT statement KW_UNTIL expression
   28 for_statement: . KW_FOR IDENT ASSIGN expression KW_TO expression KW_DO KW_BEGIN statement_list KW_END ';'
   29              | . KW_FOR IDENT ASSIGN expression KW_DOWNTO expression KW_DO KW_BEGIN statement_list KW_END ';'
   30              | . KW_FOR IDENT ASSIGN expression KW_TO expression KW_DO statement
   31              | . KW_FOR IDENT ASSIGN expression KW_DOWNTO expression KW_DO statement
   32 label_decl: . IDENT ':' label_body
   42 goto_statement: . KW_GOTO IDENT ';'
   43 proc_call: . IDENT '(' arguments ')'
  108 assignment: . IDENT ASSIGN expression ';'
  109           | . KW_RESULT ASSIGN expression ';'
  123 subprogram_def: . KW_FUNCTION IDENT '(' proc_def_arguments ')' ':' FuncReturnTypes ';' statement_list body ';'
  124               | . KW_PROCEDURE IDENT '(' proc_def_arguments ')' ';' statement_list body ';'
  132 type_def: . KW_TYPE type_def_body
  140 var_declaration: . KW_VAR names ':' basic_types var_decl_more
  141                | . KW_VAR names ':' ARRAY array_brackets KW_OF basic_types var_decl_more

    IDENT         shift, and go to state 6
    KW_FUNCTION   shift, and go to state 7
    KW_PROCEDURE  shift, and go to state 8
    KW_RESULT     shift, and go to state 9
    KW_GOTO       shift, and go to state 10
    KW_RETURN     shift, and go to state 11
    KW_IF         shift, and go to state 12
    KW_FOR        shift, and go to state 13
    KW_REPEAT     shift, and go to state 14
    KW_VAR        shift, and go to state 15
    KW_WHILE      shift, and go to state 16
    KW_TYPE       shift, and go to state 17

    $default  reduce using rule 4 (statement_list)

    statement_list   go to state 66
    statement        go to state 19
    loops            go to state 20
    if_statement     go to state 21
    while_statement  go to state 22
    for_statement    go to state 23
    label_decl       go to state 24
    goto_statement   go to state 25
    proc_call        go to state 26
    assignment       go to state 27
    subprogram_def   go to state 28
    type_def         go to state 29
    var_declaration  go to state 30


State 20

   14 statement: loops .

    $default  reduce using rule 14 (statement)


State 21

   15 loops: if_statement .

    $default  reduce using rule 15 (loops)


State 22

   17 loops: while_statement .

    $default  reduce using rule 17 (loops)


State 23

   16 loops: for_statement .

    $default  reduce using rule 16 (loops)


State 24

    8 statement: label_decl .

    $default  reduce using rule 8 (statement)


State 25

    9 statement: goto_statement .

    $default  reduce using rule 9 (statement)


State 26

    7 statement: proc_call . ';'

    ';'  shift, and go to state 67


State 27

   10 statement: assignment .

    $default  reduce using rule 10 (statement)


State 28

    6 statement: subprogram_def .

    $default  reduce using rule 6 (statement)


State 29

   12 statement: type_def .

    $default  reduce using rule 12 (statement)


State 30

   13 statement: var_declaration .

    $default  reduce using rule 13 (statement)


State 31

    2 program_decl: KW_PROGRAM IDENT ';' .

    $default  reduce using rule 2 (program_decl)


State 32

   43 proc_call: . IDENT '(' arguments ')'
   47 casting: . '(' basic_types ')' expression
   48        | . '(' ARRAY array_brackets KW_OF basic_types ')' expression
   49 expression: . POSINT
   50           | . REAL
   51           | . arrays
   52           | . IDENT
   53           | . proc_call
   54           | . KW_RESULT
   55           | . STRING
   56           | . casting
   57           | . KW_TRUE
   58           | . KW_FALSE
   59           | . '+' expression
   60           | . '-' expression
   61           | . expression '*' expression
   62           | . expression '/' expression
   63           | . expression KW_DIV expression
   64           | . expression KW_MOD expression
   65           | . expression '+' expression
   66           | . expression '-' expression
   67           | . KW_NOT expression
   68           | . '!' expression
   69           | . expression '=' expression
   70           | . expression KW_DIFFERENT expression
   71           | . expression '<' expression
   72           | . expression '>' expression
   73           | . expression KW_LESS_OR_EQ expression
   74           | . expression KW_MORE_OR_EQ expression
   75           | . expression KW_AND expression
   76           | . expression KW_OR expression
   77           | . expression KW_AND_SYMB expression
   78           | . expression KW_OR_SYMB expression
   79           | . '(' in_brackets ')'
  108 assignment: IDENT ASSIGN . expression ';'
  120 arrays: . ARRAY array_brackets KW_OF basic_types

    IDENT      shift, and go to state 39
    POSINT     shift, and go to state 40
    REAL       shift, and go to state 41
    STRING     shift, and go to state 42
    KW_RESULT  shift, and go to state 43
    ARRAY      shift, and go to state 44
    KW_NOT     shift, and go to state 45
    KW_TRUE    shift, and go to state 46
    KW_FALSE   shift, and go to state 47
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '('        shift, and go to state 51

    proc_call   go to state 52
    casting     go to state 53
    expression  go to state 68
    arrays      go to state 55


State 33

   43 proc_call: . IDENT '(' arguments ')'
   43          | IDENT '(' . arguments ')'
   44 arguments: . %empty  [')']
   45          | . expression
   46          | . expression ',' arguments
   47 casting: . '(' basic_types ')' expression
   48        | . '(' ARRAY array_brackets KW_OF basic_types ')' expression
   49 expression: . POSINT
   50           | . REAL
   51           | . arrays
   52           | . IDENT
   53           | . proc_call
   54           | . KW_RESULT
   55           | . STRING
   56           | . casting
   57           | . KW_TRUE
   58           | . KW_FALSE
   59           | . '+' expression
   60           | . '-' expression
   61           | . expression '*' expression
   62           | . expression '/' expression
   63           | . expression KW_DIV expression
   64           | . expression KW_MOD expression
   65           | . expression '+' expression
   66           | . expression '-' expression
   67           | . KW_NOT expression
   68           | . '!' expression
   69           | . expression '=' expression
   70           | . expression KW_DIFFERENT expression
   71           | . expression '<' expression
   72           | . expression '>' expression
   73           | . expression KW_LESS_OR_EQ expression
   74           | . expression KW_MORE_OR_EQ expression
   75           | . expression KW_AND expression
   76           | . expression KW_OR expression
   77           | . expression KW_AND_SYMB expression
   78           | . expression KW_OR_SYMB expression
   79           | . '(' in_brackets ')'
  120 arrays: . ARRAY array_brackets KW_OF basic_types

    IDENT      shift, and go to state 39
    POSINT     shift, and go to state 40
    REAL       shift, and go to state 41
    STRING     shift, and go to state 42
    KW_RESULT  shift, and go to state 43
    ARRAY      shift, and go to state 44
    KW_NOT     shift, and go to state 45
    KW_TRUE    shift, and go to state 46
    KW_FALSE   shift, and go to state 47
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '('        shift, and go to state 51

    $default  reduce using rule 44 (arguments)

    proc_call   go to state 52
    arguments   go to state 69
    casting     go to state 53
    expression  go to state 70
    arrays      go to state 55


State 34

   15 loops: . if_statement
   16      | . for_statement
   17      | . while_statement
   18 if_statement: . KW_IF expression KW_THEN KW_BEGIN statement_list KW_END ';'
   19             | . KW_IF expression KW_THEN KW_BEGIN statement_list KW_END ';' KW_ELSE KW_BEGIN statement_list KW_END ';'
   20             | . KW_IF expression KW_THEN statement
   21             | . KW_IF expression KW_THEN statement KW_ELSE statement
   22             | . KW_IF expression KW_THEN statement KW_ELSE KW_BEGIN statement_list KW_END ';'
   23             | . KW_IF expression KW_THEN KW_BEGIN statement_list KW_END ';' KW_ELSE statement
   24 while_statement: . KW_WHILE expression KW_DO KW_BEGIN statement_list KW_END ';'
   25                | . KW_REPEAT KW_BEGIN statement_list KW_END ';' KW_UNTIL expression
   26                | . KW_WHILE expression KW_DO statement
   27                | . KW_REPEAT statement KW_UNTIL expression
   28 for_statement: . KW_FOR IDENT ASSIGN expression KW_TO expression KW_DO KW_BEGIN statement_list KW_END ';'
   29              | . KW_FOR IDENT ASSIGN expression KW_DOWNTO expression KW_DO KW_BEGIN statement_list KW_END ';'
   30              | . KW_FOR IDENT ASSIGN expression KW_TO expression KW_DO statement
   31              | . KW_FOR IDENT ASSIGN expression KW_DOWNTO expression KW_DO statement
   32 label_decl: . IDENT ':' label_body
   32           | IDENT ':' . label_body
   33 label_body: . subprogram_def
   34           | . proc_call ';'
   35           | . label_decl ';'
   36           | . goto_statement
   37           | . assignment
   38           | . KW_RETURN
   39           | . type_def
   40           | . var_declaration
   41           | . loops
   42 goto_statement: . KW_GOTO IDENT ';'
   43 proc_call: . IDENT '(' arguments ')'
  108 assignment: . IDENT ASSIGN expression ';'
  109           | . KW_RESULT ASSIGN expression ';'
  123 subprogram_def: . KW_FUNCTION IDENT '(' proc_def_arguments ')' ':' FuncReturnTypes ';' statement_list body ';'
  124               | . KW_PROCEDURE IDENT '(' proc_def_arguments ')' ';' statement_list body ';'
  132 type_def: . KW_TYPE type_def_body
  140 var_declaration: . KW_VAR names ':' basic_types var_decl_more
  141                | . KW_VAR names ':' ARRAY array_brackets KW_OF basic_types var_decl_more

    IDENT         shift, and go to state 6
    KW_FUNCTION   shift, and go to state 7
    KW_PROCEDURE  shift, and go to state 8
    KW_RESULT     shift, and go to state 9
    KW_GOTO       shift, and go to state 10
    KW_RETURN     shift, and go to state 71
    KW_IF         shift, and go to state 12
    KW_FOR        shift, and go to state 13
    KW_REPEAT     shift, and go to state 14
    KW_VAR        shift, and go to state 15
    KW_WHILE      shift, and go to state 16
    KW_TYPE       shift, and go to state 17

    loops            go to state 72
    if_statement     go to state 21
    while_statement  go to state 22
    for_statement    go to state 23
    label_decl       go to state 73
    label_body       go to state 74
    goto_statement   go to state 75
    proc_call        go to state 76
    assignment       go to state 77
    subprogram_def   go to state 78
    type_def         go to state 79
    var_declaration  go to state 80


State 35

  123 subprogram_def: KW_FUNCTION IDENT . '(' proc_def_arguments ')' ':' FuncReturnTypes ';' statement_list body ';'

    '('  shift, and go to state 81


State 36

  124 subprogram_def: KW_PROCEDURE IDENT . '(' proc_def_arguments ')' ';' statement_list body ';'

    '('  shift, and go to state 82


State 37

   43 proc_call: . IDENT '(' arguments ')'
   47 casting: . '(' basic_types ')' expression
   48        | . '(' ARRAY array_brackets KW_OF basic_types ')' expression
   49 expression: . POSINT
   50           | . REAL
   51           | . arrays
   52           | . IDENT
   53           | . proc_call
   54           | . KW_RESULT
   55           | . STRING
   56           | . casting
   57           | . KW_TRUE
   58           | . KW_FALSE
   59           | . '+' expression
   60           | . '-' expression
   61           | . expression '*' expression
   62           | . expression '/' expression
   63           | . expression KW_DIV expression
   64           | . expression KW_MOD expression
   65           | . expression '+' expression
   66           | . expression '-' expression
   67           | . KW_NOT expression
   68           | . '!' expression
   69           | . expression '=' expression
   70           | . expression KW_DIFFERENT expression
   71           | . expression '<' expression
   72           | . expression '>' expression
   73           | . expression KW_LESS_OR_EQ expression
   74           | . expression KW_MORE_OR_EQ expression
   75           | . expression KW_AND expression
   76           | . expression KW_OR expression
   77           | . expression KW_AND_SYMB expression
   78           | . expression KW_OR_SYMB expression
   79           | . '(' in_brackets ')'
  109 assignment: KW_RESULT ASSIGN . expression ';'
  120 arrays: . ARRAY array_brackets KW_OF basic_types

    IDENT      shift, and go to state 39
    POSINT     shift, and go to state 40
    REAL       shift, and go to state 41
    STRING     shift, and go to state 42
    KW_RESULT  shift, and go to state 43
    ARRAY      shift, and go to state 44
    KW_NOT     shift, and go to state 45
    KW_TRUE    shift, and go to state 46
    KW_FALSE   shift, and go to state 47
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '('        shift, and go to state 51

    proc_call   go to state 52
    casting     go to state 53
    expression  go to state 83
    arrays      go to state 55


State 38

   42 goto_statement: KW_GOTO IDENT . ';'

    ';'  shift, and go to state 84


State 39

   43 proc_call: IDENT . '(' arguments ')'
   52 expression: IDENT .  [IDENT, KW_BEGIN, KW_END, KW_AND, KW_DIV, KW_FUNCTION, KW_MOD, KW_PROCEDURE, KW_RESULT, KW_DO, KW_GOTO, KW_RETURN, KW_ELSE, KW_IF, KW_THEN, KW_FOR, KW_OR, KW_REPEAT, KW_UNTIL, KW_VAR, KW_WHILE, KW_TO, KW_DOWNTO, KW_DIFFERENT, KW_LESS_OR_EQ, KW_MORE_OR_EQ, KW_AND_SYMB, KW_OR_SYMB, KW_TYPE, '<', '>', '=', '+', '-', '*', '/', ')', ';', ',']

    '('  shift, and go to state 33

    $default  reduce using rule 52 (expression)


State 40

   49 expression: POSINT .

    $default  reduce using rule 49 (expression)


State 41

   50 expression: REAL .

    $default  reduce using rule 50 (expression)


State 42

   55 expression: STRING .

    $default  reduce using rule 55 (expression)


State 43

   54 expression: KW_RESULT .

    $default  reduce using rule 54 (expression)


State 44

  120 arrays: ARRAY . array_brackets KW_OF basic_types
  121 array_brackets: . %empty  [KW_OF]
  122               | . '[' array_arg ']' array_brackets

    '['  shift, and go to state 85

    $default  reduce using rule 121 (array_brackets)

    array_brackets  go to state 86


State 45

   43 proc_call: . IDENT '(' arguments ')'
   47 casting: . '(' basic_types ')' expression
   48        | . '(' ARRAY array_brackets KW_OF basic_types ')' expression
   49 expression: . POSINT
   50           | . REAL
   51           | . arrays
   52           | . IDENT
   53           | . proc_call
   54           | . KW_RESULT
   55           | . STRING
   56           | . casting
   57           | . KW_TRUE
   58           | . KW_FALSE
   59           | . '+' expression
   60           | . '-' expression
   61           | . expression '*' expression
   62           | . expression '/' expression
   63           | . expression KW_DIV expression
   64           | . expression KW_MOD expression
   65           | . expression '+' expression
   66           | . expression '-' expression
   67           | . KW_NOT expression
   67           | KW_NOT . expression
   68           | . '!' expression
   69           | . expression '=' expression
   70           | . expression KW_DIFFERENT expression
   71           | . expression '<' expression
   72           | . expression '>' expression
   73           | . expression KW_LESS_OR_EQ expression
   74           | . expression KW_MORE_OR_EQ expression
   75           | . expression KW_AND expression
   76           | . expression KW_OR expression
   77           | . expression KW_AND_SYMB expression
   78           | . expression KW_OR_SYMB expression
   79           | . '(' in_brackets ')'
  120 arrays: . ARRAY array_brackets KW_OF basic_types

    IDENT      shift, and go to state 39
    POSINT     shift, and go to state 40
    REAL       shift, and go to state 41
    STRING     shift, and go to state 42
    KW_RESULT  shift, and go to state 43
    ARRAY      shift, and go to state 44
    KW_NOT     shift, and go to state 45
    KW_TRUE    shift, and go to state 46
    KW_FALSE   shift, and go to state 47
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '('        shift, and go to state 51

    proc_call   go to state 52
    casting     go to state 53
    expression  go to state 87
    arrays      go to state 55


State 46

   57 expression: KW_TRUE .

    $default  reduce using rule 57 (expression)


State 47

   58 expression: KW_FALSE .

    $default  reduce using rule 58 (expression)


State 48

   43 proc_call: . IDENT '(' arguments ')'
   47 casting: . '(' basic_types ')' expression
   48        | . '(' ARRAY array_brackets KW_OF basic_types ')' expression
   49 expression: . POSINT
   50           | . REAL
   51           | . arrays
   52           | . IDENT
   53           | . proc_call
   54           | . KW_RESULT
   55           | . STRING
   56           | . casting
   57           | . KW_TRUE
   58           | . KW_FALSE
   59           | . '+' expression
   59           | '+' . expression
   60           | . '-' expression
   61           | . expression '*' expression
   62           | . expression '/' expression
   63           | . expression KW_DIV expression
   64           | . expression KW_MOD expression
   65           | . expression '+' expression
   66           | . expression '-' expression
   67           | . KW_NOT expression
   68           | . '!' expression
   69           | . expression '=' expression
   70           | . expression KW_DIFFERENT expression
   71           | . expression '<' expression
   72           | . expression '>' expression
   73           | . expression KW_LESS_OR_EQ expression
   74           | . expression KW_MORE_OR_EQ expression
   75           | . expression KW_AND expression
   76           | . expression KW_OR expression
   77           | . expression KW_AND_SYMB expression
   78           | . expression KW_OR_SYMB expression
   79           | . '(' in_brackets ')'
  120 arrays: . ARRAY array_brackets KW_OF basic_types

    IDENT      shift, and go to state 39
    POSINT     shift, and go to state 40
    REAL       shift, and go to state 41
    STRING     shift, and go to state 42
    KW_RESULT  shift, and go to state 43
    ARRAY      shift, and go to state 44
    KW_NOT     shift, and go to state 45
    KW_TRUE    shift, and go to state 46
    KW_FALSE   shift, and go to state 47
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '('        shift, and go to state 51

    proc_call   go to state 52
    casting     go to state 53
    expression  go to state 88
    arrays      go to state 55


State 49

   43 proc_call: . IDENT '(' arguments ')'
   47 casting: . '(' basic_types ')' expression
   48        | . '(' ARRAY array_brackets KW_OF basic_types ')' expression
   49 expression: . POSINT
   50           | . REAL
   51           | . arrays
   52           | . IDENT
   53           | . proc_call
   54           | . KW_RESULT
   55           | . STRING
   56           | . casting
   57           | . KW_TRUE
   58           | . KW_FALSE
   59           | . '+' expression
   60           | . '-' expression
   60           | '-' . expression
   61           | . expression '*' expression
   62           | . expression '/' expression
   63           | . expression KW_DIV expression
   64           | . expression KW_MOD expression
   65           | . expression '+' expression
   66           | . expression '-' expression
   67           | . KW_NOT expression
   68           | . '!' expression
   69           | . expression '=' expression
   70           | . expression KW_DIFFERENT expression
   71           | . expression '<' expression
   72           | . expression '>' expression
   73           | . expression KW_LESS_OR_EQ expression
   74           | . expression KW_MORE_OR_EQ expression
   75           | . expression KW_AND expression
   76           | . expression KW_OR expression
   77           | . expression KW_AND_SYMB expression
   78           | . expression KW_OR_SYMB expression
   79           | . '(' in_brackets ')'
  120 arrays: . ARRAY array_brackets KW_OF basic_types

    IDENT      shift, and go to state 39
    POSINT     shift, and go to state 40
    REAL       shift, and go to state 41
    STRING     shift, and go to state 42
    KW_RESULT  shift, and go to state 43
    ARRAY      shift, and go to state 44
    KW_NOT     shift, and go to state 45
    KW_TRUE    shift, and go to state 46
    KW_FALSE   shift, and go to state 47
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '('        shift, and go to state 51

    proc_call   go to state 52
    casting     go to state 53
    expression  go to state 89
    arrays      go to state 55


State 50

   43 proc_call: . IDENT '(' arguments ')'
   47 casting: . '(' basic_types ')' expression
   48        | . '(' ARRAY array_brackets KW_OF basic_types ')' expression
   49 expression: . POSINT
   50           | . REAL
   51           | . arrays
   52           | . IDENT
   53           | . proc_call
   54           | . KW_RESULT
   55           | . STRING
   56           | . casting
   57           | . KW_TRUE
   58           | . KW_FALSE
   59           | . '+' expression
   60           | . '-' expression
   61           | . expression '*' expression
   62           | . expression '/' expression
   63           | . expression KW_DIV expression
   64           | . expression KW_MOD expression
   65           | . expression '+' expression
   66           | . expression '-' expression
   67           | . KW_NOT expression
   68           | . '!' expression
   68           | '!' . expression
   69           | . expression '=' expression
   70           | . expression KW_DIFFERENT expression
   71           | . expression '<' expression
   72           | . expression '>' expression
   73           | . expression KW_LESS_OR_EQ expression
   74           | . expression KW_MORE_OR_EQ expression
   75           | . expression KW_AND expression
   76           | . expression KW_OR expression
   77           | . expression KW_AND_SYMB expression
   78           | . expression KW_OR_SYMB expression
   79           | . '(' in_brackets ')'
  120 arrays: . ARRAY array_brackets KW_OF basic_types

    IDENT      shift, and go to state 39
    POSINT     shift, and go to state 40
    REAL       shift, and go to state 41
    STRING     shift, and go to state 42
    KW_RESULT  shift, and go to state 43
    ARRAY      shift, and go to state 44
    KW_NOT     shift, and go to state 45
    KW_TRUE    shift, and go to state 46
    KW_FALSE   shift, and go to state 47
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '('        shift, and go to state 51

    proc_call   go to state 52
    casting     go to state 53
    expression  go to state 90
    arrays      go to state 55


State 51

   43 proc_call: . IDENT '(' arguments ')'
   47 casting: . '(' basic_types ')' expression
   47        | '(' . basic_types ')' expression
   48        | . '(' ARRAY array_brackets KW_OF basic_types ')' expression
   48        | '(' . ARRAY array_brackets KW_OF basic_types ')' expression
   49 expression: . POSINT
   50           | . REAL
   51           | . arrays
   52           | . IDENT
   53           | . proc_call
   54           | . KW_RESULT
   55           | . STRING
   56           | . casting
   57           | . KW_TRUE
   58           | . KW_FALSE
   59           | . '+' expression
   60           | . '-' expression
   61           | . expression '*' expression
   62           | . expression '/' expression
   63           | . expression KW_DIV expression
   64           | . expression KW_MOD expression
   65           | . expression '+' expression
   66           | . expression '-' expression
   67           | . KW_NOT expression
   68           | . '!' expression
   69           | . expression '=' expression
   70           | . expression KW_DIFFERENT expression
   71           | . expression '<' expression
   72           | . expression '>' expression
   73           | . expression KW_LESS_OR_EQ expression
   74           | . expression KW_MORE_OR_EQ expression
   75           | . expression KW_AND expression
   76           | . expression KW_OR expression
   77           | . expression KW_AND_SYMB expression
   78           | . expression KW_OR_SYMB expression
   79           | . '(' in_brackets ')'
   79           | '(' . in_brackets ')'
   80 in_brackets: . POSINT
   81            | . REAL
   82            | . proc_call
   83            | . KW_RESULT
   84            | . STRING
   85            | . casting
   86            | . KW_TRUE
   87            | . KW_FALSE
   88            | . '+' expression
   89            | . '-' expression
   90            | . expression '*' expression
   91            | . expression '/' expression
   92            | . expression KW_DIV expression
   93            | . expression KW_MOD expression
   94            | . expression '+' expression
   95            | . expression '-' expression
   96            | . KW_NOT expression
   97            | . '!' expression
   98            | . expression '=' expression
   99            | . expression KW_DIFFERENT expression
  100            | . expression '<' expression
  101            | . expression '>' expression
  102            | . expression KW_LESS_OR_EQ expression
  103            | . expression KW_MORE_OR_EQ expression
  104            | . expression KW_AND expression
  105            | . expression KW_OR expression
  106            | . expression KW_AND_SYMB expression
  107            | . expression KW_OR_SYMB expression
  110 basic_types: . KW_BOOLEAN
  111            | . KW_INTEGER
  112            | . KW_REAL
  113            | . KW_CHAR
  114            | . IDENT
  120 arrays: . ARRAY array_brackets KW_OF basic_types

    IDENT       shift, and go to state 91
    POSINT      shift, and go to state 92
    REAL        shift, and go to state 93
    STRING      shift, and go to state 94
    KW_RESULT   shift, and go to state 95
    ARRAY       shift, and go to state 96
    KW_NOT      shift, and go to state 97
    KW_BOOLEAN  shift, and go to state 98
    KW_REAL     shift, and go to state 99
    KW_CHAR     shift, and go to state 100
    KW_INTEGER  shift, and go to state 101
    KW_TRUE     shift, and go to state 102
    KW_FALSE    shift, and go to state 103
    '+'         shift, and go to state 104
    '-'         shift, and go to state 105
    '!'         shift, and go to state 106
    '('         shift, and go to state 51

    proc_call    go to state 107
    casting      go to state 108
    expression   go to state 109
    in_brackets  go to state 110
    basic_types  go to state 111
    arrays       go to state 55


State 52

   53 expression: proc_call .

    $default  reduce using rule 53 (expression)


State 53

   56 expression: casting .

    $default  reduce using rule 56 (expression)


State 54

   18 if_statement: KW_IF expression . KW_THEN KW_BEGIN statement_list KW_END ';'
   19             | KW_IF expression . KW_THEN KW_BEGIN statement_list KW_END ';' KW_ELSE KW_BEGIN statement_list KW_END ';'
   20             | KW_IF expression . KW_THEN statement
   21             | KW_IF expression . KW_THEN statement KW_ELSE statement
   22             | KW_IF expression . KW_THEN statement KW_ELSE KW_BEGIN statement_list KW_END ';'
   23             | KW_IF expression . KW_THEN KW_BEGIN statement_list KW_END ';' KW_ELSE statement
   61 expression: expression . '*' expression
   62           | expression . '/' expression
   63           | expression . KW_DIV expression
   64           | expression . KW_MOD expression
   65           | expression . '+' expression
   66           | expression . '-' expression
   69           | expression . '=' expression
   70           | expression . KW_DIFFERENT expression
   71           | expression . '<' expression
   72           | expression . '>' expression
   73           | expression . KW_LESS_OR_EQ expression
   74           | expression . KW_MORE_OR_EQ expression
   75           | expression . KW_AND expression
   76           | expression . KW_OR expression
   77           | expression . KW_AND_SYMB expression
   78           | expression . KW_OR_SYMB expression

    KW_AND         shift, and go to state 112
    KW_DIV         shift, and go to state 113
    KW_MOD         shift, and go to state 114
    KW_THEN        shift, and go to state 115
    KW_OR          shift, and go to state 116
    KW_DIFFERENT   shift, and go to state 117
    KW_LESS_OR_EQ  shift, and go to state 118
    KW_MORE_OR_EQ  shift, and go to state 119
    KW_AND_SYMB    shift, and go to state 120
    KW_OR_SYMB     shift, and go to state 121
    '<'            shift, and go to state 122
    '>'            shift, and go to state 123
    '='            shift, and go to state 124
    '+'            shift, and go to state 125
    '-'            shift, and go to state 126
    '*'            shift, and go to state 127
    '/'            shift, and go to state 128


State 55

   51 expression: arrays .

    $default  reduce using rule 51 (expression)


State 56

   28 for_statement: KW_FOR IDENT . ASSIGN expression KW_TO expression KW_DO KW_BEGIN statement_list KW_END ';'
   29              | KW_FOR IDENT . ASSIGN expression KW_DOWNTO expression KW_DO KW_BEGIN statement_list KW_END ';'
   30              | KW_FOR IDENT . ASSIGN expression KW_TO expression KW_DO statement
   31              | KW_FOR IDENT . ASSIGN expression KW_DOWNTO expression KW_DO statement

    ASSIGN  shift, and go to state 129


State 57

    4 statement_list: . %empty  [KW_END]
    5               | . statement statement_list
    6 statement: . subprogram_def
    7          | . proc_call ';'
    8          | . label_decl
    9          | . goto_statement
   10          | . assignment
   11          | . KW_RETURN
   12          | . type_def
   13          | . var_declaration
   14          | . loops
   15 loops: . if_statement
   16      | . for_statement
   17      | . while_statement
   18 if_statement: . KW_IF expression KW_THEN KW_BEGIN statement_list KW_END ';'
   19             | . KW_IF expression KW_THEN KW_BEGIN statement_list KW_END ';' KW_ELSE KW_BEGIN statement_list KW_END ';'
   20             | . KW_IF expression KW_THEN statement
   21             | . KW_IF expression KW_THEN statement KW_ELSE statement
   22             | . KW_IF expression KW_THEN statement KW_ELSE KW_BEGIN statement_list KW_END ';'
   23             | . KW_IF expression KW_THEN KW_BEGIN statement_list KW_END ';' KW_ELSE statement
   24 while_statement: . KW_WHILE expression KW_DO KW_BEGIN statement_list KW_END ';'
   25                | . KW_REPEAT KW_BEGIN statement_list KW_END ';' KW_UNTIL expression
   25                | KW_REPEAT KW_BEGIN . statement_list KW_END ';' KW_UNTIL expression
   26                | . KW_WHILE expression KW_DO statement
   27                | . KW_REPEAT statement KW_UNTIL expression
   28 for_statement: . KW_FOR IDENT ASSIGN expression KW_TO expression KW_DO KW_BEGIN statement_list KW_END ';'
   29              | . KW_FOR IDENT ASSIGN expression KW_DOWNTO expression KW_DO KW_BEGIN statement_list KW_END ';'
   30              | . KW_FOR IDENT ASSIGN expression KW_TO expression KW_DO statement
   31              | . KW_FOR IDENT ASSIGN expression KW_DOWNTO expression KW_DO statement
   32 label_decl: . IDENT ':' label_body
   42 goto_statement: . KW_GOTO IDENT ';'
   43 proc_call: . IDENT '(' arguments ')'
  108 assignment: . IDENT ASSIGN expression ';'
  109           | . KW_RESULT ASSIGN expression ';'
  123 subprogram_def: . KW_FUNCTION IDENT '(' proc_def_arguments ')' ':' FuncReturnTypes ';' statement_list body ';'
  124               | . KW_PROCEDURE IDENT '(' proc_def_arguments ')' ';' statement_list body ';'
  132 type_def: . KW_TYPE type_def_body
  140 var_declaration: . KW_VAR names ':' basic_types var_decl_more
  141                | . KW_VAR names ':' ARRAY array_brackets KW_OF basic_types var_decl_more

    IDENT         shift, and go to state 6
    KW_FUNCTION   shift, and go to state 7
    KW_PROCEDURE  shift, and go to state 8
    KW_RESULT     shift, and go to state 9
    KW_GOTO       shift, and go to state 10
    KW_RETURN     shift, and go to state 11
    KW_IF         shift, and go to state 12
    KW_FOR        shift, and go to state 13
    KW_REPEAT     shift, and go to state 14
    KW_VAR        shift, and go to state 15
    KW_WHILE      shift, and go to state 16
    KW_TYPE       shift, and go to state 17

    $default  reduce using rule 4 (statement_list)

    statement_list   go to state 130
    statement        go to state 19
    loops            go to state 20
    if_statement     go to state 21
    while_statement  go to state 22
    for_statement    go to state 23
    label_decl       go to state 24
    goto_statement   go to state 25
    proc_call        go to state 26
    assignment       go to state 27
    subprogram_def   go to state 28
    type_def         go to state 29
    var_declaration  go to state 30


State 58

   27 while_statement: KW_REPEAT statement . KW_UNTIL expression

    KW_UNTIL  shift, and go to state 131


State 59

  145 names: IDENT .  [':']
  146      | IDENT . ',' names

    ','  shift, and go to state 132

    $default  reduce using rule 145 (names)


State 60

  140 var_declaration: KW_VAR names . ':' basic_types var_decl_more
  141                | KW_VAR names . ':' ARRAY array_brackets KW_OF basic_types var_decl_more

    ':'  shift, and go to state 133


State 61

   24 while_statement: KW_WHILE expression . KW_DO KW_BEGIN statement_list KW_END ';'
   26                | KW_WHILE expression . KW_DO statement
   61 expression: expression . '*' expression
   62           | expression . '/' expression
   63           | expression . KW_DIV expression
   64           | expression . KW_MOD expression
   65           | expression . '+' expression
   66           | expression . '-' expression
   69           | expression . '=' expression
   70           | expression . KW_DIFFERENT expression
   71           | expression . '<' expression
   72           | expression . '>' expression
   73           | expression . KW_LESS_OR_EQ expression
   74           | expression . KW_MORE_OR_EQ expression
   75           | expression . KW_AND expression
   76           | expression . KW_OR expression
   77           | expression . KW_AND_SYMB expression
   78           | expression . KW_OR_SYMB expression

    KW_AND         shift, and go to state 112
    KW_DIV         shift, and go to state 113
    KW_MOD         shift, and go to state 114
    KW_DO          shift, and go to state 134
    KW_OR          shift, and go to state 116
    KW_DIFFERENT   shift, and go to state 117
    KW_LESS_OR_EQ  shift, and go to state 118
    KW_MORE_OR_EQ  shift, and go to state 119
    KW_AND_SYMB    shift, and go to state 120
    KW_OR_SYMB     shift, and go to state 121
    '<'            shift, and go to state 122
    '>'            shift, and go to state 123
    '='            shift, and go to state 124
    '+'            shift, and go to state 125
    '-'            shift, and go to state 126
    '*'            shift, and go to state 127
    '/'            shift, and go to state 128


State 62

  133 type_def_body: IDENT . '=' basic_types after_type_def
  134              | IDENT . '=' KW_FUNCTION '(' proc_def_arguments ')' ':' FuncReturnTypes after_type_def
  135              | IDENT . '=' ARRAY typedef_array_brackets KW_OF basic_types after_type_def

    '='  shift, and go to state 135


State 63

  132 type_def: KW_TYPE type_def_body .

    $default  reduce using rule 132 (type_def)


State 64

    3 body: KW_BEGIN . statement_list KW_END
    4 statement_list: . %empty  [KW_END]
    5               | . statement statement_list
    6 statement: . subprogram_def
    7          | . proc_call ';'
    8          | . label_decl
    9          | . goto_statement
   10          | . assignment
   11          | . KW_RETURN
   12          | . type_def
   13          | . var_declaration
   14          | . loops
   15 loops: . if_statement
   16      | . for_statement
   17      | . while_statement
   18 if_statement: . KW_IF expression KW_THEN KW_BEGIN statement_list KW_END ';'
   19             | . KW_IF expression KW_THEN KW_BEGIN statement_list KW_END ';' KW_ELSE KW_BEGIN statement_list KW_END ';'
   20             | . KW_IF expression KW_THEN statement
   21             | . KW_IF expression KW_THEN statement KW_ELSE statement
   22             | . KW_IF expression KW_THEN statement KW_ELSE KW_BEGIN statement_list KW_END ';'
   23             | . KW_IF expression KW_THEN KW_BEGIN statement_list KW_END ';' KW_ELSE statement
   24 while_statement: . KW_WHILE expression KW_DO KW_BEGIN statement_list KW_END ';'
   25                | . KW_REPEAT KW_BEGIN statement_list KW_END ';' KW_UNTIL expression
   26                | . KW_WHILE expression KW_DO statement
   27                | . KW_REPEAT statement KW_UNTIL expression
   28 for_statement: . KW_FOR IDENT ASSIGN expression KW_TO expression KW_DO KW_BEGIN statement_list KW_END ';'
   29              | . KW_FOR IDENT ASSIGN expression KW_DOWNTO expression KW_DO KW_BEGIN statement_list KW_END ';'
   30              | . KW_FOR IDENT ASSIGN expression KW_TO expression KW_DO statement
   31              | . KW_FOR IDENT ASSIGN expression KW_DOWNTO expression KW_DO statement
   32 label_decl: . IDENT ':' label_body
   42 goto_statement: . KW_GOTO IDENT ';'
   43 proc_call: . IDENT '(' arguments ')'
  108 assignment: . IDENT ASSIGN expression ';'
  109           | . KW_RESULT ASSIGN expression ';'
  123 subprogram_def: . KW_FUNCTION IDENT '(' proc_def_arguments ')' ':' FuncReturnTypes ';' statement_list body ';'
  124               | . KW_PROCEDURE IDENT '(' proc_def_arguments ')' ';' statement_list body ';'
  132 type_def: . KW_TYPE type_def_body
  140 var_declaration: . KW_VAR names ':' basic_types var_decl_more
  141                | . KW_VAR names ':' ARRAY array_brackets KW_OF basic_types var_decl_more

    IDENT         shift, and go to state 6
    KW_FUNCTION   shift, and go to state 7
    KW_PROCEDURE  shift, and go to state 8
    KW_RESULT     shift, and go to state 9
    KW_GOTO       shift, and go to state 10
    KW_RETURN     shift, and go to state 11
    KW_IF         shift, and go to state 12
    KW_FOR        shift, and go to state 13
    KW_REPEAT     shift, and go to state 14
    KW_VAR        shift, and go to state 15
    KW_WHILE      shift, and go to state 16
    KW_TYPE       shift, and go to state 17

    $default  reduce using rule 4 (statement_list)

    statement_list   go to state 136
    statement        go to state 19
    loops            go to state 20
    if_statement     go to state 21
    while_statement  go to state 22
    for_statement    go to state 23
    label_decl       go to state 24
    goto_statement   go to state 25
    proc_call        go to state 26
    assignment       go to state 27
    subprogram_def   go to state 28
    type_def         go to state 29
    var_declaration  go to state 30


State 65

    1 program: program_decl statement_list body . '.'

    '.'  shift, and go to state 137


State 66

    5 statement_list: statement statement_list .

    $default  reduce using rule 5 (statement_list)


State 67

    7 statement: proc_call ';' .

    $default  reduce using rule 7 (statement)


State 68

   61 expression: expression . '*' expression
   62           | expression . '/' expression
   63           | expression . KW_DIV expression
   64           | expression . KW_MOD expression
   65           | expression . '+' expression
   66           | expression . '-' expression
   69           | expression . '=' expression
   70           | expression . KW_DIFFERENT expression
   71           | expression . '<' expression
   72           | expression . '>' expression
   73           | expression . KW_LESS_OR_EQ expression
   74           | expression . KW_MORE_OR_EQ expression
   75           | expression . KW_AND expression
   76           | expression . KW_OR expression
   77           | expression . KW_AND_SYMB expression
   78           | expression . KW_OR_SYMB expression
  108 assignment: IDENT ASSIGN expression . ';'

    KW_AND         shift, and go to state 112
    KW_DIV         shift, and go to state 113
    KW_MOD         shift, and go to state 114
    KW_OR          shift, and go to state 116
    KW_DIFFERENT   shift, and go to state 117
    KW_LESS_OR_EQ  shift, and go to state 118
    KW_MORE_OR_EQ  shift, and go to state 119
    KW_AND_SYMB    shift, and go to state 120
    KW_OR_SYMB     shift, and go to state 121
    '<'            shift, and go to state 122
    '>'            shift, and go to state 123
    '='            shift, and go to state 124
    '+'            shift, and go to state 125
    '-'            shift, and go to state 126
    '*'            shift, and go to state 127
    '/'            shift, and go to state 128
    ';'            shift, and go to state 138


State 69

   43 proc_call: IDENT '(' arguments . ')'

    ')'  shift, and go to state 139


State 70

   45 arguments: expression .  [')']
   46          | expression . ',' arguments
   61 expression: expression . '*' expression
   62           | expression . '/' expression
   63           | expression . KW_DIV expression
   64           | expression . KW_MOD expression
   65           | expression . '+' expression
   66           | expression . '-' expression
   69           | expression . '=' expression
   70           | expression . KW_DIFFERENT expression
   71           | expression . '<' expression
   72           | expression . '>' expression
   73           | expression . KW_LESS_OR_EQ expression
   74           | expression . KW_MORE_OR_EQ expression
   75           | expression . KW_AND expression
   76           | expression . KW_OR expression
   77           | expression . KW_AND_SYMB expression
   78           | expression . KW_OR_SYMB expression

    KW_AND         shift, and go to state 112
    KW_DIV         shift, and go to state 113
    KW_MOD         shift, and go to state 114
    KW_OR          shift, and go to state 116
    KW_DIFFERENT   shift, and go to state 117
    KW_LESS_OR_EQ  shift, and go to state 118
    KW_MORE_OR_EQ  shift, and go to state 119
    KW_AND_SYMB    shift, and go to state 120
    KW_OR_SYMB     shift, and go to state 121
    '<'            shift, and go to state 122
    '>'            shift, and go to state 123
    '='            shift, and go to state 124
    '+'            shift, and go to state 125
    '-'            shift, and go to state 126
    '*'            shift, and go to state 127
    '/'            shift, and go to state 128
    ','            shift, and go to state 140

    $default  reduce using rule 45 (arguments)


State 71

   38 label_body: KW_RETURN .

    $default  reduce using rule 38 (label_body)


State 72

   41 label_body: loops .

    $default  reduce using rule 41 (label_body)


State 73

   35 label_body: label_decl . ';'

    ';'  shift, and go to state 141


State 74

   32 label_decl: IDENT ':' label_body .

    $default  reduce using rule 32 (label_decl)


State 75

   36 label_body: goto_statement .

    $default  reduce using rule 36 (label_body)


State 76

   34 label_body: proc_call . ';'

    ';'  shift, and go to state 142


State 77

   37 label_body: assignment .

    $default  reduce using rule 37 (label_body)


State 78

   33 label_body: subprogram_def .

    $default  reduce using rule 33 (label_body)


State 79

   39 label_body: type_def .

    $default  reduce using rule 39 (label_body)


State 80

   40 label_body: var_declaration .

    $default  reduce using rule 40 (label_body)


State 81

  115 proc_def_arg_main: . names ':' ARRAY KW_OF basic_types
  116                  | . names ':' basic_types
  117 proc_def_arguments: . %empty  [')']
  118                   | . proc_def_arg_main
  119                   | . proc_def_arg_main ';' proc_def_arguments
  123 subprogram_def: KW_FUNCTION IDENT '(' . proc_def_arguments ')' ':' FuncReturnTypes ';' statement_list body ';'
  145 names: . IDENT
  146      | . IDENT ',' names

    IDENT  shift, and go to state 59

    $default  reduce using rule 117 (proc_def_arguments)

    proc_def_arg_main   go to state 143
    proc_def_arguments  go to state 144
    names               go to state 145


State 82

  115 proc_def_arg_main: . names ':' ARRAY KW_OF basic_types
  116                  | . names ':' basic_types
  117 proc_def_arguments: . %empty  [')']
  118                   | . proc_def_arg_main
  119                   | . proc_def_arg_main ';' proc_def_arguments
  124 subprogram_def: KW_PROCEDURE IDENT '(' . proc_def_arguments ')' ';' statement_list body ';'
  145 names: . IDENT
  146      | . IDENT ',' names

    IDENT  shift, and go to state 59

    $default  reduce using rule 117 (proc_def_arguments)

    proc_def_arg_main   go to state 143
    proc_def_arguments  go to state 146
    names               go to state 145


State 83

   61 expression: expression . '*' expression
   62           | expression . '/' expression
   63           | expression . KW_DIV expression
   64           | expression . KW_MOD expression
   65           | expression . '+' expression
   66           | expression . '-' expression
   69           | expression . '=' expression
   70           | expression . KW_DIFFERENT expression
   71           | expression . '<' expression
   72           | expression . '>' expression
   73           | expression . KW_LESS_OR_EQ expression
   74           | expression . KW_MORE_OR_EQ expression
   75           | expression . KW_AND expression
   76           | expression . KW_OR expression
   77           | expression . KW_AND_SYMB expression
   78           | expression . KW_OR_SYMB expression
  109 assignment: KW_RESULT ASSIGN expression . ';'

    KW_AND         shift, and go to state 112
    KW_DIV         shift, and go to state 113
    KW_MOD         shift, and go to state 114
    KW_OR          shift, and go to state 116
    KW_DIFFERENT   shift, and go to state 117
    KW_LESS_OR_EQ  shift, and go to state 118
    KW_MORE_OR_EQ  shift, and go to state 119
    KW_AND_SYMB    shift, and go to state 120
    KW_OR_SYMB     shift, and go to state 121
    '<'            shift, and go to state 122
    '>'            shift, and go to state 123
    '='            shift, and go to state 124
    '+'            shift, and go to state 125
    '-'            shift, and go to state 126
    '*'            shift, and go to state 127
    '/'            shift, and go to state 128
    ';'            shift, and go to state 147


State 84

   42 goto_statement: KW_GOTO IDENT ';' .

    $default  reduce using rule 42 (goto_statement)


State 85

  122 array_brackets: '[' . array_arg ']' array_brackets
  127 array_arg: . POSINT
  128          | . array_arg '+' array_arg
  129          | . array_arg '-' array_arg
  130          | . array_arg '*' array_arg
  131          | . array_arg '/' array_arg

    POSINT  shift, and go to state 148

    array_arg  go to state 149


State 86

  120 arrays: ARRAY array_brackets . KW_OF basic_types

    KW_OF  shift, and go to state 150


State 87

   61 expression: expression . '*' expression
   62           | expression . '/' expression
   63           | expression . KW_DIV expression
   64           | expression . KW_MOD expression
   65           | expression . '+' expression
   66           | expression . '-' expression
   67           | KW_NOT expression .  [IDENT, KW_BEGIN, KW_END, KW_AND, KW_DIV, KW_FUNCTION, KW_MOD, KW_PROCEDURE, KW_RESULT, KW_DO, KW_GOTO, KW_RETURN, KW_ELSE, KW_IF, KW_THEN, KW_FOR, KW_OR, KW_REPEAT, KW_UNTIL, KW_VAR, KW_WHILE, KW_TO, KW_DOWNTO, KW_DIFFERENT, KW_LESS_OR_EQ, KW_MORE_OR_EQ, KW_AND_SYMB, KW_OR_SYMB, KW_TYPE, '<', '>', '=', '+', '-', '*', '/', ')', ';', ',']
   69           | expression . '=' expression
   70           | expression . KW_DIFFERENT expression
   71           | expression . '<' expression
   72           | expression . '>' expression
   73           | expression . KW_LESS_OR_EQ expression
   74           | expression . KW_MORE_OR_EQ expression
   75           | expression . KW_AND expression
   76           | expression . KW_OR expression
   77           | expression . KW_AND_SYMB expression
   78           | expression . KW_OR_SYMB expression

    $default  reduce using rule 67 (expression)

    Conflict between rule 67 and token KW_AND resolved as reduce (KW_AND < KW_NOT).
    Conflict between rule 67 and token KW_DIV resolved as reduce (KW_DIV < KW_NOT).
    Conflict between rule 67 and token KW_MOD resolved as reduce (KW_MOD < KW_NOT).
    Conflict between rule 67 and token KW_OR resolved as reduce (KW_OR < KW_NOT).
    Conflict between rule 67 and token KW_DIFFERENT resolved as reduce (KW_DIFFERENT < KW_NOT).
    Conflict between rule 67 and token KW_LESS_OR_EQ resolved as reduce (KW_LESS_OR_EQ < KW_NOT).
    Conflict between rule 67 and token KW_MORE_OR_EQ resolved as reduce (KW_MORE_OR_EQ < KW_NOT).
    Conflict between rule 67 and token KW_AND_SYMB resolved as reduce (KW_AND_SYMB < KW_NOT).
    Conflict between rule 67 and token KW_OR_SYMB resolved as reduce (KW_OR_SYMB < KW_NOT).
    Conflict between rule 67 and token '<' resolved as reduce ('<' < KW_NOT).
    Conflict between rule 67 and token '>' resolved as reduce ('>' < KW_NOT).
    Conflict between rule 67 and token '=' resolved as reduce ('=' < KW_NOT).
    Conflict between rule 67 and token '+' resolved as reduce ('+' < KW_NOT).
    Conflict between rule 67 and token '-' resolved as reduce ('-' < KW_NOT).
    Conflict between rule 67 and token '*' resolved as reduce ('*' < KW_NOT).
    Conflict between rule 67 and token '/' resolved as reduce ('/' < KW_NOT).


State 88

   59 expression: '+' expression .  [IDENT, KW_BEGIN, KW_END, KW_AND, KW_FUNCTION, KW_PROCEDURE, KW_RESULT, KW_DO, KW_GOTO, KW_RETURN, KW_ELSE, KW_IF, KW_THEN, KW_FOR, KW_OR, KW_REPEAT, KW_UNTIL, KW_VAR, KW_WHILE, KW_TO, KW_DOWNTO, KW_DIFFERENT, KW_LESS_OR_EQ, KW_MORE_OR_EQ, KW_AND_SYMB, KW_OR_SYMB, KW_TYPE, '<', '>', '=', '+', '-', ')', ';', ',']
   61           | expression . '*' expression
   62           | expression . '/' expression
   63           | expression . KW_DIV expression
   64           | expression . KW_MOD expression
   65           | expression . '+' expression
   66           | expression . '-' expression
   69           | expression . '=' expression
   70           | expression . KW_DIFFERENT expression
   71           | expression . '<' expression
   72           | expression . '>' expression
   73           | expression . KW_LESS_OR_EQ expression
   74           | expression . KW_MORE_OR_EQ expression
   75           | expression . KW_AND expression
   76           | expression . KW_OR expression
   77           | expression . KW_AND_SYMB expression
   78           | expression . KW_OR_SYMB expression

    KW_DIV  shift, and go to state 113
    KW_MOD  shift, and go to state 114
    '*'     shift, and go to state 127
    '/'     shift, and go to state 128

    $default  reduce using rule 59 (expression)

    Conflict between rule 59 and token KW_AND resolved as reduce (KW_AND < '+').
    Conflict between rule 59 and token KW_DIV resolved as shift ('+' < KW_DIV).
    Conflict between rule 59 and token KW_MOD resolved as shift ('+' < KW_MOD).
    Conflict between rule 59 and token KW_OR resolved as reduce (KW_OR < '+').
    Conflict between rule 59 and token KW_DIFFERENT resolved as reduce (KW_DIFFERENT < '+').
    Conflict between rule 59 and token KW_LESS_OR_EQ resolved as reduce (KW_LESS_OR_EQ < '+').
    Conflict between rule 59 and token KW_MORE_OR_EQ resolved as reduce (KW_MORE_OR_EQ < '+').
    Conflict between rule 59 and token KW_AND_SYMB resolved as reduce (KW_AND_SYMB < '+').
    Conflict between rule 59 and token KW_OR_SYMB resolved as reduce (KW_OR_SYMB < '+').
    Conflict between rule 59 and token '<' resolved as reduce ('<' < '+').
    Conflict between rule 59 and token '>' resolved as reduce ('>' < '+').
    Conflict between rule 59 and token '=' resolved as reduce ('=' < '+').
    Conflict between rule 59 and token '+' resolved as reduce (%left '+').
    Conflict between rule 59 and token '-' resolved as reduce (%left '-').
    Conflict between rule 59 and token '*' resolved as shift ('+' < '*').
    Conflict between rule 59 and token '/' resolved as shift ('+' < '/').


State 89

   60 expression: '-' expression .  [IDENT, KW_BEGIN, KW_END, KW_AND, KW_FUNCTION, KW_PROCEDURE, KW_RESULT, KW_DO, KW_GOTO, KW_RETURN, KW_ELSE, KW_IF, KW_THEN, KW_FOR, KW_OR, KW_REPEAT, KW_UNTIL, KW_VAR, KW_WHILE, KW_TO, KW_DOWNTO, KW_DIFFERENT, KW_LESS_OR_EQ, KW_MORE_OR_EQ, KW_AND_SYMB, KW_OR_SYMB, KW_TYPE, '<', '>', '=', '+', '-', ')', ';', ',']
   61           | expression . '*' expression
   62           | expression . '/' expression
   63           | expression . KW_DIV expression
   64           | expression . KW_MOD expression
   65           | expression . '+' expression
   66           | expression . '-' expression
   69           | expression . '=' expression
   70           | expression . KW_DIFFERENT expression
   71           | expression . '<' expression
   72           | expression . '>' expression
   73           | expression . KW_LESS_OR_EQ expression
   74           | expression . KW_MORE_OR_EQ expression
   75           | expression . KW_AND expression
   76           | expression . KW_OR expression
   77           | expression . KW_AND_SYMB expression
   78           | expression . KW_OR_SYMB expression

    KW_DIV  shift, and go to state 113
    KW_MOD  shift, and go to state 114
    '*'     shift, and go to state 127
    '/'     shift, and go to state 128

    $default  reduce using rule 60 (expression)

    Conflict between rule 60 and token KW_AND resolved as reduce (KW_AND < '-').
    Conflict between rule 60 and token KW_DIV resolved as shift ('-' < KW_DIV).
    Conflict between rule 60 and token KW_MOD resolved as shift ('-' < KW_MOD).
    Conflict between rule 60 and token KW_OR resolved as reduce (KW_OR < '-').
    Conflict between rule 60 and token KW_DIFFERENT resolved as reduce (KW_DIFFERENT < '-').
    Conflict between rule 60 and token KW_LESS_OR_EQ resolved as reduce (KW_LESS_OR_EQ < '-').
    Conflict between rule 60 and token KW_MORE_OR_EQ resolved as reduce (KW_MORE_OR_EQ < '-').
    Conflict between rule 60 and token KW_AND_SYMB resolved as reduce (KW_AND_SYMB < '-').
    Conflict between rule 60 and token KW_OR_SYMB resolved as reduce (KW_OR_SYMB < '-').
    Conflict between rule 60 and token '<' resolved as reduce ('<' < '-').
    Conflict between rule 60 and token '>' resolved as reduce ('>' < '-').
    Conflict between rule 60 and token '=' resolved as reduce ('=' < '-').
    Conflict between rule 60 and token '+' resolved as reduce (%left '+').
    Conflict between rule 60 and token '-' resolved as reduce (%left '-').
    Conflict between rule 60 and token '*' resolved as shift ('-' < '*').
    Conflict between rule 60 and token '/' resolved as shift ('-' < '/').


State 90

   61 expression: expression . '*' expression
   62           | expression . '/' expression
   63           | expression . KW_DIV expression
   64           | expression . KW_MOD expression
   65           | expression . '+' expression
   66           | expression . '-' expression
   68           | '!' expression .  [IDENT, KW_BEGIN, KW_END, KW_AND, KW_DIV, KW_FUNCTION, KW_MOD, KW_PROCEDURE, KW_RESULT, KW_DO, KW_GOTO, KW_RETURN, KW_ELSE, KW_IF, KW_THEN, KW_FOR, KW_OR, KW_REPEAT, KW_UNTIL, KW_VAR, KW_WHILE, KW_TO, KW_DOWNTO, KW_DIFFERENT, KW_LESS_OR_EQ, KW_MORE_OR_EQ, KW_AND_SYMB, KW_OR_SYMB, KW_TYPE, '<', '>', '=', '+', '-', '*', '/', ')', ';', ',']
   69           | expression . '=' expression
   70           | expression . KW_DIFFERENT expression
   71           | expression . '<' expression
   72           | expression . '>' expression
   73           | expression . KW_LESS_OR_EQ expression
   74           | expression . KW_MORE_OR_EQ expression
   75           | expression . KW_AND expression
   76           | expression . KW_OR expression
   77           | expression . KW_AND_SYMB expression
   78           | expression . KW_OR_SYMB expression

    $default  reduce using rule 68 (expression)

    Conflict between rule 68 and token KW_AND resolved as reduce (KW_AND < '!').
    Conflict between rule 68 and token KW_DIV resolved as reduce (KW_DIV < '!').
    Conflict between rule 68 and token KW_MOD resolved as reduce (KW_MOD < '!').
    Conflict between rule 68 and token KW_OR resolved as reduce (KW_OR < '!').
    Conflict between rule 68 and token KW_DIFFERENT resolved as reduce (KW_DIFFERENT < '!').
    Conflict between rule 68 and token KW_LESS_OR_EQ resolved as reduce (KW_LESS_OR_EQ < '!').
    Conflict between rule 68 and token KW_MORE_OR_EQ resolved as reduce (KW_MORE_OR_EQ < '!').
    Conflict between rule 68 and token KW_AND_SYMB resolved as reduce (KW_AND_SYMB < '!').
    Conflict between rule 68 and token KW_OR_SYMB resolved as reduce (KW_OR_SYMB < '!').
    Conflict between rule 68 and token '<' resolved as reduce ('<' < '!').
    Conflict between rule 68 and token '>' resolved as reduce ('>' < '!').
    Conflict between rule 68 and token '=' resolved as reduce ('=' < '!').
    Conflict between rule 68 and token '+' resolved as reduce ('+' < '!').
    Conflict between rule 68 and token '-' resolved as reduce ('-' < '!').
    Conflict between rule 68 and token '*' resolved as reduce ('*' < '!').
    Conflict between rule 68 and token '/' resolved as reduce ('/' < '!').


State 91

   43 proc_call: IDENT . '(' arguments ')'
   52 expression: IDENT .  [KW_AND, KW_DIV, KW_MOD, KW_OR, KW_DIFFERENT, KW_LESS_OR_EQ, KW_MORE_OR_EQ, KW_AND_SYMB, KW_OR_SYMB, '<', '>', '=', '+', '-', '*', '/']
  114 basic_types: IDENT .  [')']

    '('  shift, and go to state 33

    ')'       reduce using rule 114 (basic_types)
    $default  reduce using rule 52 (expression)


State 92

   49 expression: POSINT .  [KW_AND, KW_DIV, KW_MOD, KW_OR, KW_DIFFERENT, KW_LESS_OR_EQ, KW_MORE_OR_EQ, KW_AND_SYMB, KW_OR_SYMB, '<', '>', '=', '+', '-', '*', '/']
   80 in_brackets: POSINT .  [')']

    ')'       reduce using rule 80 (in_brackets)
    $default  reduce using rule 49 (expression)


State 93

   50 expression: REAL .  [KW_AND, KW_DIV, KW_MOD, KW_OR, KW_DIFFERENT, KW_LESS_OR_EQ, KW_MORE_OR_EQ, KW_AND_SYMB, KW_OR_SYMB, '<', '>', '=', '+', '-', '*', '/']
   81 in_brackets: REAL .  [')']

    ')'       reduce using rule 81 (in_brackets)
    $default  reduce using rule 50 (expression)


State 94

   55 expression: STRING .  [KW_AND, KW_DIV, KW_MOD, KW_OR, KW_DIFFERENT, KW_LESS_OR_EQ, KW_MORE_OR_EQ, KW_AND_SYMB, KW_OR_SYMB, '<', '>', '=', '+', '-', '*', '/']
   84 in_brackets: STRING .  [')']

    ')'       reduce using rule 84 (in_brackets)
    $default  reduce using rule 55 (expression)


State 95

   54 expression: KW_RESULT .  [KW_AND, KW_DIV, KW_MOD, KW_OR, KW_DIFFERENT, KW_LESS_OR_EQ, KW_MORE_OR_EQ, KW_AND_SYMB, KW_OR_SYMB, '<', '>', '=', '+', '-', '*', '/']
   83 in_brackets: KW_RESULT .  [')']

    ')'       reduce using rule 83 (in_brackets)
    $default  reduce using rule 54 (expression)


State 96

   48 casting: '(' ARRAY . array_brackets KW_OF basic_types ')' expression
  120 arrays: ARRAY . array_brackets KW_OF basic_types
  121 array_brackets: . %empty  [KW_OF]
  122               | . '[' array_arg ']' array_brackets

    '['  shift, and go to state 85

    $default  reduce using rule 121 (array_brackets)

    array_brackets  go to state 151


State 97

   43 proc_call: . IDENT '(' arguments ')'
   47 casting: . '(' basic_types ')' expression
   48        | . '(' ARRAY array_brackets KW_OF basic_types ')' expression
   49 expression: . POSINT
   50           | . REAL
   51           | . arrays
   52           | . IDENT
   53           | . proc_call
   54           | . KW_RESULT
   55           | . STRING
   56           | . casting
   57           | . KW_TRUE
   58           | . KW_FALSE
   59           | . '+' expression
   60           | . '-' expression
   61           | . expression '*' expression
   62           | . expression '/' expression
   63           | . expression KW_DIV expression
   64           | . expression KW_MOD expression
   65           | . expression '+' expression
   66           | . expression '-' expression
   67           | . KW_NOT expression
   67           | KW_NOT . expression
   68           | . '!' expression
   69           | . expression '=' expression
   70           | . expression KW_DIFFERENT expression
   71           | . expression '<' expression
   72           | . expression '>' expression
   73           | . expression KW_LESS_OR_EQ expression
   74           | . expression KW_MORE_OR_EQ expression
   75           | . expression KW_AND expression
   76           | . expression KW_OR expression
   77           | . expression KW_AND_SYMB expression
   78           | . expression KW_OR_SYMB expression
   79           | . '(' in_brackets ')'
   96 in_brackets: KW_NOT . expression
  120 arrays: . ARRAY array_brackets KW_OF basic_types

    IDENT      shift, and go to state 39
    POSINT     shift, and go to state 40
    REAL       shift, and go to state 41
    STRING     shift, and go to state 42
    KW_RESULT  shift, and go to state 43
    ARRAY      shift, and go to state 44
    KW_NOT     shift, and go to state 45
    KW_TRUE    shift, and go to state 46
    KW_FALSE   shift, and go to state 47
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '('        shift, and go to state 51

    proc_call   go to state 52
    casting     go to state 53
    expression  go to state 152
    arrays      go to state 55


State 98

  110 basic_types: KW_BOOLEAN .

    $default  reduce using rule 110 (basic_types)


State 99

  112 basic_types: KW_REAL .

    $default  reduce using rule 112 (basic_types)


State 100

  113 basic_types: KW_CHAR .

    $default  reduce using rule 113 (basic_types)


State 101

  111 basic_types: KW_INTEGER .

    $default  reduce using rule 111 (basic_types)


State 102

   57 expression: KW_TRUE .  [KW_AND, KW_DIV, KW_MOD, KW_OR, KW_DIFFERENT, KW_LESS_OR_EQ, KW_MORE_OR_EQ, KW_AND_SYMB, KW_OR_SYMB, '<', '>', '=', '+', '-', '*', '/']
   86 in_brackets: KW_TRUE .  [')']

    ')'       reduce using rule 86 (in_brackets)
    $default  reduce using rule 57 (expression)


State 103

   58 expression: KW_FALSE .  [KW_AND, KW_DIV, KW_MOD, KW_OR, KW_DIFFERENT, KW_LESS_OR_EQ, KW_MORE_OR_EQ, KW_AND_SYMB, KW_OR_SYMB, '<', '>', '=', '+', '-', '*', '/']
   87 in_brackets: KW_FALSE .  [')']

    ')'       reduce using rule 87 (in_brackets)
    $default  reduce using rule 58 (expression)


State 104

   43 proc_call: . IDENT '(' arguments ')'
   47 casting: . '(' basic_types ')' expression
   48        | . '(' ARRAY array_brackets KW_OF basic_types ')' expression
   49 expression: . POSINT
   50           | . REAL
   51           | . arrays
   52           | . IDENT
   53           | . proc_call
   54           | . KW_RESULT
   55           | . STRING
   56           | . casting
   57           | . KW_TRUE
   58           | . KW_FALSE
   59           | . '+' expression
   59           | '+' . expression
   60           | . '-' expression
   61           | . expression '*' expression
   62           | . expression '/' expression
   63           | . expression KW_DIV expression
   64           | . expression KW_MOD expression
   65           | . expression '+' expression
   66           | . expression '-' expression
   67           | . KW_NOT expression
   68           | . '!' expression
   69           | . expression '=' expression
   70           | . expression KW_DIFFERENT expression
   71           | . expression '<' expression
   72           | . expression '>' expression
   73           | . expression KW_LESS_OR_EQ expression
   74           | . expression KW_MORE_OR_EQ expression
   75           | . expression KW_AND expression
   76           | . expression KW_OR expression
   77           | . expression KW_AND_SYMB expression
   78           | . expression KW_OR_SYMB expression
   79           | . '(' in_brackets ')'
   88 in_brackets: '+' . expression
  120 arrays: . ARRAY array_brackets KW_OF basic_types

    IDENT      shift, and go to state 39
    POSINT     shift, and go to state 40
    REAL       shift, and go to state 41
    STRING     shift, and go to state 42
    KW_RESULT  shift, and go to state 43
    ARRAY      shift, and go to state 44
    KW_NOT     shift, and go to state 45
    KW_TRUE    shift, and go to state 46
    KW_FALSE   shift, and go to state 47
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '('        shift, and go to state 51

    proc_call   go to state 52
    casting     go to state 53
    expression  go to state 153
    arrays      go to state 55


State 105

   43 proc_call: . IDENT '(' arguments ')'
   47 casting: . '(' basic_types ')' expression
   48        | . '(' ARRAY array_brackets KW_OF basic_types ')' expression
   49 expression: . POSINT
   50           | . REAL
   51           | . arrays
   52           | . IDENT
   53           | . proc_call
   54           | . KW_RESULT
   55           | . STRING
   56           | . casting
   57           | . KW_TRUE
   58           | . KW_FALSE
   59           | . '+' expression
   60           | . '-' expression
   60           | '-' . expression
   61           | . expression '*' expression
   62           | . expression '/' expression
   63           | . expression KW_DIV expression
   64           | . expression KW_MOD expression
   65           | . expression '+' expression
   66           | . expression '-' expression
   67           | . KW_NOT expression
   68           | . '!' expression
   69           | . expression '=' expression
   70           | . expression KW_DIFFERENT expression
   71           | . expression '<' expression
   72           | . expression '>' expression
   73           | . expression KW_LESS_OR_EQ expression
   74           | . expression KW_MORE_OR_EQ expression
   75           | . expression KW_AND expression
   76           | . expression KW_OR expression
   77           | . expression KW_AND_SYMB expression
   78           | . expression KW_OR_SYMB expression
   79           | . '(' in_brackets ')'
   89 in_brackets: '-' . expression
  120 arrays: . ARRAY array_brackets KW_OF basic_types

    IDENT      shift, and go to state 39
    POSINT     shift, and go to state 40
    REAL       shift, and go to state 41
    STRING     shift, and go to state 42
    KW_RESULT  shift, and go to state 43
    ARRAY      shift, and go to state 44
    KW_NOT     shift, and go to state 45
    KW_TRUE    shift, and go to state 46
    KW_FALSE   shift, and go to state 47
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '('        shift, and go to state 51

    proc_call   go to state 52
    casting     go to state 53
    expression  go to state 154
    arrays      go to state 55


State 106

   43 proc_call: . IDENT '(' arguments ')'
   47 casting: . '(' basic_types ')' expression
   48        | . '(' ARRAY array_brackets KW_OF basic_types ')' expression
   49 expression: . POSINT
   50           | . REAL
   51           | . arrays
   52           | . IDENT
   53           | . proc_call
   54           | . KW_RESULT
   55           | . STRING
   56           | . casting
   57           | . KW_TRUE
   58           | . KW_FALSE
   59           | . '+' expression
   60           | . '-' expression
   61           | . expression '*' expression
   62           | . expression '/' expression
   63           | . expression KW_DIV expression
   64           | . expression KW_MOD expression
   65           | . expression '+' expression
   66           | . expression '-' expression
   67           | . KW_NOT expression
   68           | . '!' expression
   68           | '!' . expression
   69           | . expression '=' expression
   70           | . expression KW_DIFFERENT expression
   71           | . expression '<' expression
   72           | . expression '>' expression
   73           | . expression KW_LESS_OR_EQ expression
   74           | . expression KW_MORE_OR_EQ expression
   75           | . expression KW_AND expression
   76           | . expression KW_OR expression
   77           | . expression KW_AND_SYMB expression
   78           | . expression KW_OR_SYMB expression
   79           | . '(' in_brackets ')'
   97 in_brackets: '!' . expression
  120 arrays: . ARRAY array_brackets KW_OF basic_types

    IDENT      shift, and go to state 39
    POSINT     shift, and go to state 40
    REAL       shift, and go to state 41
    STRING     shift, and go to state 42
    KW_RESULT  shift, and go to state 43
    ARRAY      shift, and go to state 44
    KW_NOT     shift, and go to state 45
    KW_TRUE    shift, and go to state 46
    KW_FALSE   shift, and go to state 47
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '('        shift, and go to state 51

    proc_call   go to state 52
    casting     go to state 53
    expression  go to state 155
    arrays      go to state 55


State 107

   53 expression: proc_call .  [KW_AND, KW_DIV, KW_MOD, KW_OR, KW_DIFFERENT, KW_LESS_OR_EQ, KW_MORE_OR_EQ, KW_AND_SYMB, KW_OR_SYMB, '<', '>', '=', '+', '-', '*', '/']
   82 in_brackets: proc_call .  [')']

    ')'       reduce using rule 82 (in_brackets)
    $default  reduce using rule 53 (expression)


State 108

   56 expression: casting .  [KW_AND, KW_DIV, KW_MOD, KW_OR, KW_DIFFERENT, KW_LESS_OR_EQ, KW_MORE_OR_EQ, KW_AND_SYMB, KW_OR_SYMB, '<', '>', '=', '+', '-', '*', '/']
   85 in_brackets: casting .  [')']

    ')'       reduce using rule 85 (in_brackets)
    $default  reduce using rule 56 (expression)


State 109

   61 expression: expression . '*' expression
   62           | expression . '/' expression
   63           | expression . KW_DIV expression
   64           | expression . KW_MOD expression
   65           | expression . '+' expression
   66           | expression . '-' expression
   69           | expression . '=' expression
   70           | expression . KW_DIFFERENT expression
   71           | expression . '<' expression
   72           | expression . '>' expression
   73           | expression . KW_LESS_OR_EQ expression
   74           | expression . KW_MORE_OR_EQ expression
   75           | expression . KW_AND expression
   76           | expression . KW_OR expression
   77           | expression . KW_AND_SYMB expression
   78           | expression . KW_OR_SYMB expression
   90 in_brackets: expression . '*' expression
   91            | expression . '/' expression
   92            | expression . KW_DIV expression
   93            | expression . KW_MOD expression
   94            | expression . '+' expression
   95            | expression . '-' expression
   98            | expression . '=' expression
   99            | expression . KW_DIFFERENT expression
  100            | expression . '<' expression
  101            | expression . '>' expression
  102            | expression . KW_LESS_OR_EQ expression
  103            | expression . KW_MORE_OR_EQ expression
  104            | expression . KW_AND expression
  105            | expression . KW_OR expression
  106            | expression . KW_AND_SYMB expression
  107            | expression . KW_OR_SYMB expression

    KW_AND         shift, and go to state 156
    KW_DIV         shift, and go to state 157
    KW_MOD         shift, and go to state 158
    KW_OR          shift, and go to state 159
    KW_DIFFERENT   shift, and go to state 160
    KW_LESS_OR_EQ  shift, and go to state 161
    KW_MORE_OR_EQ  shift, and go to state 162
    KW_AND_SYMB    shift, and go to state 163
    KW_OR_SYMB     shift, and go to state 164
    '<'            shift, and go to state 165
    '>'            shift, and go to state 166
    '='            shift, and go to state 167
    '+'            shift, and go to state 168
    '-'            shift, and go to state 169
    '*'            shift, and go to state 170
    '/'            shift, and go to state 171


State 110

   79 expression: '(' in_brackets . ')'

    ')'  shift, and go to state 172


State 111

   47 casting: '(' basic_types . ')' expression

    ')'  shift, and go to state 173


State 112

   43 proc_call: . IDENT '(' arguments ')'
   47 casting: . '(' basic_types ')' expression
   48        | . '(' ARRAY array_brackets KW_OF basic_types ')' expression
   49 expression: . POSINT
   50           | . REAL
   51           | . arrays
   52           | . IDENT
   53           | . proc_call
   54           | . KW_RESULT
   55           | . STRING
   56           | . casting
   57           | . KW_TRUE
   58           | . KW_FALSE
   59           | . '+' expression
   60           | . '-' expression
   61           | . expression '*' expression
   62           | . expression '/' expression
   63           | . expression KW_DIV expression
   64           | . expression KW_MOD expression
   65           | . expression '+' expression
   66           | . expression '-' expression
   67           | . KW_NOT expression
   68           | . '!' expression
   69           | . expression '=' expression
   70           | . expression KW_DIFFERENT expression
   71           | . expression '<' expression
   72           | . expression '>' expression
   73           | . expression KW_LESS_OR_EQ expression
   74           | . expression KW_MORE_OR_EQ expression
   75           | . expression KW_AND expression
   75           | expression KW_AND . expression
   76           | . expression KW_OR expression
   77           | . expression KW_AND_SYMB expression
   78           | . expression KW_OR_SYMB expression
   79           | . '(' in_brackets ')'
  120 arrays: . ARRAY array_brackets KW_OF basic_types

    IDENT      shift, and go to state 39
    POSINT     shift, and go to state 40
    REAL       shift, and go to state 41
    STRING     shift, and go to state 42
    KW_RESULT  shift, and go to state 43
    ARRAY      shift, and go to state 44
    KW_NOT     shift, and go to state 45
    KW_TRUE    shift, and go to state 46
    KW_FALSE   shift, and go to state 47
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '('        shift, and go to state 51

    proc_call   go to state 52
    casting     go to state 53
    expression  go to state 174
    arrays      go to state 55


State 113

   43 proc_call: . IDENT '(' arguments ')'
   47 casting: . '(' basic_types ')' expression
   48        | . '(' ARRAY array_brackets KW_OF basic_types ')' expression
   49 expression: . POSINT
   50           | . REAL
   51           | . arrays
   52           | . IDENT
   53           | . proc_call
   54           | . KW_RESULT
   55           | . STRING
   56           | . casting
   57           | . KW_TRUE
   58           | . KW_FALSE
   59           | . '+' expression
   60           | . '-' expression
   61           | . expression '*' expression
   62           | . expression '/' expression
   63           | . expression KW_DIV expression
   63           | expression KW_DIV . expression
   64           | . expression KW_MOD expression
   65           | . expression '+' expression
   66           | . expression '-' expression
   67           | . KW_NOT expression
   68           | . '!' expression
   69           | . expression '=' expression
   70           | . expression KW_DIFFERENT expression
   71           | . expression '<' expression
   72           | . expression '>' expression
   73           | . expression KW_LESS_OR_EQ expression
   74           | . expression KW_MORE_OR_EQ expression
   75           | . expression KW_AND expression
   76           | . expression KW_OR expression
   77           | . expression KW_AND_SYMB expression
   78           | . expression KW_OR_SYMB expression
   79           | . '(' in_brackets ')'
  120 arrays: . ARRAY array_brackets KW_OF basic_types

    IDENT      shift, and go to state 39
    POSINT     shift, and go to state 40
    REAL       shift, and go to state 41
    STRING     shift, and go to state 42
    KW_RESULT  shift, and go to state 43
    ARRAY      shift, and go to state 44
    KW_NOT     shift, and go to state 45
    KW_TRUE    shift, and go to state 46
    KW_FALSE   shift, and go to state 47
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '('        shift, and go to state 51

    proc_call   go to state 52
    casting     go to state 53
    expression  go to state 175
    arrays      go to state 55


State 114

   43 proc_call: . IDENT '(' arguments ')'
   47 casting: . '(' basic_types ')' expression
   48        | . '(' ARRAY array_brackets KW_OF basic_types ')' expression
   49 expression: . POSINT
   50           | . REAL
   51           | . arrays
   52           | . IDENT
   53           | . proc_call
   54           | . KW_RESULT
   55           | . STRING
   56           | . casting
   57           | . KW_TRUE
   58           | . KW_FALSE
   59           | . '+' expression
   60           | . '-' expression
   61           | . expression '*' expression
   62           | . expression '/' expression
   63           | . expression KW_DIV expression
   64           | . expression KW_MOD expression
   64           | expression KW_MOD . expression
   65           | . expression '+' expression
   66           | . expression '-' expression
   67           | . KW_NOT expression
   68           | . '!' expression
   69           | . expression '=' expression
   70           | . expression KW_DIFFERENT expression
   71           | . expression '<' expression
   72           | . expression '>' expression
   73           | . expression KW_LESS_OR_EQ expression
   74           | . expression KW_MORE_OR_EQ expression
   75           | . expression KW_AND expression
   76           | . expression KW_OR expression
   77           | . expression KW_AND_SYMB expression
   78           | . expression KW_OR_SYMB expression
   79           | . '(' in_brackets ')'
  120 arrays: . ARRAY array_brackets KW_OF basic_types

    IDENT      shift, and go to state 39
    POSINT     shift, and go to state 40
    REAL       shift, and go to state 41
    STRING     shift, and go to state 42
    KW_RESULT  shift, and go to state 43
    ARRAY      shift, and go to state 44
    KW_NOT     shift, and go to state 45
    KW_TRUE    shift, and go to state 46
    KW_FALSE   shift, and go to state 47
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '('        shift, and go to state 51

    proc_call   go to state 52
    casting     go to state 53
    expression  go to state 176
    arrays      go to state 55


State 115

    6 statement: . subprogram_def
    7          | . proc_call ';'
    8          | . label_decl
    9          | . goto_statement
   10          | . assignment
   11          | . KW_RETURN
   12          | . type_def
   13          | . var_declaration
   14          | . loops
   15 loops: . if_statement
   16      | . for_statement
   17      | . while_statement
   18 if_statement: . KW_IF expression KW_THEN KW_BEGIN statement_list KW_END ';'
   18             | KW_IF expression KW_THEN . KW_BEGIN statement_list KW_END ';'
   19             | . KW_IF expression KW_THEN KW_BEGIN statement_list KW_END ';' KW_ELSE KW_BEGIN statement_list KW_END ';'
   19             | KW_IF expression KW_THEN . KW_BEGIN statement_list KW_END ';' KW_ELSE KW_BEGIN statement_list KW_END ';'
   20             | . KW_IF expression KW_THEN statement
   20             | KW_IF expression KW_THEN . statement
   21             | . KW_IF expression KW_THEN statement KW_ELSE statement
   21             | KW_IF expression KW_THEN . statement KW_ELSE statement
   22             | . KW_IF expression KW_THEN statement KW_ELSE KW_BEGIN statement_list KW_END ';'
   22             | KW_IF expression KW_THEN . statement KW_ELSE KW_BEGIN statement_list KW_END ';'
   23             | . KW_IF expression KW_THEN KW_BEGIN statement_list KW_END ';' KW_ELSE statement
   23             | KW_IF expression KW_THEN . KW_BEGIN statement_list KW_END ';' KW_ELSE statement
   24 while_statement: . KW_WHILE expression KW_DO KW_BEGIN statement_list KW_END ';'
   25                | . KW_REPEAT KW_BEGIN statement_list KW_END ';' KW_UNTIL expression
   26                | . KW_WHILE expression KW_DO statement
   27                | . KW_REPEAT statement KW_UNTIL expression
   28 for_statement: . KW_FOR IDENT ASSIGN expression KW_TO expression KW_DO KW_BEGIN statement_list KW_END ';'
   29              | . KW_FOR IDENT ASSIGN expression KW_DOWNTO expression KW_DO KW_BEGIN statement_list KW_END ';'
   30              | . KW_FOR IDENT ASSIGN expression KW_TO expression KW_DO statement
   31              | . KW_FOR IDENT ASSIGN expression KW_DOWNTO expression KW_DO statement
   32 label_decl: . IDENT ':' label_body
   42 goto_statement: . KW_GOTO IDENT ';'
   43 proc_call: . IDENT '(' arguments ')'
  108 assignment: . IDENT ASSIGN expression ';'
  109           | . KW_RESULT ASSIGN expression ';'
  123 subprogram_def: . KW_FUNCTION IDENT '(' proc_def_arguments ')' ':' FuncReturnTypes ';' statement_list body ';'
  124               | . KW_PROCEDURE IDENT '(' proc_def_arguments ')' ';' statement_list body ';'
  132 type_def: . KW_TYPE type_def_body
  140 var_declaration: . KW_VAR names ':' basic_types var_decl_more
  141                | . KW_VAR names ':' ARRAY array_brackets KW_OF basic_types var_decl_more

    IDENT         shift, and go to state 6
    KW_BEGIN      shift, and go to state 177
    KW_FUNCTION   shift, and go to state 7
    KW_PROCEDURE  shift, and go to state 8
    KW_RESULT     shift, and go to state 9
    KW_GOTO       shift, and go to state 10
    KW_RETURN     shift, and go to state 11
    KW_IF         shift, and go to state 12
    KW_FOR        shift, and go to state 13
    KW_REPEAT     shift, and go to state 14
    KW_VAR        shift, and go to state 15
    KW_WHILE      shift, and go to state 16
    KW_TYPE       shift, and go to state 17

    statement        go to state 178
    loops            go to state 20
    if_statement     go to state 21
    while_statement  go to state 22
    for_statement    go to state 23
    label_decl       go to state 24
    goto_statement   go to state 25
    proc_call        go to state 26
    assignment       go to state 27
    subprogram_def   go to state 28
    type_def         go to state 29
    var_declaration  go to state 30


State 116

   43 proc_call: . IDENT '(' arguments ')'
   47 casting: . '(' basic_types ')' expression
   48        | . '(' ARRAY array_brackets KW_OF basic_types ')' expression
   49 expression: . POSINT
   50           | . REAL
   51           | . arrays
   52           | . IDENT
   53           | . proc_call
   54           | . KW_RESULT
   55           | . STRING
   56           | . casting
   57           | . KW_TRUE
   58           | . KW_FALSE
   59           | . '+' expression
   60           | . '-' expression
   61           | . expression '*' expression
   62           | . expression '/' expression
   63           | . expression KW_DIV expression
   64           | . expression KW_MOD expression
   65           | . expression '+' expression
   66           | . expression '-' expression
   67           | . KW_NOT expression
   68           | . '!' expression
   69           | . expression '=' expression
   70           | . expression KW_DIFFERENT expression
   71           | . expression '<' expression
   72           | . expression '>' expression
   73           | . expression KW_LESS_OR_EQ expression
   74           | . expression KW_MORE_OR_EQ expression
   75           | . expression KW_AND expression
   76           | . expression KW_OR expression
   76           | expression KW_OR . expression
   77           | . expression KW_AND_SYMB expression
   78           | . expression KW_OR_SYMB expression
   79           | . '(' in_brackets ')'
  120 arrays: . ARRAY array_brackets KW_OF basic_types

    IDENT      shift, and go to state 39
    POSINT     shift, and go to state 40
    REAL       shift, and go to state 41
    STRING     shift, and go to state 42
    KW_RESULT  shift, and go to state 43
    ARRAY      shift, and go to state 44
    KW_NOT     shift, and go to state 45
    KW_TRUE    shift, and go to state 46
    KW_FALSE   shift, and go to state 47
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '('        shift, and go to state 51

    proc_call   go to state 52
    casting     go to state 53
    expression  go to state 179
    arrays      go to state 55


State 117

   43 proc_call: . IDENT '(' arguments ')'
   47 casting: . '(' basic_types ')' expression
   48        | . '(' ARRAY array_brackets KW_OF basic_types ')' expression
   49 expression: . POSINT
   50           | . REAL
   51           | . arrays
   52           | . IDENT
   53           | . proc_call
   54           | . KW_RESULT
   55           | . STRING
   56           | . casting
   57           | . KW_TRUE
   58           | . KW_FALSE
   59           | . '+' expression
   60           | . '-' expression
   61           | . expression '*' expression
   62           | . expression '/' expression
   63           | . expression KW_DIV expression
   64           | . expression KW_MOD expression
   65           | . expression '+' expression
   66           | . expression '-' expression
   67           | . KW_NOT expression
   68           | . '!' expression
   69           | . expression '=' expression
   70           | . expression KW_DIFFERENT expression
   70           | expression KW_DIFFERENT . expression
   71           | . expression '<' expression
   72           | . expression '>' expression
   73           | . expression KW_LESS_OR_EQ expression
   74           | . expression KW_MORE_OR_EQ expression
   75           | . expression KW_AND expression
   76           | . expression KW_OR expression
   77           | . expression KW_AND_SYMB expression
   78           | . expression KW_OR_SYMB expression
   79           | . '(' in_brackets ')'
  120 arrays: . ARRAY array_brackets KW_OF basic_types

    IDENT      shift, and go to state 39
    POSINT     shift, and go to state 40
    REAL       shift, and go to state 41
    STRING     shift, and go to state 42
    KW_RESULT  shift, and go to state 43
    ARRAY      shift, and go to state 44
    KW_NOT     shift, and go to state 45
    KW_TRUE    shift, and go to state 46
    KW_FALSE   shift, and go to state 47
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '('        shift, and go to state 51

    proc_call   go to state 52
    casting     go to state 53
    expression  go to state 180
    arrays      go to state 55


State 118

   43 proc_call: . IDENT '(' arguments ')'
   47 casting: . '(' basic_types ')' expression
   48        | . '(' ARRAY array_brackets KW_OF basic_types ')' expression
   49 expression: . POSINT
   50           | . REAL
   51           | . arrays
   52           | . IDENT
   53           | . proc_call
   54           | . KW_RESULT
   55           | . STRING
   56           | . casting
   57           | . KW_TRUE
   58           | . KW_FALSE
   59           | . '+' expression
   60           | . '-' expression
   61           | . expression '*' expression
   62           | . expression '/' expression
   63           | . expression KW_DIV expression
   64           | . expression KW_MOD expression
   65           | . expression '+' expression
   66           | . expression '-' expression
   67           | . KW_NOT expression
   68           | . '!' expression
   69           | . expression '=' expression
   70           | . expression KW_DIFFERENT expression
   71           | . expression '<' expression
   72           | . expression '>' expression
   73           | . expression KW_LESS_OR_EQ expression
   73           | expression KW_LESS_OR_EQ . expression
   74           | . expression KW_MORE_OR_EQ expression
   75           | . expression KW_AND expression
   76           | . expression KW_OR expression
   77           | . expression KW_AND_SYMB expression
   78           | . expression KW_OR_SYMB expression
   79           | . '(' in_brackets ')'
  120 arrays: . ARRAY array_brackets KW_OF basic_types

    IDENT      shift, and go to state 39
    POSINT     shift, and go to state 40
    REAL       shift, and go to state 41
    STRING     shift, and go to state 42
    KW_RESULT  shift, and go to state 43
    ARRAY      shift, and go to state 44
    KW_NOT     shift, and go to state 45
    KW_TRUE    shift, and go to state 46
    KW_FALSE   shift, and go to state 47
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '('        shift, and go to state 51

    proc_call   go to state 52
    casting     go to state 53
    expression  go to state 181
    arrays      go to state 55


State 119

   43 proc_call: . IDENT '(' arguments ')'
   47 casting: . '(' basic_types ')' expression
   48        | . '(' ARRAY array_brackets KW_OF basic_types ')' expression
   49 expression: . POSINT
   50           | . REAL
   51           | . arrays
   52           | . IDENT
   53           | . proc_call
   54           | . KW_RESULT
   55           | . STRING
   56           | . casting
   57           | . KW_TRUE
   58           | . KW_FALSE
   59           | . '+' expression
   60           | . '-' expression
   61           | . expression '*' expression
   62           | . expression '/' expression
   63           | . expression KW_DIV expression
   64           | . expression KW_MOD expression
   65           | . expression '+' expression
   66           | . expression '-' expression
   67           | . KW_NOT expression
   68           | . '!' expression
   69           | . expression '=' expression
   70           | . expression KW_DIFFERENT expression
   71           | . expression '<' expression
   72           | . expression '>' expression
   73           | . expression KW_LESS_OR_EQ expression
   74           | . expression KW_MORE_OR_EQ expression
   74           | expression KW_MORE_OR_EQ . expression
   75           | . expression KW_AND expression
   76           | . expression KW_OR expression
   77           | . expression KW_AND_SYMB expression
   78           | . expression KW_OR_SYMB expression
   79           | . '(' in_brackets ')'
  120 arrays: . ARRAY array_brackets KW_OF basic_types

    IDENT      shift, and go to state 39
    POSINT     shift, and go to state 40
    REAL       shift, and go to state 41
    STRING     shift, and go to state 42
    KW_RESULT  shift, and go to state 43
    ARRAY      shift, and go to state 44
    KW_NOT     shift, and go to state 45
    KW_TRUE    shift, and go to state 46
    KW_FALSE   shift, and go to state 47
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '('        shift, and go to state 51

    proc_call   go to state 52
    casting     go to state 53
    expression  go to state 182
    arrays      go to state 55


State 120

   43 proc_call: . IDENT '(' arguments ')'
   47 casting: . '(' basic_types ')' expression
   48        | . '(' ARRAY array_brackets KW_OF basic_types ')' expression
   49 expression: . POSINT
   50           | . REAL
   51           | . arrays
   52           | . IDENT
   53           | . proc_call
   54           | . KW_RESULT
   55           | . STRING
   56           | . casting
   57           | . KW_TRUE
   58           | . KW_FALSE
   59           | . '+' expression
   60           | . '-' expression
   61           | . expression '*' expression
   62           | . expression '/' expression
   63           | . expression KW_DIV expression
   64           | . expression KW_MOD expression
   65           | . expression '+' expression
   66           | . expression '-' expression
   67           | . KW_NOT expression
   68           | . '!' expression
   69           | . expression '=' expression
   70           | . expression KW_DIFFERENT expression
   71           | . expression '<' expression
   72           | . expression '>' expression
   73           | . expression KW_LESS_OR_EQ expression
   74           | . expression KW_MORE_OR_EQ expression
   75           | . expression KW_AND expression
   76           | . expression KW_OR expression
   77           | . expression KW_AND_SYMB expression
   77           | expression KW_AND_SYMB . expression
   78           | . expression KW_OR_SYMB expression
   79           | . '(' in_brackets ')'
  120 arrays: . ARRAY array_brackets KW_OF basic_types

    IDENT      shift, and go to state 39
    POSINT     shift, and go to state 40
    REAL       shift, and go to state 41
    STRING     shift, and go to state 42
    KW_RESULT  shift, and go to state 43
    ARRAY      shift, and go to state 44
    KW_NOT     shift, and go to state 45
    KW_TRUE    shift, and go to state 46
    KW_FALSE   shift, and go to state 47
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '('        shift, and go to state 51

    proc_call   go to state 52
    casting     go to state 53
    expression  go to state 183
    arrays      go to state 55


State 121

   43 proc_call: . IDENT '(' arguments ')'
   47 casting: . '(' basic_types ')' expression
   48        | . '(' ARRAY array_brackets KW_OF basic_types ')' expression
   49 expression: . POSINT
   50           | . REAL
   51           | . arrays
   52           | . IDENT
   53           | . proc_call
   54           | . KW_RESULT
   55           | . STRING
   56           | . casting
   57           | . KW_TRUE
   58           | . KW_FALSE
   59           | . '+' expression
   60           | . '-' expression
   61           | . expression '*' expression
   62           | . expression '/' expression
   63           | . expression KW_DIV expression
   64           | . expression KW_MOD expression
   65           | . expression '+' expression
   66           | . expression '-' expression
   67           | . KW_NOT expression
   68           | . '!' expression
   69           | . expression '=' expression
   70           | . expression KW_DIFFERENT expression
   71           | . expression '<' expression
   72           | . expression '>' expression
   73           | . expression KW_LESS_OR_EQ expression
   74           | . expression KW_MORE_OR_EQ expression
   75           | . expression KW_AND expression
   76           | . expression KW_OR expression
   77           | . expression KW_AND_SYMB expression
   78           | . expression KW_OR_SYMB expression
   78           | expression KW_OR_SYMB . expression
   79           | . '(' in_brackets ')'
  120 arrays: . ARRAY array_brackets KW_OF basic_types

    IDENT      shift, and go to state 39
    POSINT     shift, and go to state 40
    REAL       shift, and go to state 41
    STRING     shift, and go to state 42
    KW_RESULT  shift, and go to state 43
    ARRAY      shift, and go to state 44
    KW_NOT     shift, and go to state 45
    KW_TRUE    shift, and go to state 46
    KW_FALSE   shift, and go to state 47
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '('        shift, and go to state 51

    proc_call   go to state 52
    casting     go to state 53
    expression  go to state 184
    arrays      go to state 55


State 122

   43 proc_call: . IDENT '(' arguments ')'
   47 casting: . '(' basic_types ')' expression
   48        | . '(' ARRAY array_brackets KW_OF basic_types ')' expression
   49 expression: . POSINT
   50           | . REAL
   51           | . arrays
   52           | . IDENT
   53           | . proc_call
   54           | . KW_RESULT
   55           | . STRING
   56           | . casting
   57           | . KW_TRUE
   58           | . KW_FALSE
   59           | . '+' expression
   60           | . '-' expression
   61           | . expression '*' expression
   62           | . expression '/' expression
   63           | . expression KW_DIV expression
   64           | . expression KW_MOD expression
   65           | . expression '+' expression
   66           | . expression '-' expression
   67           | . KW_NOT expression
   68           | . '!' expression
   69           | . expression '=' expression
   70           | . expression KW_DIFFERENT expression
   71           | . expression '<' expression
   71           | expression '<' . expression
   72           | . expression '>' expression
   73           | . expression KW_LESS_OR_EQ expression
   74           | . expression KW_MORE_OR_EQ expression
   75           | . expression KW_AND expression
   76           | . expression KW_OR expression
   77           | . expression KW_AND_SYMB expression
   78           | . expression KW_OR_SYMB expression
   79           | . '(' in_brackets ')'
  120 arrays: . ARRAY array_brackets KW_OF basic_types

    IDENT      shift, and go to state 39
    POSINT     shift, and go to state 40
    REAL       shift, and go to state 41
    STRING     shift, and go to state 42
    KW_RESULT  shift, and go to state 43
    ARRAY      shift, and go to state 44
    KW_NOT     shift, and go to state 45
    KW_TRUE    shift, and go to state 46
    KW_FALSE   shift, and go to state 47
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '('        shift, and go to state 51

    proc_call   go to state 52
    casting     go to state 53
    expression  go to state 185
    arrays      go to state 55


State 123

   43 proc_call: . IDENT '(' arguments ')'
   47 casting: . '(' basic_types ')' expression
   48        | . '(' ARRAY array_brackets KW_OF basic_types ')' expression
   49 expression: . POSINT
   50           | . REAL
   51           | . arrays
   52           | . IDENT
   53           | . proc_call
   54           | . KW_RESULT
   55           | . STRING
   56           | . casting
   57           | . KW_TRUE
   58           | . KW_FALSE
   59           | . '+' expression
   60           | . '-' expression
   61           | . expression '*' expression
   62           | . expression '/' expression
   63           | . expression KW_DIV expression
   64           | . expression KW_MOD expression
   65           | . expression '+' expression
   66           | . expression '-' expression
   67           | . KW_NOT expression
   68           | . '!' expression
   69           | . expression '=' expression
   70           | . expression KW_DIFFERENT expression
   71           | . expression '<' expression
   72           | . expression '>' expression
   72           | expression '>' . expression
   73           | . expression KW_LESS_OR_EQ expression
   74           | . expression KW_MORE_OR_EQ expression
   75           | . expression KW_AND expression
   76           | . expression KW_OR expression
   77           | . expression KW_AND_SYMB expression
   78           | . expression KW_OR_SYMB expression
   79           | . '(' in_brackets ')'
  120 arrays: . ARRAY array_brackets KW_OF basic_types

    IDENT      shift, and go to state 39
    POSINT     shift, and go to state 40
    REAL       shift, and go to state 41
    STRING     shift, and go to state 42
    KW_RESULT  shift, and go to state 43
    ARRAY      shift, and go to state 44
    KW_NOT     shift, and go to state 45
    KW_TRUE    shift, and go to state 46
    KW_FALSE   shift, and go to state 47
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '('        shift, and go to state 51

    proc_call   go to state 52
    casting     go to state 53
    expression  go to state 186
    arrays      go to state 55


State 124

   43 proc_call: . IDENT '(' arguments ')'
   47 casting: . '(' basic_types ')' expression
   48        | . '(' ARRAY array_brackets KW_OF basic_types ')' expression
   49 expression: . POSINT
   50           | . REAL
   51           | . arrays
   52           | . IDENT
   53           | . proc_call
   54           | . KW_RESULT
   55           | . STRING
   56           | . casting
   57           | . KW_TRUE
   58           | . KW_FALSE
   59           | . '+' expression
   60           | . '-' expression
   61           | . expression '*' expression
   62           | . expression '/' expression
   63           | . expression KW_DIV expression
   64           | . expression KW_MOD expression
   65           | . expression '+' expression
   66           | . expression '-' expression
   67           | . KW_NOT expression
   68           | . '!' expression
   69           | . expression '=' expression
   69           | expression '=' . expression
   70           | . expression KW_DIFFERENT expression
   71           | . expression '<' expression
   72           | . expression '>' expression
   73           | . expression KW_LESS_OR_EQ expression
   74           | . expression KW_MORE_OR_EQ expression
   75           | . expression KW_AND expression
   76           | . expression KW_OR expression
   77           | . expression KW_AND_SYMB expression
   78           | . expression KW_OR_SYMB expression
   79           | . '(' in_brackets ')'
  120 arrays: . ARRAY array_brackets KW_OF basic_types

    IDENT      shift, and go to state 39
    POSINT     shift, and go to state 40
    REAL       shift, and go to state 41
    STRING     shift, and go to state 42
    KW_RESULT  shift, and go to state 43
    ARRAY      shift, and go to state 44
    KW_NOT     shift, and go to state 45
    KW_TRUE    shift, and go to state 46
    KW_FALSE   shift, and go to state 47
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '('        shift, and go to state 51

    proc_call   go to state 52
    casting     go to state 53
    expression  go to state 187
    arrays      go to state 55


State 125

   43 proc_call: . IDENT '(' arguments ')'
   47 casting: . '(' basic_types ')' expression
   48        | . '(' ARRAY array_brackets KW_OF basic_types ')' expression
   49 expression: . POSINT
   50           | . REAL
   51           | . arrays
   52           | . IDENT
   53           | . proc_call
   54           | . KW_RESULT
   55           | . STRING
   56           | . casting
   57           | . KW_TRUE
   58           | . KW_FALSE
   59           | . '+' expression
   60           | . '-' expression
   61           | . expression '*' expression
   62           | . expression '/' expression
   63           | . expression KW_DIV expression
   64           | . expression KW_MOD expression
   65           | . expression '+' expression
   65           | expression '+' . expression
   66           | . expression '-' expression
   67           | . KW_NOT expression
   68           | . '!' expression
   69           | . expression '=' expression
   70           | . expression KW_DIFFERENT expression
   71           | . expression '<' expression
   72           | . expression '>' expression
   73           | . expression KW_LESS_OR_EQ expression
   74           | . expression KW_MORE_OR_EQ expression
   75           | . expression KW_AND expression
   76           | . expression KW_OR expression
   77           | . expression KW_AND_SYMB expression
   78           | . expression KW_OR_SYMB expression
   79           | . '(' in_brackets ')'
  120 arrays: . ARRAY array_brackets KW_OF basic_types

    IDENT      shift, and go to state 39
    POSINT     shift, and go to state 40
    REAL       shift, and go to state 41
    STRING     shift, and go to state 42
    KW_RESULT  shift, and go to state 43
    ARRAY      shift, and go to state 44
    KW_NOT     shift, and go to state 45
    KW_TRUE    shift, and go to state 46
    KW_FALSE   shift, and go to state 47
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '('        shift, and go to state 51

    proc_call   go to state 52
    casting     go to state 53
    expression  go to state 188
    arrays      go to state 55


State 126

   43 proc_call: . IDENT '(' arguments ')'
   47 casting: . '(' basic_types ')' expression
   48        | . '(' ARRAY array_brackets KW_OF basic_types ')' expression
   49 expression: . POSINT
   50           | . REAL
   51           | . arrays
   52           | . IDENT
   53           | . proc_call
   54           | . KW_RESULT
   55           | . STRING
   56           | . casting
   57           | . KW_TRUE
   58           | . KW_FALSE
   59           | . '+' expression
   60           | . '-' expression
   61           | . expression '*' expression
   62           | . expression '/' expression
   63           | . expression KW_DIV expression
   64           | . expression KW_MOD expression
   65           | . expression '+' expression
   66           | . expression '-' expression
   66           | expression '-' . expression
   67           | . KW_NOT expression
   68           | . '!' expression
   69           | . expression '=' expression
   70           | . expression KW_DIFFERENT expression
   71           | . expression '<' expression
   72           | . expression '>' expression
   73           | . expression KW_LESS_OR_EQ expression
   74           | . expression KW_MORE_OR_EQ expression
   75           | . expression KW_AND expression
   76           | . expression KW_OR expression
   77           | . expression KW_AND_SYMB expression
   78           | . expression KW_OR_SYMB expression
   79           | . '(' in_brackets ')'
  120 arrays: . ARRAY array_brackets KW_OF basic_types

    IDENT      shift, and go to state 39
    POSINT     shift, and go to state 40
    REAL       shift, and go to state 41
    STRING     shift, and go to state 42
    KW_RESULT  shift, and go to state 43
    ARRAY      shift, and go to state 44
    KW_NOT     shift, and go to state 45
    KW_TRUE    shift, and go to state 46
    KW_FALSE   shift, and go to state 47
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '('        shift, and go to state 51

    proc_call   go to state 52
    casting     go to state 53
    expression  go to state 189
    arrays      go to state 55


State 127

   43 proc_call: . IDENT '(' arguments ')'
   47 casting: . '(' basic_types ')' expression
   48        | . '(' ARRAY array_brackets KW_OF basic_types ')' expression
   49 expression: . POSINT
   50           | . REAL
   51           | . arrays
   52           | . IDENT
   53           | . proc_call
   54           | . KW_RESULT
   55           | . STRING
   56           | . casting
   57           | . KW_TRUE
   58           | . KW_FALSE
   59           | . '+' expression
   60           | . '-' expression
   61           | . expression '*' expression
   61           | expression '*' . expression
   62           | . expression '/' expression
   63           | . expression KW_DIV expression
   64           | . expression KW_MOD expression
   65           | . expression '+' expression
   66           | . expression '-' expression
   67           | . KW_NOT expression
   68           | . '!' expression
   69           | . expression '=' expression
   70           | . expression KW_DIFFERENT expression
   71           | . expression '<' expression
   72           | . expression '>' expression
   73           | . expression KW_LESS_OR_EQ expression
   74           | . expression KW_MORE_OR_EQ expression
   75           | . expression KW_AND expression
   76           | . expression KW_OR expression
   77           | . expression KW_AND_SYMB expression
   78           | . expression KW_OR_SYMB expression
   79           | . '(' in_brackets ')'
  120 arrays: . ARRAY array_brackets KW_OF basic_types

    IDENT      shift, and go to state 39
    POSINT     shift, and go to state 40
    REAL       shift, and go to state 41
    STRING     shift, and go to state 42
    KW_RESULT  shift, and go to state 43
    ARRAY      shift, and go to state 44
    KW_NOT     shift, and go to state 45
    KW_TRUE    shift, and go to state 46
    KW_FALSE   shift, and go to state 47
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '('        shift, and go to state 51

    proc_call   go to state 52
    casting     go to state 53
    expression  go to state 190
    arrays      go to state 55


State 128

   43 proc_call: . IDENT '(' arguments ')'
   47 casting: . '(' basic_types ')' expression
   48        | . '(' ARRAY array_brackets KW_OF basic_types ')' expression
   49 expression: . POSINT
   50           | . REAL
   51           | . arrays
   52           | . IDENT
   53           | . proc_call
   54           | . KW_RESULT
   55           | . STRING
   56           | . casting
   57           | . KW_TRUE
   58           | . KW_FALSE
   59           | . '+' expression
   60           | . '-' expression
   61           | . expression '*' expression
   62           | . expression '/' expression
   62           | expression '/' . expression
   63           | . expression KW_DIV expression
   64           | . expression KW_MOD expression
   65           | . expression '+' expression
   66           | . expression '-' expression
   67           | . KW_NOT expression
   68           | . '!' expression
   69           | . expression '=' expression
   70           | . expression KW_DIFFERENT expression
   71           | . expression '<' expression
   72           | . expression '>' expression
   73           | . expression KW_LESS_OR_EQ expression
   74           | . expression KW_MORE_OR_EQ expression
   75           | . expression KW_AND expression
   76           | . expression KW_OR expression
   77           | . expression KW_AND_SYMB expression
   78           | . expression KW_OR_SYMB expression
   79           | . '(' in_brackets ')'
  120 arrays: . ARRAY array_brackets KW_OF basic_types

    IDENT      shift, and go to state 39
    POSINT     shift, and go to state 40
    REAL       shift, and go to state 41
    STRING     shift, and go to state 42
    KW_RESULT  shift, and go to state 43
    ARRAY      shift, and go to state 44
    KW_NOT     shift, and go to state 45
    KW_TRUE    shift, and go to state 46
    KW_FALSE   shift, and go to state 47
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '('        shift, and go to state 51

    proc_call   go to state 52
    casting     go to state 53
    expression  go to state 191
    arrays      go to state 55


State 129

   28 for_statement: KW_FOR IDENT ASSIGN . expression KW_TO expression KW_DO KW_BEGIN statement_list KW_END ';'
   29              | KW_FOR IDENT ASSIGN . expression KW_DOWNTO expression KW_DO KW_BEGIN statement_list KW_END ';'
   30              | KW_FOR IDENT ASSIGN . expression KW_TO expression KW_DO statement
   31              | KW_FOR IDENT ASSIGN . expression KW_DOWNTO expression KW_DO statement
   43 proc_call: . IDENT '(' arguments ')'
   47 casting: . '(' basic_types ')' expression
   48        | . '(' ARRAY array_brackets KW_OF basic_types ')' expression
   49 expression: . POSINT
   50           | . REAL
   51           | . arrays
   52           | . IDENT
   53           | . proc_call
   54           | . KW_RESULT
   55           | . STRING
   56           | . casting
   57           | . KW_TRUE
   58           | . KW_FALSE
   59           | . '+' expression
   60           | . '-' expression
   61           | . expression '*' expression
   62           | . expression '/' expression
   63           | . expression KW_DIV expression
   64           | . expression KW_MOD expression
   65           | . expression '+' expression
   66           | . expression '-' expression
   67           | . KW_NOT expression
   68           | . '!' expression
   69           | . expression '=' expression
   70           | . expression KW_DIFFERENT expression
   71           | . expression '<' expression
   72           | . expression '>' expression
   73           | . expression KW_LESS_OR_EQ expression
   74           | . expression KW_MORE_OR_EQ expression
   75           | . expression KW_AND expression
   76           | . expression KW_OR expression
   77           | . expression KW_AND_SYMB expression
   78           | . expression KW_OR_SYMB expression
   79           | . '(' in_brackets ')'
  120 arrays: . ARRAY array_brackets KW_OF basic_types

    IDENT      shift, and go to state 39
    POSINT     shift, and go to state 40
    REAL       shift, and go to state 41
    STRING     shift, and go to state 42
    KW_RESULT  shift, and go to state 43
    ARRAY      shift, and go to state 44
    KW_NOT     shift, and go to state 45
    KW_TRUE    shift, and go to state 46
    KW_FALSE   shift, and go to state 47
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '('        shift, and go to state 51

    proc_call   go to state 52
    casting     go to state 53
    expression  go to state 192
    arrays      go to state 55


State 130

   25 while_statement: KW_REPEAT KW_BEGIN statement_list . KW_END ';' KW_UNTIL expression

    KW_END  shift, and go to state 193


State 131

   27 while_statement: KW_REPEAT statement KW_UNTIL . expression
   43 proc_call: . IDENT '(' arguments ')'
   47 casting: . '(' basic_types ')' expression
   48        | . '(' ARRAY array_brackets KW_OF basic_types ')' expression
   49 expression: . POSINT
   50           | . REAL
   51           | . arrays
   52           | . IDENT
   53           | . proc_call
   54           | . KW_RESULT
   55           | . STRING
   56           | . casting
   57           | . KW_TRUE
   58           | . KW_FALSE
   59           | . '+' expression
   60           | . '-' expression
   61           | . expression '*' expression
   62           | . expression '/' expression
   63           | . expression KW_DIV expression
   64           | . expression KW_MOD expression
   65           | . expression '+' expression
   66           | . expression '-' expression
   67           | . KW_NOT expression
   68           | . '!' expression
   69           | . expression '=' expression
   70           | . expression KW_DIFFERENT expression
   71           | . expression '<' expression
   72           | . expression '>' expression
   73           | . expression KW_LESS_OR_EQ expression
   74           | . expression KW_MORE_OR_EQ expression
   75           | . expression KW_AND expression
   76           | . expression KW_OR expression
   77           | . expression KW_AND_SYMB expression
   78           | . expression KW_OR_SYMB expression
   79           | . '(' in_brackets ')'
  120 arrays: . ARRAY array_brackets KW_OF basic_types

    IDENT      shift, and go to state 39
    POSINT     shift, and go to state 40
    REAL       shift, and go to state 41
    STRING     shift, and go to state 42
    KW_RESULT  shift, and go to state 43
    ARRAY      shift, and go to state 44
    KW_NOT     shift, and go to state 45
    KW_TRUE    shift, and go to state 46
    KW_FALSE   shift, and go to state 47
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '('        shift, and go to state 51

    proc_call   go to state 52
    casting     go to state 53
    expression  go to state 194
    arrays      go to state 55


State 132

  145 names: . IDENT
  146      | . IDENT ',' names
  146      | IDENT ',' . names

    IDENT  shift, and go to state 59

    names  go to state 195


State 133

  110 basic_types: . KW_BOOLEAN
  111            | . KW_INTEGER
  112            | . KW_REAL
  113            | . KW_CHAR
  114            | . IDENT
  140 var_declaration: KW_VAR names ':' . basic_types var_decl_more
  141                | KW_VAR names ':' . ARRAY array_brackets KW_OF basic_types var_decl_more

    IDENT       shift, and go to state 196
    ARRAY       shift, and go to state 197
    KW_BOOLEAN  shift, and go to state 98
    KW_REAL     shift, and go to state 99
    KW_CHAR     shift, and go to state 100
    KW_INTEGER  shift, and go to state 101

    basic_types  go to state 198


State 134

    6 statement: . subprogram_def
    7          | . proc_call ';'
    8          | . label_decl
    9          | . goto_statement
   10          | . assignment
   11          | . KW_RETURN
   12          | . type_def
   13          | . var_declaration
   14          | . loops
   15 loops: . if_statement
   16      | . for_statement
   17      | . while_statement
   18 if_statement: . KW_IF expression KW_THEN KW_BEGIN statement_list KW_END ';'
   19             | . KW_IF expression KW_THEN KW_BEGIN statement_list KW_END ';' KW_ELSE KW_BEGIN statement_list KW_END ';'
   20             | . KW_IF expression KW_THEN statement
   21             | . KW_IF expression KW_THEN statement KW_ELSE statement
   22             | . KW_IF expression KW_THEN statement KW_ELSE KW_BEGIN statement_list KW_END ';'
   23             | . KW_IF expression KW_THEN KW_BEGIN statement_list KW_END ';' KW_ELSE statement
   24 while_statement: . KW_WHILE expression KW_DO KW_BEGIN statement_list KW_END ';'
   24                | KW_WHILE expression KW_DO . KW_BEGIN statement_list KW_END ';'
   25                | . KW_REPEAT KW_BEGIN statement_list KW_END ';' KW_UNTIL expression
   26                | . KW_WHILE expression KW_DO statement
   26                | KW_WHILE expression KW_DO . statement
   27                | . KW_REPEAT statement KW_UNTIL expression
   28 for_statement: . KW_FOR IDENT ASSIGN expression KW_TO expression KW_DO KW_BEGIN statement_list KW_END ';'
   29              | . KW_FOR IDENT ASSIGN expression KW_DOWNTO expression KW_DO KW_BEGIN statement_list KW_END ';'
   30              | . KW_FOR IDENT ASSIGN expression KW_TO expression KW_DO statement
   31              | . KW_FOR IDENT ASSIGN expression KW_DOWNTO expression KW_DO statement
   32 label_decl: . IDENT ':' label_body
   42 goto_statement: . KW_GOTO IDENT ';'
   43 proc_call: . IDENT '(' arguments ')'
  108 assignment: . IDENT ASSIGN expression ';'
  109           | . KW_RESULT ASSIGN expression ';'
  123 subprogram_def: . KW_FUNCTION IDENT '(' proc_def_arguments ')' ':' FuncReturnTypes ';' statement_list body ';'
  124               | . KW_PROCEDURE IDENT '(' proc_def_arguments ')' ';' statement_list body ';'
  132 type_def: . KW_TYPE type_def_body
  140 var_declaration: . KW_VAR names ':' basic_types var_decl_more
  141                | . KW_VAR names ':' ARRAY array_brackets KW_OF basic_types var_decl_more

    IDENT         shift, and go to state 6
    KW_BEGIN      shift, and go to state 199
    KW_FUNCTION   shift, and go to state 7
    KW_PROCEDURE  shift, and go to state 8
    KW_RESULT     shift, and go to state 9
    KW_GOTO       shift, and go to state 10
    KW_RETURN     shift, and go to state 11
    KW_IF         shift, and go to state 12
    KW_FOR        shift, and go to state 13
    KW_REPEAT     shift, and go to state 14
    KW_VAR        shift, and go to state 15
    KW_WHILE      shift, and go to state 16
    KW_TYPE       shift, and go to state 17

    statement        go to state 200
    loops            go to state 20
    if_statement     go to state 21
    while_statement  go to state 22
    for_statement    go to state 23
    label_decl       go to state 24
    goto_statement   go to state 25
    proc_call        go to state 26
    assignment       go to state 27
    subprogram_def   go to state 28
    type_def         go to state 29
    var_declaration  go to state 30


State 135

  110 basic_types: . KW_BOOLEAN
  111            | . KW_INTEGER
  112            | . KW_REAL
  113            | . KW_CHAR
  114            | . IDENT
  133 type_def_body: IDENT '=' . basic_types after_type_def
  134              | IDENT '=' . KW_FUNCTION '(' proc_def_arguments ')' ':' FuncReturnTypes after_type_def
  135              | IDENT '=' . ARRAY typedef_array_brackets KW_OF basic_types after_type_def

    IDENT        shift, and go to state 196
    KW_FUNCTION  shift, and go to state 201
    ARRAY        shift, and go to state 202
    KW_BOOLEAN   shift, and go to state 98
    KW_REAL      shift, and go to state 99
    KW_CHAR      shift, and go to state 100
    KW_INTEGER   shift, and go to state 101

    basic_types  go to state 203


State 136

    3 body: KW_BEGIN statement_list . KW_END

    KW_END  shift, and go to state 204


State 137

    1 program: program_decl statement_list body '.' .

    $default  reduce using rule 1 (program)


State 138

  108 assignment: IDENT ASSIGN expression ';' .

    $default  reduce using rule 108 (assignment)


State 139

   43 proc_call: IDENT '(' arguments ')' .

    $default  reduce using rule 43 (proc_call)


State 140

   43 proc_call: . IDENT '(' arguments ')'
   44 arguments: . %empty  [')']
   45          | . expression
   46          | . expression ',' arguments
   46          | expression ',' . arguments
   47 casting: . '(' basic_types ')' expression
   48        | . '(' ARRAY array_brackets KW_OF basic_types ')' expression
   49 expression: . POSINT
   50           | . REAL
   51           | . arrays
   52           | . IDENT
   53           | . proc_call
   54           | . KW_RESULT
   55           | . STRING
   56           | . casting
   57           | . KW_TRUE
   58           | . KW_FALSE
   59           | . '+' expression
   60           | . '-' expression
   61           | . expression '*' expression
   62           | . expression '/' expression
   63           | . expression KW_DIV expression
   64           | . expression KW_MOD expression
   65           | . expression '+' expression
   66           | . expression '-' expression
   67           | . KW_NOT expression
   68           | . '!' expression
   69           | . expression '=' expression
   70           | . expression KW_DIFFERENT expression
   71           | . expression '<' expression
   72           | . expression '>' expression
   73           | . expression KW_LESS_OR_EQ expression
   74           | . expression KW_MORE_OR_EQ expression
   75           | . expression KW_AND expression
   76           | . expression KW_OR expression
   77           | . expression KW_AND_SYMB expression
   78           | . expression KW_OR_SYMB expression
   79           | . '(' in_brackets ')'
  120 arrays: . ARRAY array_brackets KW_OF basic_types

    IDENT      shift, and go to state 39
    POSINT     shift, and go to state 40
    REAL       shift, and go to state 41
    STRING     shift, and go to state 42
    KW_RESULT  shift, and go to state 43
    ARRAY      shift, and go to state 44
    KW_NOT     shift, and go to state 45
    KW_TRUE    shift, and go to state 46
    KW_FALSE   shift, and go to state 47
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '('        shift, and go to state 51

    $default  reduce using rule 44 (arguments)

    proc_call   go to state 52
    arguments   go to state 205
    casting     go to state 53
    expression  go to state 70
    arrays      go to state 55


State 141

   35 label_body: label_decl ';' .

    $default  reduce using rule 35 (label_body)


State 142

   34 label_body: proc_call ';' .

    $default  reduce using rule 34 (label_body)


State 143

  118 proc_def_arguments: proc_def_arg_main .  [')']
  119                   | proc_def_arg_main . ';' proc_def_arguments

    ';'  shift, and go to state 206

    $default  reduce using rule 118 (proc_def_arguments)


State 144

  123 subprogram_def: KW_FUNCTION IDENT '(' proc_def_arguments . ')' ':' FuncReturnTypes ';' statement_list body ';'

    ')'  shift, and go to state 207


State 145

  115 proc_def_arg_main: names . ':' ARRAY KW_OF basic_types
  116                  | names . ':' basic_types

    ':'  shift, and go to state 208


State 146

  124 subprogram_def: KW_PROCEDURE IDENT '(' proc_def_arguments . ')' ';' statement_list body ';'

    ')'  shift, and go to state 209


State 147

  109 assignment: KW_RESULT ASSIGN expression ';' .

    $default  reduce using rule 109 (assignment)


State 148

  127 array_arg: POSINT .

    $default  reduce using rule 127 (array_arg)


State 149

  122 array_brackets: '[' array_arg . ']' array_brackets
  128 array_arg: array_arg . '+' array_arg
  129          | array_arg . '-' array_arg
  130          | array_arg . '*' array_arg
  131          | array_arg . '/' array_arg

    '+'  shift, and go to state 210
    '-'  shift, and go to state 211
    '*'  shift, and go to state 212
    '/'  shift, and go to state 213
    ']'  shift, and go to state 214


State 150

  110 basic_types: . KW_BOOLEAN
  111            | . KW_INTEGER
  112            | . KW_REAL
  113            | . KW_CHAR
  114            | . IDENT
  120 arrays: ARRAY array_brackets KW_OF . basic_types

    IDENT       shift, and go to state 196
    KW_BOOLEAN  shift, and go to state 98
    KW_REAL     shift, and go to state 99
    KW_CHAR     shift, and go to state 100
    KW_INTEGER  shift, and go to state 101

    basic_types  go to state 215


State 151

   48 casting: '(' ARRAY array_brackets . KW_OF basic_types ')' expression
  120 arrays: ARRAY array_brackets . KW_OF basic_types

    KW_OF  shift, and go to state 216


State 152

   61 expression: expression . '*' expression
   62           | expression . '/' expression
   63           | expression . KW_DIV expression
   64           | expression . KW_MOD expression
   65           | expression . '+' expression
   66           | expression . '-' expression
   67           | KW_NOT expression .  [KW_AND, KW_DIV, KW_MOD, KW_OR, KW_DIFFERENT, KW_LESS_OR_EQ, KW_MORE_OR_EQ, KW_AND_SYMB, KW_OR_SYMB, '<', '>', '=', '+', '-', '*', '/']
   69           | expression . '=' expression
   70           | expression . KW_DIFFERENT expression
   71           | expression . '<' expression
   72           | expression . '>' expression
   73           | expression . KW_LESS_OR_EQ expression
   74           | expression . KW_MORE_OR_EQ expression
   75           | expression . KW_AND expression
   76           | expression . KW_OR expression
   77           | expression . KW_AND_SYMB expression
   78           | expression . KW_OR_SYMB expression
   96 in_brackets: KW_NOT expression .  [')']

    ')'       reduce using rule 96 (in_brackets)
    $default  reduce using rule 67 (expression)

    Conflict between rule 67 and token KW_AND resolved as reduce (KW_AND < KW_NOT).
    Conflict between rule 67 and token KW_DIV resolved as reduce (KW_DIV < KW_NOT).
    Conflict between rule 67 and token KW_MOD resolved as reduce (KW_MOD < KW_NOT).
    Conflict between rule 67 and token KW_OR resolved as reduce (KW_OR < KW_NOT).
    Conflict between rule 67 and token KW_DIFFERENT resolved as reduce (KW_DIFFERENT < KW_NOT).
    Conflict between rule 67 and token KW_LESS_OR_EQ resolved as reduce (KW_LESS_OR_EQ < KW_NOT).
    Conflict between rule 67 and token KW_MORE_OR_EQ resolved as reduce (KW_MORE_OR_EQ < KW_NOT).
    Conflict between rule 67 and token KW_AND_SYMB resolved as reduce (KW_AND_SYMB < KW_NOT).
    Conflict between rule 67 and token KW_OR_SYMB resolved as reduce (KW_OR_SYMB < KW_NOT).
    Conflict between rule 67 and token '<' resolved as reduce ('<' < KW_NOT).
    Conflict between rule 67 and token '>' resolved as reduce ('>' < KW_NOT).
    Conflict between rule 67 and token '=' resolved as reduce ('=' < KW_NOT).
    Conflict between rule 67 and token '+' resolved as reduce ('+' < KW_NOT).
    Conflict between rule 67 and token '-' resolved as reduce ('-' < KW_NOT).
    Conflict between rule 67 and token '*' resolved as reduce ('*' < KW_NOT).
    Conflict between rule 67 and token '/' resolved as reduce ('/' < KW_NOT).


State 153

   59 expression: '+' expression .  [KW_AND, KW_OR, KW_DIFFERENT, KW_LESS_OR_EQ, KW_MORE_OR_EQ, KW_AND_SYMB, KW_OR_SYMB, '<', '>', '=', '+', '-']
   61           | expression . '*' expression
   62           | expression . '/' expression
   63           | expression . KW_DIV expression
   64           | expression . KW_MOD expression
   65           | expression . '+' expression
   66           | expression . '-' expression
   69           | expression . '=' expression
   70           | expression . KW_DIFFERENT expression
   71           | expression . '<' expression
   72           | expression . '>' expression
   73           | expression . KW_LESS_OR_EQ expression
   74           | expression . KW_MORE_OR_EQ expression
   75           | expression . KW_AND expression
   76           | expression . KW_OR expression
   77           | expression . KW_AND_SYMB expression
   78           | expression . KW_OR_SYMB expression
   88 in_brackets: '+' expression .  [')']

    KW_DIV  shift, and go to state 113
    KW_MOD  shift, and go to state 114
    '*'     shift, and go to state 127
    '/'     shift, and go to state 128

    ')'       reduce using rule 88 (in_brackets)
    $default  reduce using rule 59 (expression)

    Conflict between rule 59 and token KW_AND resolved as reduce (KW_AND < '+').
    Conflict between rule 59 and token KW_DIV resolved as shift ('+' < KW_DIV).
    Conflict between rule 59 and token KW_MOD resolved as shift ('+' < KW_MOD).
    Conflict between rule 59 and token KW_OR resolved as reduce (KW_OR < '+').
    Conflict between rule 59 and token KW_DIFFERENT resolved as reduce (KW_DIFFERENT < '+').
    Conflict between rule 59 and token KW_LESS_OR_EQ resolved as reduce (KW_LESS_OR_EQ < '+').
    Conflict between rule 59 and token KW_MORE_OR_EQ resolved as reduce (KW_MORE_OR_EQ < '+').
    Conflict between rule 59 and token KW_AND_SYMB resolved as reduce (KW_AND_SYMB < '+').
    Conflict between rule 59 and token KW_OR_SYMB resolved as reduce (KW_OR_SYMB < '+').
    Conflict between rule 59 and token '<' resolved as reduce ('<' < '+').
    Conflict between rule 59 and token '>' resolved as reduce ('>' < '+').
    Conflict between rule 59 and token '=' resolved as reduce ('=' < '+').
    Conflict between rule 59 and token '+' resolved as reduce (%left '+').
    Conflict between rule 59 and token '-' resolved as reduce (%left '-').
    Conflict between rule 59 and token '*' resolved as shift ('+' < '*').
    Conflict between rule 59 and token '/' resolved as shift ('+' < '/').


State 154

   60 expression: '-' expression .  [KW_AND, KW_OR, KW_DIFFERENT, KW_LESS_OR_EQ, KW_MORE_OR_EQ, KW_AND_SYMB, KW_OR_SYMB, '<', '>', '=', '+', '-']
   61           | expression . '*' expression
   62           | expression . '/' expression
   63           | expression . KW_DIV expression
   64           | expression . KW_MOD expression
   65           | expression . '+' expression
   66           | expression . '-' expression
   69           | expression . '=' expression
   70           | expression . KW_DIFFERENT expression
   71           | expression . '<' expression
   72           | expression . '>' expression
   73           | expression . KW_LESS_OR_EQ expression
   74           | expression . KW_MORE_OR_EQ expression
   75           | expression . KW_AND expression
   76           | expression . KW_OR expression
   77           | expression . KW_AND_SYMB expression
   78           | expression . KW_OR_SYMB expression
   89 in_brackets: '-' expression .  [')']

    KW_DIV  shift, and go to state 113
    KW_MOD  shift, and go to state 114
    '*'     shift, and go to state 127
    '/'     shift, and go to state 128

    ')'       reduce using rule 89 (in_brackets)
    $default  reduce using rule 60 (expression)

    Conflict between rule 60 and token KW_AND resolved as reduce (KW_AND < '-').
    Conflict between rule 60 and token KW_DIV resolved as shift ('-' < KW_DIV).
    Conflict between rule 60 and token KW_MOD resolved as shift ('-' < KW_MOD).
    Conflict between rule 60 and token KW_OR resolved as reduce (KW_OR < '-').
    Conflict between rule 60 and token KW_DIFFERENT resolved as reduce (KW_DIFFERENT < '-').
    Conflict between rule 60 and token KW_LESS_OR_EQ resolved as reduce (KW_LESS_OR_EQ < '-').
    Conflict between rule 60 and token KW_MORE_OR_EQ resolved as reduce (KW_MORE_OR_EQ < '-').
    Conflict between rule 60 and token KW_AND_SYMB resolved as reduce (KW_AND_SYMB < '-').
    Conflict between rule 60 and token KW_OR_SYMB resolved as reduce (KW_OR_SYMB < '-').
    Conflict between rule 60 and token '<' resolved as reduce ('<' < '-').
    Conflict between rule 60 and token '>' resolved as reduce ('>' < '-').
    Conflict between rule 60 and token '=' resolved as reduce ('=' < '-').
    Conflict between rule 60 and token '+' resolved as reduce (%left '+').
    Conflict between rule 60 and token '-' resolved as reduce (%left '-').
    Conflict between rule 60 and token '*' resolved as shift ('-' < '*').
    Conflict between rule 60 and token '/' resolved as shift ('-' < '/').


State 155

   61 expression: expression . '*' expression
   62           | expression . '/' expression
   63           | expression . KW_DIV expression
   64           | expression . KW_MOD expression
   65           | expression . '+' expression
   66           | expression . '-' expression
   68           | '!' expression .  [KW_AND, KW_DIV, KW_MOD, KW_OR, KW_DIFFERENT, KW_LESS_OR_EQ, KW_MORE_OR_EQ, KW_AND_SYMB, KW_OR_SYMB, '<', '>', '=', '+', '-', '*', '/']
   69           | expression . '=' expression
   70           | expression . KW_DIFFERENT expression
   71           | expression . '<' expression
   72           | expression . '>' expression
   73           | expression . KW_LESS_OR_EQ expression
   74           | expression . KW_MORE_OR_EQ expression
   75           | expression . KW_AND expression
   76           | expression . KW_OR expression
   77           | expression . KW_AND_SYMB expression
   78           | expression . KW_OR_SYMB expression
   97 in_brackets: '!' expression .  [')']

    ')'       reduce using rule 97 (in_brackets)
    $default  reduce using rule 68 (expression)

    Conflict between rule 68 and token KW_AND resolved as reduce (KW_AND < '!').
    Conflict between rule 68 and token KW_DIV resolved as reduce (KW_DIV < '!').
    Conflict between rule 68 and token KW_MOD resolved as reduce (KW_MOD < '!').
    Conflict between rule 68 and token KW_OR resolved as reduce (KW_OR < '!').
    Conflict between rule 68 and token KW_DIFFERENT resolved as reduce (KW_DIFFERENT < '!').
    Conflict between rule 68 and token KW_LESS_OR_EQ resolved as reduce (KW_LESS_OR_EQ < '!').
    Conflict between rule 68 and token KW_MORE_OR_EQ resolved as reduce (KW_MORE_OR_EQ < '!').
    Conflict between rule 68 and token KW_AND_SYMB resolved as reduce (KW_AND_SYMB < '!').
    Conflict between rule 68 and token KW_OR_SYMB resolved as reduce (KW_OR_SYMB < '!').
    Conflict between rule 68 and token '<' resolved as reduce ('<' < '!').
    Conflict between rule 68 and token '>' resolved as reduce ('>' < '!').
    Conflict between rule 68 and token '=' resolved as reduce ('=' < '!').
    Conflict between rule 68 and token '+' resolved as reduce ('+' < '!').
    Conflict between rule 68 and token '-' resolved as reduce ('-' < '!').
    Conflict between rule 68 and token '*' resolved as reduce ('*' < '!').
    Conflict between rule 68 and token '/' resolved as reduce ('/' < '!').


State 156

   43 proc_call: . IDENT '(' arguments ')'
   47 casting: . '(' basic_types ')' expression
   48        | . '(' ARRAY array_brackets KW_OF basic_types ')' expression
   49 expression: . POSINT
   50           | . REAL
   51           | . arrays
   52           | . IDENT
   53           | . proc_call
   54           | . KW_RESULT
   55           | . STRING
   56           | . casting
   57           | . KW_TRUE
   58           | . KW_FALSE
   59           | . '+' expression
   60           | . '-' expression
   61           | . expression '*' expression
   62           | . expression '/' expression
   63           | . expression KW_DIV expression
   64           | . expression KW_MOD expression
   65           | . expression '+' expression
   66           | . expression '-' expression
   67           | . KW_NOT expression
   68           | . '!' expression
   69           | . expression '=' expression
   70           | . expression KW_DIFFERENT expression
   71           | . expression '<' expression
   72           | . expression '>' expression
   73           | . expression KW_LESS_OR_EQ expression
   74           | . expression KW_MORE_OR_EQ expression
   75           | . expression KW_AND expression
   75           | expression KW_AND . expression
   76           | . expression KW_OR expression
   77           | . expression KW_AND_SYMB expression
   78           | . expression KW_OR_SYMB expression
   79           | . '(' in_brackets ')'
  104 in_brackets: expression KW_AND . expression
  120 arrays: . ARRAY array_brackets KW_OF basic_types

    IDENT      shift, and go to state 39
    POSINT     shift, and go to state 40
    REAL       shift, and go to state 41
    STRING     shift, and go to state 42
    KW_RESULT  shift, and go to state 43
    ARRAY      shift, and go to state 44
    KW_NOT     shift, and go to state 45
    KW_TRUE    shift, and go to state 46
    KW_FALSE   shift, and go to state 47
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '('        shift, and go to state 51

    proc_call   go to state 52
    casting     go to state 53
    expression  go to state 217
    arrays      go to state 55


State 157

   43 proc_call: . IDENT '(' arguments ')'
   47 casting: . '(' basic_types ')' expression
   48        | . '(' ARRAY array_brackets KW_OF basic_types ')' expression
   49 expression: . POSINT
   50           | . REAL
   51           | . arrays
   52           | . IDENT
   53           | . proc_call
   54           | . KW_RESULT
   55           | . STRING
   56           | . casting
   57           | . KW_TRUE
   58           | . KW_FALSE
   59           | . '+' expression
   60           | . '-' expression
   61           | . expression '*' expression
   62           | . expression '/' expression
   63           | . expression KW_DIV expression
   63           | expression KW_DIV . expression
   64           | . expression KW_MOD expression
   65           | . expression '+' expression
   66           | . expression '-' expression
   67           | . KW_NOT expression
   68           | . '!' expression
   69           | . expression '=' expression
   70           | . expression KW_DIFFERENT expression
   71           | . expression '<' expression
   72           | . expression '>' expression
   73           | . expression KW_LESS_OR_EQ expression
   74           | . expression KW_MORE_OR_EQ expression
   75           | . expression KW_AND expression
   76           | . expression KW_OR expression
   77           | . expression KW_AND_SYMB expression
   78           | . expression KW_OR_SYMB expression
   79           | . '(' in_brackets ')'
   92 in_brackets: expression KW_DIV . expression
  120 arrays: . ARRAY array_brackets KW_OF basic_types

    IDENT      shift, and go to state 39
    POSINT     shift, and go to state 40
    REAL       shift, and go to state 41
    STRING     shift, and go to state 42
    KW_RESULT  shift, and go to state 43
    ARRAY      shift, and go to state 44
    KW_NOT     shift, and go to state 45
    KW_TRUE    shift, and go to state 46
    KW_FALSE   shift, and go to state 47
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '('        shift, and go to state 51

    proc_call   go to state 52
    casting     go to state 53
    expression  go to state 218
    arrays      go to state 55


State 158

   43 proc_call: . IDENT '(' arguments ')'
   47 casting: . '(' basic_types ')' expression
   48        | . '(' ARRAY array_brackets KW_OF basic_types ')' expression
   49 expression: . POSINT
   50           | . REAL
   51           | . arrays
   52           | . IDENT
   53           | . proc_call
   54           | . KW_RESULT
   55           | . STRING
   56           | . casting
   57           | . KW_TRUE
   58           | . KW_FALSE
   59           | . '+' expression
   60           | . '-' expression
   61           | . expression '*' expression
   62           | . expression '/' expression
   63           | . expression KW_DIV expression
   64           | . expression KW_MOD expression
   64           | expression KW_MOD . expression
   65           | . expression '+' expression
   66           | . expression '-' expression
   67           | . KW_NOT expression
   68           | . '!' expression
   69           | . expression '=' expression
   70           | . expression KW_DIFFERENT expression
   71           | . expression '<' expression
   72           | . expression '>' expression
   73           | . expression KW_LESS_OR_EQ expression
   74           | . expression KW_MORE_OR_EQ expression
   75           | . expression KW_AND expression
   76           | . expression KW_OR expression
   77           | . expression KW_AND_SYMB expression
   78           | . expression KW_OR_SYMB expression
   79           | . '(' in_brackets ')'
   93 in_brackets: expression KW_MOD . expression
  120 arrays: . ARRAY array_brackets KW_OF basic_types

    IDENT      shift, and go to state 39
    POSINT     shift, and go to state 40
    REAL       shift, and go to state 41
    STRING     shift, and go to state 42
    KW_RESULT  shift, and go to state 43
    ARRAY      shift, and go to state 44
    KW_NOT     shift, and go to state 45
    KW_TRUE    shift, and go to state 46
    KW_FALSE   shift, and go to state 47
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '('        shift, and go to state 51

    proc_call   go to state 52
    casting     go to state 53
    expression  go to state 219
    arrays      go to state 55


State 159

   43 proc_call: . IDENT '(' arguments ')'
   47 casting: . '(' basic_types ')' expression
   48        | . '(' ARRAY array_brackets KW_OF basic_types ')' expression
   49 expression: . POSINT
   50           | . REAL
   51           | . arrays
   52           | . IDENT
   53           | . proc_call
   54           | . KW_RESULT
   55           | . STRING
   56           | . casting
   57           | . KW_TRUE
   58           | . KW_FALSE
   59           | . '+' expression
   60           | . '-' expression
   61           | . expression '*' expression
   62           | . expression '/' expression
   63           | . expression KW_DIV expression
   64           | . expression KW_MOD expression
   65           | . expression '+' expression
   66           | . expression '-' expression
   67           | . KW_NOT expression
   68           | . '!' expression
   69           | . expression '=' expression
   70           | . expression KW_DIFFERENT expression
   71           | . expression '<' expression
   72           | . expression '>' expression
   73           | . expression KW_LESS_OR_EQ expression
   74           | . expression KW_MORE_OR_EQ expression
   75           | . expression KW_AND expression
   76           | . expression KW_OR expression
   76           | expression KW_OR . expression
   77           | . expression KW_AND_SYMB expression
   78           | . expression KW_OR_SYMB expression
   79           | . '(' in_brackets ')'
  105 in_brackets: expression KW_OR . expression
  120 arrays: . ARRAY array_brackets KW_OF basic_types

    IDENT      shift, and go to state 39
    POSINT     shift, and go to state 40
    REAL       shift, and go to state 41
    STRING     shift, and go to state 42
    KW_RESULT  shift, and go to state 43
    ARRAY      shift, and go to state 44
    KW_NOT     shift, and go to state 45
    KW_TRUE    shift, and go to state 46
    KW_FALSE   shift, and go to state 47
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '('        shift, and go to state 51

    proc_call   go to state 52
    casting     go to state 53
    expression  go to state 220
    arrays      go to state 55


State 160

   43 proc_call: . IDENT '(' arguments ')'
   47 casting: . '(' basic_types ')' expression
   48        | . '(' ARRAY array_brackets KW_OF basic_types ')' expression
   49 expression: . POSINT
   50           | . REAL
   51           | . arrays
   52           | . IDENT
   53           | . proc_call
   54           | . KW_RESULT
   55           | . STRING
   56           | . casting
   57           | . KW_TRUE
   58           | . KW_FALSE
   59           | . '+' expression
   60           | . '-' expression
   61           | . expression '*' expression
   62           | . expression '/' expression
   63           | . expression KW_DIV expression
   64           | . expression KW_MOD expression
   65           | . expression '+' expression
   66           | . expression '-' expression
   67           | . KW_NOT expression
   68           | . '!' expression
   69           | . expression '=' expression
   70           | . expression KW_DIFFERENT expression
   70           | expression KW_DIFFERENT . expression
   71           | . expression '<' expression
   72           | . expression '>' expression
   73           | . expression KW_LESS_OR_EQ expression
   74           | . expression KW_MORE_OR_EQ expression
   75           | . expression KW_AND expression
   76           | . expression KW_OR expression
   77           | . expression KW_AND_SYMB expression
   78           | . expression KW_OR_SYMB expression
   79           | . '(' in_brackets ')'
   99 in_brackets: expression KW_DIFFERENT . expression
  120 arrays: . ARRAY array_brackets KW_OF basic_types

    IDENT      shift, and go to state 39
    POSINT     shift, and go to state 40
    REAL       shift, and go to state 41
    STRING     shift, and go to state 42
    KW_RESULT  shift, and go to state 43
    ARRAY      shift, and go to state 44
    KW_NOT     shift, and go to state 45
    KW_TRUE    shift, and go to state 46
    KW_FALSE   shift, and go to state 47
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '('        shift, and go to state 51

    proc_call   go to state 52
    casting     go to state 53
    expression  go to state 221
    arrays      go to state 55


State 161

   43 proc_call: . IDENT '(' arguments ')'
   47 casting: . '(' basic_types ')' expression
   48        | . '(' ARRAY array_brackets KW_OF basic_types ')' expression
   49 expression: . POSINT
   50           | . REAL
   51           | . arrays
   52           | . IDENT
   53           | . proc_call
   54           | . KW_RESULT
   55           | . STRING
   56           | . casting
   57           | . KW_TRUE
   58           | . KW_FALSE
   59           | . '+' expression
   60           | . '-' expression
   61           | . expression '*' expression
   62           | . expression '/' expression
   63           | . expression KW_DIV expression
   64           | . expression KW_MOD expression
   65           | . expression '+' expression
   66           | . expression '-' expression
   67           | . KW_NOT expression
   68           | . '!' expression
   69           | . expression '=' expression
   70           | . expression KW_DIFFERENT expression
   71           | . expression '<' expression
   72           | . expression '>' expression
   73           | . expression KW_LESS_OR_EQ expression
   73           | expression KW_LESS_OR_EQ . expression
   74           | . expression KW_MORE_OR_EQ expression
   75           | . expression KW_AND expression
   76           | . expression KW_OR expression
   77           | . expression KW_AND_SYMB expression
   78           | . expression KW_OR_SYMB expression
   79           | . '(' in_brackets ')'
  102 in_brackets: expression KW_LESS_OR_EQ . expression
  120 arrays: . ARRAY array_brackets KW_OF basic_types

    IDENT      shift, and go to state 39
    POSINT     shift, and go to state 40
    REAL       shift, and go to state 41
    STRING     shift, and go to state 42
    KW_RESULT  shift, and go to state 43
    ARRAY      shift, and go to state 44
    KW_NOT     shift, and go to state 45
    KW_TRUE    shift, and go to state 46
    KW_FALSE   shift, and go to state 47
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '('        shift, and go to state 51

    proc_call   go to state 52
    casting     go to state 53
    expression  go to state 222
    arrays      go to state 55


State 162

   43 proc_call: . IDENT '(' arguments ')'
   47 casting: . '(' basic_types ')' expression
   48        | . '(' ARRAY array_brackets KW_OF basic_types ')' expression
   49 expression: . POSINT
   50           | . REAL
   51           | . arrays
   52           | . IDENT
   53           | . proc_call
   54           | . KW_RESULT
   55           | . STRING
   56           | . casting
   57           | . KW_TRUE
   58           | . KW_FALSE
   59           | . '+' expression
   60           | . '-' expression
   61           | . expression '*' expression
   62           | . expression '/' expression
   63           | . expression KW_DIV expression
   64           | . expression KW_MOD expression
   65           | . expression '+' expression
   66           | . expression '-' expression
   67           | . KW_NOT expression
   68           | . '!' expression
   69           | . expression '=' expression
   70           | . expression KW_DIFFERENT expression
   71           | . expression '<' expression
   72           | . expression '>' expression
   73           | . expression KW_LESS_OR_EQ expression
   74           | . expression KW_MORE_OR_EQ expression
   74           | expression KW_MORE_OR_EQ . expression
   75           | . expression KW_AND expression
   76           | . expression KW_OR expression
   77           | . expression KW_AND_SYMB expression
   78           | . expression KW_OR_SYMB expression
   79           | . '(' in_brackets ')'
  103 in_brackets: expression KW_MORE_OR_EQ . expression
  120 arrays: . ARRAY array_brackets KW_OF basic_types

    IDENT      shift, and go to state 39
    POSINT     shift, and go to state 40
    REAL       shift, and go to state 41
    STRING     shift, and go to state 42
    KW_RESULT  shift, and go to state 43
    ARRAY      shift, and go to state 44
    KW_NOT     shift, and go to state 45
    KW_TRUE    shift, and go to state 46
    KW_FALSE   shift, and go to state 47
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '('        shift, and go to state 51

    proc_call   go to state 52
    casting     go to state 53
    expression  go to state 223
    arrays      go to state 55


State 163

   43 proc_call: . IDENT '(' arguments ')'
   47 casting: . '(' basic_types ')' expression
   48        | . '(' ARRAY array_brackets KW_OF basic_types ')' expression
   49 expression: . POSINT
   50           | . REAL
   51           | . arrays
   52           | . IDENT
   53           | . proc_call
   54           | . KW_RESULT
   55           | . STRING
   56           | . casting
   57           | . KW_TRUE
   58           | . KW_FALSE
   59           | . '+' expression
   60           | . '-' expression
   61           | . expression '*' expression
   62           | . expression '/' expression
   63           | . expression KW_DIV expression
   64           | . expression KW_MOD expression
   65           | . expression '+' expression
   66           | . expression '-' expression
   67           | . KW_NOT expression
   68           | . '!' expression
   69           | . expression '=' expression
   70           | . expression KW_DIFFERENT expression
   71           | . expression '<' expression
   72           | . expression '>' expression
   73           | . expression KW_LESS_OR_EQ expression
   74           | . expression KW_MORE_OR_EQ expression
   75           | . expression KW_AND expression
   76           | . expression KW_OR expression
   77           | . expression KW_AND_SYMB expression
   77           | expression KW_AND_SYMB . expression
   78           | . expression KW_OR_SYMB expression
   79           | . '(' in_brackets ')'
  106 in_brackets: expression KW_AND_SYMB . expression
  120 arrays: . ARRAY array_brackets KW_OF basic_types

    IDENT      shift, and go to state 39
    POSINT     shift, and go to state 40
    REAL       shift, and go to state 41
    STRING     shift, and go to state 42
    KW_RESULT  shift, and go to state 43
    ARRAY      shift, and go to state 44
    KW_NOT     shift, and go to state 45
    KW_TRUE    shift, and go to state 46
    KW_FALSE   shift, and go to state 47
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '('        shift, and go to state 51

    proc_call   go to state 52
    casting     go to state 53
    expression  go to state 224
    arrays      go to state 55


State 164

   43 proc_call: . IDENT '(' arguments ')'
   47 casting: . '(' basic_types ')' expression
   48        | . '(' ARRAY array_brackets KW_OF basic_types ')' expression
   49 expression: . POSINT
   50           | . REAL
   51           | . arrays
   52           | . IDENT
   53           | . proc_call
   54           | . KW_RESULT
   55           | . STRING
   56           | . casting
   57           | . KW_TRUE
   58           | . KW_FALSE
   59           | . '+' expression
   60           | . '-' expression
   61           | . expression '*' expression
   62           | . expression '/' expression
   63           | . expression KW_DIV expression
   64           | . expression KW_MOD expression
   65           | . expression '+' expression
   66           | . expression '-' expression
   67           | . KW_NOT expression
   68           | . '!' expression
   69           | . expression '=' expression
   70           | . expression KW_DIFFERENT expression
   71           | . expression '<' expression
   72           | . expression '>' expression
   73           | . expression KW_LESS_OR_EQ expression
   74           | . expression KW_MORE_OR_EQ expression
   75           | . expression KW_AND expression
   76           | . expression KW_OR expression
   77           | . expression KW_AND_SYMB expression
   78           | . expression KW_OR_SYMB expression
   78           | expression KW_OR_SYMB . expression
   79           | . '(' in_brackets ')'
  107 in_brackets: expression KW_OR_SYMB . expression
  120 arrays: . ARRAY array_brackets KW_OF basic_types

    IDENT      shift, and go to state 39
    POSINT     shift, and go to state 40
    REAL       shift, and go to state 41
    STRING     shift, and go to state 42
    KW_RESULT  shift, and go to state 43
    ARRAY      shift, and go to state 44
    KW_NOT     shift, and go to state 45
    KW_TRUE    shift, and go to state 46
    KW_FALSE   shift, and go to state 47
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '('        shift, and go to state 51

    proc_call   go to state 52
    casting     go to state 53
    expression  go to state 225
    arrays      go to state 55


State 165

   43 proc_call: . IDENT '(' arguments ')'
   47 casting: . '(' basic_types ')' expression
   48        | . '(' ARRAY array_brackets KW_OF basic_types ')' expression
   49 expression: . POSINT
   50           | . REAL
   51           | . arrays
   52           | . IDENT
   53           | . proc_call
   54           | . KW_RESULT
   55           | . STRING
   56           | . casting
   57           | . KW_TRUE
   58           | . KW_FALSE
   59           | . '+' expression
   60           | . '-' expression
   61           | . expression '*' expression
   62           | . expression '/' expression
   63           | . expression KW_DIV expression
   64           | . expression KW_MOD expression
   65           | . expression '+' expression
   66           | . expression '-' expression
   67           | . KW_NOT expression
   68           | . '!' expression
   69           | . expression '=' expression
   70           | . expression KW_DIFFERENT expression
   71           | . expression '<' expression
   71           | expression '<' . expression
   72           | . expression '>' expression
   73           | . expression KW_LESS_OR_EQ expression
   74           | . expression KW_MORE_OR_EQ expression
   75           | . expression KW_AND expression
   76           | . expression KW_OR expression
   77           | . expression KW_AND_SYMB expression
   78           | . expression KW_OR_SYMB expression
   79           | . '(' in_brackets ')'
  100 in_brackets: expression '<' . expression
  120 arrays: . ARRAY array_brackets KW_OF basic_types

    IDENT      shift, and go to state 39
    POSINT     shift, and go to state 40
    REAL       shift, and go to state 41
    STRING     shift, and go to state 42
    KW_RESULT  shift, and go to state 43
    ARRAY      shift, and go to state 44
    KW_NOT     shift, and go to state 45
    KW_TRUE    shift, and go to state 46
    KW_FALSE   shift, and go to state 47
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '('        shift, and go to state 51

    proc_call   go to state 52
    casting     go to state 53
    expression  go to state 226
    arrays      go to state 55


State 166

   43 proc_call: . IDENT '(' arguments ')'
   47 casting: . '(' basic_types ')' expression
   48        | . '(' ARRAY array_brackets KW_OF basic_types ')' expression
   49 expression: . POSINT
   50           | . REAL
   51           | . arrays
   52           | . IDENT
   53           | . proc_call
   54           | . KW_RESULT
   55           | . STRING
   56           | . casting
   57           | . KW_TRUE
   58           | . KW_FALSE
   59           | . '+' expression
   60           | . '-' expression
   61           | . expression '*' expression
   62           | . expression '/' expression
   63           | . expression KW_DIV expression
   64           | . expression KW_MOD expression
   65           | . expression '+' expression
   66           | . expression '-' expression
   67           | . KW_NOT expression
   68           | . '!' expression
   69           | . expression '=' expression
   70           | . expression KW_DIFFERENT expression
   71           | . expression '<' expression
   72           | . expression '>' expression
   72           | expression '>' . expression
   73           | . expression KW_LESS_OR_EQ expression
   74           | . expression KW_MORE_OR_EQ expression
   75           | . expression KW_AND expression
   76           | . expression KW_OR expression
   77           | . expression KW_AND_SYMB expression
   78           | . expression KW_OR_SYMB expression
   79           | . '(' in_brackets ')'
  101 in_brackets: expression '>' . expression
  120 arrays: . ARRAY array_brackets KW_OF basic_types

    IDENT      shift, and go to state 39
    POSINT     shift, and go to state 40
    REAL       shift, and go to state 41
    STRING     shift, and go to state 42
    KW_RESULT  shift, and go to state 43
    ARRAY      shift, and go to state 44
    KW_NOT     shift, and go to state 45
    KW_TRUE    shift, and go to state 46
    KW_FALSE   shift, and go to state 47
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '('        shift, and go to state 51

    proc_call   go to state 52
    casting     go to state 53
    expression  go to state 227
    arrays      go to state 55


State 167

   43 proc_call: . IDENT '(' arguments ')'
   47 casting: . '(' basic_types ')' expression
   48        | . '(' ARRAY array_brackets KW_OF basic_types ')' expression
   49 expression: . POSINT
   50           | . REAL
   51           | . arrays
   52           | . IDENT
   53           | . proc_call
   54           | . KW_RESULT
   55           | . STRING
   56           | . casting
   57           | . KW_TRUE
   58           | . KW_FALSE
   59           | . '+' expression
   60           | . '-' expression
   61           | . expression '*' expression
   62           | . expression '/' expression
   63           | . expression KW_DIV expression
   64           | . expression KW_MOD expression
   65           | . expression '+' expression
   66           | . expression '-' expression
   67           | . KW_NOT expression
   68           | . '!' expression
   69           | . expression '=' expression
   69           | expression '=' . expression
   70           | . expression KW_DIFFERENT expression
   71           | . expression '<' expression
   72           | . expression '>' expression
   73           | . expression KW_LESS_OR_EQ expression
   74           | . expression KW_MORE_OR_EQ expression
   75           | . expression KW_AND expression
   76           | . expression KW_OR expression
   77           | . expression KW_AND_SYMB expression
   78           | . expression KW_OR_SYMB expression
   79           | . '(' in_brackets ')'
   98 in_brackets: expression '=' . expression
  120 arrays: . ARRAY array_brackets KW_OF basic_types

    IDENT      shift, and go to state 39
    POSINT     shift, and go to state 40
    REAL       shift, and go to state 41
    STRING     shift, and go to state 42
    KW_RESULT  shift, and go to state 43
    ARRAY      shift, and go to state 44
    KW_NOT     shift, and go to state 45
    KW_TRUE    shift, and go to state 46
    KW_FALSE   shift, and go to state 47
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '('        shift, and go to state 51

    proc_call   go to state 52
    casting     go to state 53
    expression  go to state 228
    arrays      go to state 55


State 168

   43 proc_call: . IDENT '(' arguments ')'
   47 casting: . '(' basic_types ')' expression
   48        | . '(' ARRAY array_brackets KW_OF basic_types ')' expression
   49 expression: . POSINT
   50           | . REAL
   51           | . arrays
   52           | . IDENT
   53           | . proc_call
   54           | . KW_RESULT
   55           | . STRING
   56           | . casting
   57           | . KW_TRUE
   58           | . KW_FALSE
   59           | . '+' expression
   60           | . '-' expression
   61           | . expression '*' expression
   62           | . expression '/' expression
   63           | . expression KW_DIV expression
   64           | . expression KW_MOD expression
   65           | . expression '+' expression
   65           | expression '+' . expression
   66           | . expression '-' expression
   67           | . KW_NOT expression
   68           | . '!' expression
   69           | . expression '=' expression
   70           | . expression KW_DIFFERENT expression
   71           | . expression '<' expression
   72           | . expression '>' expression
   73           | . expression KW_LESS_OR_EQ expression
   74           | . expression KW_MORE_OR_EQ expression
   75           | . expression KW_AND expression
   76           | . expression KW_OR expression
   77           | . expression KW_AND_SYMB expression
   78           | . expression KW_OR_SYMB expression
   79           | . '(' in_brackets ')'
   94 in_brackets: expression '+' . expression
  120 arrays: . ARRAY array_brackets KW_OF basic_types

    IDENT      shift, and go to state 39
    POSINT     shift, and go to state 40
    REAL       shift, and go to state 41
    STRING     shift, and go to state 42
    KW_RESULT  shift, and go to state 43
    ARRAY      shift, and go to state 44
    KW_NOT     shift, and go to state 45
    KW_TRUE    shift, and go to state 46
    KW_FALSE   shift, and go to state 47
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '('        shift, and go to state 51

    proc_call   go to state 52
    casting     go to state 53
    expression  go to state 229
    arrays      go to state 55


State 169

   43 proc_call: . IDENT '(' arguments ')'
   47 casting: . '(' basic_types ')' expression
   48        | . '(' ARRAY array_brackets KW_OF basic_types ')' expression
   49 expression: . POSINT
   50           | . REAL
   51           | . arrays
   52           | . IDENT
   53           | . proc_call
   54           | . KW_RESULT
   55           | . STRING
   56           | . casting
   57           | . KW_TRUE
   58           | . KW_FALSE
   59           | . '+' expression
   60           | . '-' expression
   61           | . expression '*' expression
   62           | . expression '/' expression
   63           | . expression KW_DIV expression
   64           | . expression KW_MOD expression
   65           | . expression '+' expression
   66           | . expression '-' expression
   66           | expression '-' . expression
   67           | . KW_NOT expression
   68           | . '!' expression
   69           | . expression '=' expression
   70           | . expression KW_DIFFERENT expression
   71           | . expression '<' expression
   72           | . expression '>' expression
   73           | . expression KW_LESS_OR_EQ expression
   74           | . expression KW_MORE_OR_EQ expression
   75           | . expression KW_AND expression
   76           | . expression KW_OR expression
   77           | . expression KW_AND_SYMB expression
   78           | . expression KW_OR_SYMB expression
   79           | . '(' in_brackets ')'
   95 in_brackets: expression '-' . expression
  120 arrays: . ARRAY array_brackets KW_OF basic_types

    IDENT      shift, and go to state 39
    POSINT     shift, and go to state 40
    REAL       shift, and go to state 41
    STRING     shift, and go to state 42
    KW_RESULT  shift, and go to state 43
    ARRAY      shift, and go to state 44
    KW_NOT     shift, and go to state 45
    KW_TRUE    shift, and go to state 46
    KW_FALSE   shift, and go to state 47
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '('        shift, and go to state 51

    proc_call   go to state 52
    casting     go to state 53
    expression  go to state 230
    arrays      go to state 55


State 170

   43 proc_call: . IDENT '(' arguments ')'
   47 casting: . '(' basic_types ')' expression
   48        | . '(' ARRAY array_brackets KW_OF basic_types ')' expression
   49 expression: . POSINT
   50           | . REAL
   51           | . arrays
   52           | . IDENT
   53           | . proc_call
   54           | . KW_RESULT
   55           | . STRING
   56           | . casting
   57           | . KW_TRUE
   58           | . KW_FALSE
   59           | . '+' expression
   60           | . '-' expression
   61           | . expression '*' expression
   61           | expression '*' . expression
   62           | . expression '/' expression
   63           | . expression KW_DIV expression
   64           | . expression KW_MOD expression
   65           | . expression '+' expression
   66           | . expression '-' expression
   67           | . KW_NOT expression
   68           | . '!' expression
   69           | . expression '=' expression
   70           | . expression KW_DIFFERENT expression
   71           | . expression '<' expression
   72           | . expression '>' expression
   73           | . expression KW_LESS_OR_EQ expression
   74           | . expression KW_MORE_OR_EQ expression
   75           | . expression KW_AND expression
   76           | . expression KW_OR expression
   77           | . expression KW_AND_SYMB expression
   78           | . expression KW_OR_SYMB expression
   79           | . '(' in_brackets ')'
   90 in_brackets: expression '*' . expression
  120 arrays: . ARRAY array_brackets KW_OF basic_types

    IDENT      shift, and go to state 39
    POSINT     shift, and go to state 40
    REAL       shift, and go to state 41
    STRING     shift, and go to state 42
    KW_RESULT  shift, and go to state 43
    ARRAY      shift, and go to state 44
    KW_NOT     shift, and go to state 45
    KW_TRUE    shift, and go to state 46
    KW_FALSE   shift, and go to state 47
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '('        shift, and go to state 51

    proc_call   go to state 52
    casting     go to state 53
    expression  go to state 231
    arrays      go to state 55


State 171

   43 proc_call: . IDENT '(' arguments ')'
   47 casting: . '(' basic_types ')' expression
   48        | . '(' ARRAY array_brackets KW_OF basic_types ')' expression
   49 expression: . POSINT
   50           | . REAL
   51           | . arrays
   52           | . IDENT
   53           | . proc_call
   54           | . KW_RESULT
   55           | . STRING
   56           | . casting
   57           | . KW_TRUE
   58           | . KW_FALSE
   59           | . '+' expression
   60           | . '-' expression
   61           | . expression '*' expression
   62           | . expression '/' expression
   62           | expression '/' . expression
   63           | . expression KW_DIV expression
   64           | . expression KW_MOD expression
   65           | . expression '+' expression
   66           | . expression '-' expression
   67           | . KW_NOT expression
   68           | . '!' expression
   69           | . expression '=' expression
   70           | . expression KW_DIFFERENT expression
   71           | . expression '<' expression
   72           | . expression '>' expression
   73           | . expression KW_LESS_OR_EQ expression
   74           | . expression KW_MORE_OR_EQ expression
   75           | . expression KW_AND expression
   76           | . expression KW_OR expression
   77           | . expression KW_AND_SYMB expression
   78           | . expression KW_OR_SYMB expression
   79           | . '(' in_brackets ')'
   91 in_brackets: expression '/' . expression
  120 arrays: . ARRAY array_brackets KW_OF basic_types

    IDENT      shift, and go to state 39
    POSINT     shift, and go to state 40
    REAL       shift, and go to state 41
    STRING     shift, and go to state 42
    KW_RESULT  shift, and go to state 43
    ARRAY      shift, and go to state 44
    KW_NOT     shift, and go to state 45
    KW_TRUE    shift, and go to state 46
    KW_FALSE   shift, and go to state 47
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '('        shift, and go to state 51

    proc_call   go to state 52
    casting     go to state 53
    expression  go to state 232
    arrays      go to state 55


State 172

   79 expression: '(' in_brackets ')' .

    $default  reduce using rule 79 (expression)


State 173

   43 proc_call: . IDENT '(' arguments ')'
   47 casting: . '(' basic_types ')' expression
   47        | '(' basic_types ')' . expression
   48        | . '(' ARRAY array_brackets KW_OF basic_types ')' expression
   49 expression: . POSINT
   50           | . REAL
   51           | . arrays
   52           | . IDENT
   53           | . proc_call
   54           | . KW_RESULT
   55           | . STRING
   56           | . casting
   57           | . KW_TRUE
   58           | . KW_FALSE
   59           | . '+' expression
   60           | . '-' expression
   61           | . expression '*' expression
   62           | . expression '/' expression
   63           | . expression KW_DIV expression
   64           | . expression KW_MOD expression
   65           | . expression '+' expression
   66           | . expression '-' expression
   67           | . KW_NOT expression
   68           | . '!' expression
   69           | . expression '=' expression
   70           | . expression KW_DIFFERENT expression
   71           | . expression '<' expression
   72           | . expression '>' expression
   73           | . expression KW_LESS_OR_EQ expression
   74           | . expression KW_MORE_OR_EQ expression
   75           | . expression KW_AND expression
   76           | . expression KW_OR expression
   77           | . expression KW_AND_SYMB expression
   78           | . expression KW_OR_SYMB expression
   79           | . '(' in_brackets ')'
  120 arrays: . ARRAY array_brackets KW_OF basic_types

    IDENT      shift, and go to state 39
    POSINT     shift, and go to state 40
    REAL       shift, and go to state 41
    STRING     shift, and go to state 42
    KW_RESULT  shift, and go to state 43
    ARRAY      shift, and go to state 44
    KW_NOT     shift, and go to state 45
    KW_TRUE    shift, and go to state 46
    KW_FALSE   shift, and go to state 47
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '('        shift, and go to state 51

    proc_call   go to state 52
    casting     go to state 53
    expression  go to state 233
    arrays      go to state 55


State 174

   61 expression: expression . '*' expression
   62           | expression . '/' expression
   63           | expression . KW_DIV expression
   64           | expression . KW_MOD expression
   65           | expression . '+' expression
   66           | expression . '-' expression
   69           | expression . '=' expression
   70           | expression . KW_DIFFERENT expression
   71           | expression . '<' expression
   72           | expression . '>' expression
   73           | expression . KW_LESS_OR_EQ expression
   74           | expression . KW_MORE_OR_EQ expression
   75           | expression . KW_AND expression
   75           | expression KW_AND expression .  [IDENT, KW_BEGIN, KW_END, KW_AND, KW_FUNCTION, KW_PROCEDURE, KW_RESULT, KW_DO, KW_GOTO, KW_RETURN, KW_ELSE, KW_IF, KW_THEN, KW_FOR, KW_OR, KW_REPEAT, KW_UNTIL, KW_VAR, KW_WHILE, KW_TO, KW_DOWNTO, KW_AND_SYMB, KW_OR_SYMB, KW_TYPE, ')', ';', ',']
   76           | expression . KW_OR expression
   77           | expression . KW_AND_SYMB expression
   78           | expression . KW_OR_SYMB expression

    KW_DIV         shift, and go to state 113
    KW_MOD         shift, and go to state 114
    KW_DIFFERENT   shift, and go to state 117
    KW_LESS_OR_EQ  shift, and go to state 118
    KW_MORE_OR_EQ  shift, and go to state 119
    '<'            shift, and go to state 122
    '>'            shift, and go to state 123
    '='            shift, and go to state 124
    '+'            shift, and go to state 125
    '-'            shift, and go to state 126
    '*'            shift, and go to state 127
    '/'            shift, and go to state 128

    $default  reduce using rule 75 (expression)

    Conflict between rule 75 and token KW_AND resolved as reduce (%left KW_AND).
    Conflict between rule 75 and token KW_DIV resolved as shift (KW_AND < KW_DIV).
    Conflict between rule 75 and token KW_MOD resolved as shift (KW_AND < KW_MOD).
    Conflict between rule 75 and token KW_OR resolved as reduce (KW_OR < KW_AND).
    Conflict between rule 75 and token KW_DIFFERENT resolved as shift (KW_AND < KW_DIFFERENT).
    Conflict between rule 75 and token KW_LESS_OR_EQ resolved as shift (KW_AND < KW_LESS_OR_EQ).
    Conflict between rule 75 and token KW_MORE_OR_EQ resolved as shift (KW_AND < KW_MORE_OR_EQ).
    Conflict between rule 75 and token KW_AND_SYMB resolved as reduce (%left KW_AND_SYMB).
    Conflict between rule 75 and token KW_OR_SYMB resolved as reduce (KW_OR_SYMB < KW_AND).
    Conflict between rule 75 and token '<' resolved as shift (KW_AND < '<').
    Conflict between rule 75 and token '>' resolved as shift (KW_AND < '>').
    Conflict between rule 75 and token '=' resolved as shift (KW_AND < '=').
    Conflict between rule 75 and token '+' resolved as shift (KW_AND < '+').
    Conflict between rule 75 and token '-' resolved as shift (KW_AND < '-').
    Conflict between rule 75 and token '*' resolved as shift (KW_AND < '*').
    Conflict between rule 75 and token '/' resolved as shift (KW_AND < '/').


State 175

   61 expression: expression . '*' expression
   62           | expression . '/' expression
   63           | expression . KW_DIV expression
   63           | expression KW_DIV expression .  [IDENT, KW_BEGIN, KW_END, KW_AND, KW_DIV, KW_FUNCTION, KW_MOD, KW_PROCEDURE, KW_RESULT, KW_DO, KW_GOTO, KW_RETURN, KW_ELSE, KW_IF, KW_THEN, KW_FOR, KW_OR, KW_REPEAT, KW_UNTIL, KW_VAR, KW_WHILE, KW_TO, KW_DOWNTO, KW_DIFFERENT, KW_LESS_OR_EQ, KW_MORE_OR_EQ, KW_AND_SYMB, KW_OR_SYMB, KW_TYPE, '<', '>', '=', '+', '-', '*', '/', ')', ';', ',']
   64           | expression . KW_MOD expression
   65           | expression . '+' expression
   66           | expression . '-' expression
   69           | expression . '=' expression
   70           | expression . KW_DIFFERENT expression
   71           | expression . '<' expression
   72           | expression . '>' expression
   73           | expression . KW_LESS_OR_EQ expression
   74           | expression . KW_MORE_OR_EQ expression
   75           | expression . KW_AND expression
   76           | expression . KW_OR expression
   77           | expression . KW_AND_SYMB expression
   78           | expression . KW_OR_SYMB expression

    $default  reduce using rule 63 (expression)

    Conflict between rule 63 and token KW_AND resolved as reduce (KW_AND < KW_DIV).
    Conflict between rule 63 and token KW_DIV resolved as reduce (%left KW_DIV).
    Conflict between rule 63 and token KW_MOD resolved as reduce (%left KW_MOD).
    Conflict between rule 63 and token KW_OR resolved as reduce (KW_OR < KW_DIV).
    Conflict between rule 63 and token KW_DIFFERENT resolved as reduce (KW_DIFFERENT < KW_DIV).
    Conflict between rule 63 and token KW_LESS_OR_EQ resolved as reduce (KW_LESS_OR_EQ < KW_DIV).
    Conflict between rule 63 and token KW_MORE_OR_EQ resolved as reduce (KW_MORE_OR_EQ < KW_DIV).
    Conflict between rule 63 and token KW_AND_SYMB resolved as reduce (KW_AND_SYMB < KW_DIV).
    Conflict between rule 63 and token KW_OR_SYMB resolved as reduce (KW_OR_SYMB < KW_DIV).
    Conflict between rule 63 and token '<' resolved as reduce ('<' < KW_DIV).
    Conflict between rule 63 and token '>' resolved as reduce ('>' < KW_DIV).
    Conflict between rule 63 and token '=' resolved as reduce ('=' < KW_DIV).
    Conflict between rule 63 and token '+' resolved as reduce ('+' < KW_DIV).
    Conflict between rule 63 and token '-' resolved as reduce ('-' < KW_DIV).
    Conflict between rule 63 and token '*' resolved as reduce (%left '*').
    Conflict between rule 63 and token '/' resolved as reduce (%left '/').


State 176

   61 expression: expression . '*' expression
   62           | expression . '/' expression
   63           | expression . KW_DIV expression
   64           | expression . KW_MOD expression
   64           | expression KW_MOD expression .  [IDENT, KW_BEGIN, KW_END, KW_AND, KW_DIV, KW_FUNCTION, KW_MOD, KW_PROCEDURE, KW_RESULT, KW_DO, KW_GOTO, KW_RETURN, KW_ELSE, KW_IF, KW_THEN, KW_FOR, KW_OR, KW_REPEAT, KW_UNTIL, KW_VAR, KW_WHILE, KW_TO, KW_DOWNTO, KW_DIFFERENT, KW_LESS_OR_EQ, KW_MORE_OR_EQ, KW_AND_SYMB, KW_OR_SYMB, KW_TYPE, '<', '>', '=', '+', '-', '*', '/', ')', ';', ',']
   65           | expression . '+' expression
   66           | expression . '-' expression
   69           | expression . '=' expression
   70           | expression . KW_DIFFERENT expression
   71           | expression . '<' expression
   72           | expression . '>' expression
   73           | expression . KW_LESS_OR_EQ expression
   74           | expression . KW_MORE_OR_EQ expression
   75           | expression . KW_AND expression
   76           | expression . KW_OR expression
   77           | expression . KW_AND_SYMB expression
   78           | expression . KW_OR_SYMB expression

    $default  reduce using rule 64 (expression)

    Conflict between rule 64 and token KW_AND resolved as reduce (KW_AND < KW_MOD).
    Conflict between rule 64 and token KW_DIV resolved as reduce (%left KW_DIV).
    Conflict between rule 64 and token KW_MOD resolved as reduce (%left KW_MOD).
    Conflict between rule 64 and token KW_OR resolved as reduce (KW_OR < KW_MOD).
    Conflict between rule 64 and token KW_DIFFERENT resolved as reduce (KW_DIFFERENT < KW_MOD).
    Conflict between rule 64 and token KW_LESS_OR_EQ resolved as reduce (KW_LESS_OR_EQ < KW_MOD).
    Conflict between rule 64 and token KW_MORE_OR_EQ resolved as reduce (KW_MORE_OR_EQ < KW_MOD).
    Conflict between rule 64 and token KW_AND_SYMB resolved as reduce (KW_AND_SYMB < KW_MOD).
    Conflict between rule 64 and token KW_OR_SYMB resolved as reduce (KW_OR_SYMB < KW_MOD).
    Conflict between rule 64 and token '<' resolved as reduce ('<' < KW_MOD).
    Conflict between rule 64 and token '>' resolved as reduce ('>' < KW_MOD).
    Conflict between rule 64 and token '=' resolved as reduce ('=' < KW_MOD).
    Conflict between rule 64 and token '+' resolved as reduce ('+' < KW_MOD).
    Conflict between rule 64 and token '-' resolved as reduce ('-' < KW_MOD).
    Conflict between rule 64 and token '*' resolved as reduce (%left '*').
    Conflict between rule 64 and token '/' resolved as reduce (%left '/').


State 177

    4 statement_list: . %empty  [KW_END]
    5               | . statement statement_list
    6 statement: . subprogram_def
    7          | . proc_call ';'
    8          | . label_decl
    9          | . goto_statement
   10          | . assignment
   11          | . KW_RETURN
   12          | . type_def
   13          | . var_declaration
   14          | . loops
   15 loops: . if_statement
   16      | . for_statement
   17      | . while_statement
   18 if_statement: . KW_IF expression KW_THEN KW_BEGIN statement_list KW_END ';'
   18             | KW_IF expression KW_THEN KW_BEGIN . statement_list KW_END ';'
   19             | . KW_IF expression KW_THEN KW_BEGIN statement_list KW_END ';' KW_ELSE KW_BEGIN statement_list KW_END ';'
   19             | KW_IF expression KW_THEN KW_BEGIN . statement_list KW_END ';' KW_ELSE KW_BEGIN statement_list KW_END ';'
   20             | . KW_IF expression KW_THEN statement
   21             | . KW_IF expression KW_THEN statement KW_ELSE statement
   22             | . KW_IF expression KW_THEN statement KW_ELSE KW_BEGIN statement_list KW_END ';'
   23             | . KW_IF expression KW_THEN KW_BEGIN statement_list KW_END ';' KW_ELSE statement
   23             | KW_IF expression KW_THEN KW_BEGIN . statement_list KW_END ';' KW_ELSE statement
   24 while_statement: . KW_WHILE expression KW_DO KW_BEGIN statement_list KW_END ';'
   25                | . KW_REPEAT KW_BEGIN statement_list KW_END ';' KW_UNTIL expression
   26                | . KW_WHILE expression KW_DO statement
   27                | . KW_REPEAT statement KW_UNTIL expression
   28 for_statement: . KW_FOR IDENT ASSIGN expression KW_TO expression KW_DO KW_BEGIN statement_list KW_END ';'
   29              | . KW_FOR IDENT ASSIGN expression KW_DOWNTO expression KW_DO KW_BEGIN statement_list KW_END ';'
   30              | . KW_FOR IDENT ASSIGN expression KW_TO expression KW_DO statement
   31              | . KW_FOR IDENT ASSIGN expression KW_DOWNTO expression KW_DO statement
   32 label_decl: . IDENT ':' label_body
   42 goto_statement: . KW_GOTO IDENT ';'
   43 proc_call: . IDENT '(' arguments ')'
  108 assignment: . IDENT ASSIGN expression ';'
  109           | . KW_RESULT ASSIGN expression ';'
  123 subprogram_def: . KW_FUNCTION IDENT '(' proc_def_arguments ')' ':' FuncReturnTypes ';' statement_list body ';'
  124               | . KW_PROCEDURE IDENT '(' proc_def_arguments ')' ';' statement_list body ';'
  132 type_def: . KW_TYPE type_def_body
  140 var_declaration: . KW_VAR names ':' basic_types var_decl_more
  141                | . KW_VAR names ':' ARRAY array_brackets KW_OF basic_types var_decl_more

    IDENT         shift, and go to state 6
    KW_FUNCTION   shift, and go to state 7
    KW_PROCEDURE  shift, and go to state 8
    KW_RESULT     shift, and go to state 9
    KW_GOTO       shift, and go to state 10
    KW_RETURN     shift, and go to state 11
    KW_IF         shift, and go to state 12
    KW_FOR        shift, and go to state 13
    KW_REPEAT     shift, and go to state 14
    KW_VAR        shift, and go to state 15
    KW_WHILE      shift, and go to state 16
    KW_TYPE       shift, and go to state 17

    $default  reduce using rule 4 (statement_list)

    statement_list   go to state 234
    statement        go to state 19
    loops            go to state 20
    if_statement     go to state 21
    while_statement  go to state 22
    for_statement    go to state 23
    label_decl       go to state 24
    goto_statement   go to state 25
    proc_call        go to state 26
    assignment       go to state 27
    subprogram_def   go to state 28
    type_def         go to state 29
    var_declaration  go to state 30


State 178

   20 if_statement: KW_IF expression KW_THEN statement .  [IDENT, KW_BEGIN, KW_END, KW_FUNCTION, KW_PROCEDURE, KW_RESULT, KW_GOTO, KW_RETURN, KW_IF, KW_FOR, KW_REPEAT, KW_UNTIL, KW_VAR, KW_WHILE, KW_TYPE, ';']
   21             | KW_IF expression KW_THEN statement . KW_ELSE statement
   22             | KW_IF expression KW_THEN statement . KW_ELSE KW_BEGIN statement_list KW_END ';'

    KW_ELSE  shift, and go to state 235

    $default  reduce using rule 20 (if_statement)

    Conflict between rule 20 and token KW_ELSE resolved as shift (KW_THEN < KW_ELSE).


State 179

   61 expression: expression . '*' expression
   62           | expression . '/' expression
   63           | expression . KW_DIV expression
   64           | expression . KW_MOD expression
   65           | expression . '+' expression
   66           | expression . '-' expression
   69           | expression . '=' expression
   70           | expression . KW_DIFFERENT expression
   71           | expression . '<' expression
   72           | expression . '>' expression
   73           | expression . KW_LESS_OR_EQ expression
   74           | expression . KW_MORE_OR_EQ expression
   75           | expression . KW_AND expression
   76           | expression . KW_OR expression
   76           | expression KW_OR expression .  [IDENT, KW_BEGIN, KW_END, KW_FUNCTION, KW_PROCEDURE, KW_RESULT, KW_DO, KW_GOTO, KW_RETURN, KW_ELSE, KW_IF, KW_THEN, KW_FOR, KW_OR, KW_REPEAT, KW_UNTIL, KW_VAR, KW_WHILE, KW_TO, KW_DOWNTO, KW_OR_SYMB, KW_TYPE, ')', ';', ',']
   77           | expression . KW_AND_SYMB expression
   78           | expression . KW_OR_SYMB expression

    KW_AND         shift, and go to state 112
    KW_DIV         shift, and go to state 113
    KW_MOD         shift, and go to state 114
    KW_DIFFERENT   shift, and go to state 117
    KW_LESS_OR_EQ  shift, and go to state 118
    KW_MORE_OR_EQ  shift, and go to state 119
    KW_AND_SYMB    shift, and go to state 120
    '<'            shift, and go to state 122
    '>'            shift, and go to state 123
    '='            shift, and go to state 124
    '+'            shift, and go to state 125
    '-'            shift, and go to state 126
    '*'            shift, and go to state 127
    '/'            shift, and go to state 128

    $default  reduce using rule 76 (expression)

    Conflict between rule 76 and token KW_AND resolved as shift (KW_OR < KW_AND).
    Conflict between rule 76 and token KW_DIV resolved as shift (KW_OR < KW_DIV).
    Conflict between rule 76 and token KW_MOD resolved as shift (KW_OR < KW_MOD).
    Conflict between rule 76 and token KW_OR resolved as reduce (%left KW_OR).
    Conflict between rule 76 and token KW_DIFFERENT resolved as shift (KW_OR < KW_DIFFERENT).
    Conflict between rule 76 and token KW_LESS_OR_EQ resolved as shift (KW_OR < KW_LESS_OR_EQ).
    Conflict between rule 76 and token KW_MORE_OR_EQ resolved as shift (KW_OR < KW_MORE_OR_EQ).
    Conflict between rule 76 and token KW_AND_SYMB resolved as shift (KW_OR < KW_AND_SYMB).
    Conflict between rule 76 and token KW_OR_SYMB resolved as reduce (%left KW_OR_SYMB).
    Conflict between rule 76 and token '<' resolved as shift (KW_OR < '<').
    Conflict between rule 76 and token '>' resolved as shift (KW_OR < '>').
    Conflict between rule 76 and token '=' resolved as shift (KW_OR < '=').
    Conflict between rule 76 and token '+' resolved as shift (KW_OR < '+').
    Conflict between rule 76 and token '-' resolved as shift (KW_OR < '-').
    Conflict between rule 76 and token '*' resolved as shift (KW_OR < '*').
    Conflict between rule 76 and token '/' resolved as shift (KW_OR < '/').


State 180

   61 expression: expression . '*' expression
   62           | expression . '/' expression
   63           | expression . KW_DIV expression
   64           | expression . KW_MOD expression
   65           | expression . '+' expression
   66           | expression . '-' expression
   69           | expression . '=' expression
   70           | expression . KW_DIFFERENT expression
   70           | expression KW_DIFFERENT expression .  [IDENT, KW_BEGIN, KW_END, KW_AND, KW_FUNCTION, KW_PROCEDURE, KW_RESULT, KW_DO, KW_GOTO, KW_RETURN, KW_ELSE, KW_IF, KW_THEN, KW_FOR, KW_OR, KW_REPEAT, KW_UNTIL, KW_VAR, KW_WHILE, KW_TO, KW_DOWNTO, KW_DIFFERENT, KW_LESS_OR_EQ, KW_MORE_OR_EQ, KW_AND_SYMB, KW_OR_SYMB, KW_TYPE, '<', '>', '=', ')', ';', ',']
   71           | expression . '<' expression
   72           | expression . '>' expression
   73           | expression . KW_LESS_OR_EQ expression
   74           | expression . KW_MORE_OR_EQ expression
   75           | expression . KW_AND expression
   76           | expression . KW_OR expression
   77           | expression . KW_AND_SYMB expression
   78           | expression . KW_OR_SYMB expression

    KW_DIV  shift, and go to state 113
    KW_MOD  shift, and go to state 114
    '+'     shift, and go to state 125
    '-'     shift, and go to state 126
    '*'     shift, and go to state 127
    '/'     shift, and go to state 128

    $default  reduce using rule 70 (expression)

    Conflict between rule 70 and token KW_AND resolved as reduce (KW_AND < KW_DIFFERENT).
    Conflict between rule 70 and token KW_DIV resolved as shift (KW_DIFFERENT < KW_DIV).
    Conflict between rule 70 and token KW_MOD resolved as shift (KW_DIFFERENT < KW_MOD).
    Conflict between rule 70 and token KW_OR resolved as reduce (KW_OR < KW_DIFFERENT).
    Conflict between rule 70 and token KW_DIFFERENT resolved as reduce (%left KW_DIFFERENT).
    Conflict between rule 70 and token KW_LESS_OR_EQ resolved as reduce (%left KW_LESS_OR_EQ).
    Conflict between rule 70 and token KW_MORE_OR_EQ resolved as reduce (%left KW_MORE_OR_EQ).
    Conflict between rule 70 and token KW_AND_SYMB resolved as reduce (KW_AND_SYMB < KW_DIFFERENT).
    Conflict between rule 70 and token KW_OR_SYMB resolved as reduce (KW_OR_SYMB < KW_DIFFERENT).
    Conflict between rule 70 and token '<' resolved as reduce (%left '<').
    Conflict between rule 70 and token '>' resolved as reduce (%left '>').
    Conflict between rule 70 and token '=' resolved as reduce (%left '=').
    Conflict between rule 70 and token '+' resolved as shift (KW_DIFFERENT < '+').
    Conflict between rule 70 and token '-' resolved as shift (KW_DIFFERENT < '-').
    Conflict between rule 70 and token '*' resolved as shift (KW_DIFFERENT < '*').
    Conflict between rule 70 and token '/' resolved as shift (KW_DIFFERENT < '/').


State 181

   61 expression: expression . '*' expression
   62           | expression . '/' expression
   63           | expression . KW_DIV expression
   64           | expression . KW_MOD expression
   65           | expression . '+' expression
   66           | expression . '-' expression
   69           | expression . '=' expression
   70           | expression . KW_DIFFERENT expression
   71           | expression . '<' expression
   72           | expression . '>' expression
   73           | expression . KW_LESS_OR_EQ expression
   73           | expression KW_LESS_OR_EQ expression .  [IDENT, KW_BEGIN, KW_END, KW_AND, KW_FUNCTION, KW_PROCEDURE, KW_RESULT, KW_DO, KW_GOTO, KW_RETURN, KW_ELSE, KW_IF, KW_THEN, KW_FOR, KW_OR, KW_REPEAT, KW_UNTIL, KW_VAR, KW_WHILE, KW_TO, KW_DOWNTO, KW_DIFFERENT, KW_LESS_OR_EQ, KW_MORE_OR_EQ, KW_AND_SYMB, KW_OR_SYMB, KW_TYPE, '<', '>', '=', ')', ';', ',']
   74           | expression . KW_MORE_OR_EQ expression
   75           | expression . KW_AND expression
   76           | expression . KW_OR expression
   77           | expression . KW_AND_SYMB expression
   78           | expression . KW_OR_SYMB expression

    KW_DIV  shift, and go to state 113
    KW_MOD  shift, and go to state 114
    '+'     shift, and go to state 125
    '-'     shift, and go to state 126
    '*'     shift, and go to state 127
    '/'     shift, and go to state 128

    $default  reduce using rule 73 (expression)

    Conflict between rule 73 and token KW_AND resolved as reduce (KW_AND < KW_LESS_OR_EQ).
    Conflict between rule 73 and token KW_DIV resolved as shift (KW_LESS_OR_EQ < KW_DIV).
    Conflict between rule 73 and token KW_MOD resolved as shift (KW_LESS_OR_EQ < KW_MOD).
    Conflict between rule 73 and token KW_OR resolved as reduce (KW_OR < KW_LESS_OR_EQ).
    Conflict between rule 73 and token KW_DIFFERENT resolved as reduce (%left KW_DIFFERENT).
    Conflict between rule 73 and token KW_LESS_OR_EQ resolved as reduce (%left KW_LESS_OR_EQ).
    Conflict between rule 73 and token KW_MORE_OR_EQ resolved as reduce (%left KW_MORE_OR_EQ).
    Conflict between rule 73 and token KW_AND_SYMB resolved as reduce (KW_AND_SYMB < KW_LESS_OR_EQ).
    Conflict between rule 73 and token KW_OR_SYMB resolved as reduce (KW_OR_SYMB < KW_LESS_OR_EQ).
    Conflict between rule 73 and token '<' resolved as reduce (%left '<').
    Conflict between rule 73 and token '>' resolved as reduce (%left '>').
    Conflict between rule 73 and token '=' resolved as reduce (%left '=').
    Conflict between rule 73 and token '+' resolved as shift (KW_LESS_OR_EQ < '+').
    Conflict between rule 73 and token '-' resolved as shift (KW_LESS_OR_EQ < '-').
    Conflict between rule 73 and token '*' resolved as shift (KW_LESS_OR_EQ < '*').
    Conflict between rule 73 and token '/' resolved as shift (KW_LESS_OR_EQ < '/').


State 182

   61 expression: expression . '*' expression
   62           | expression . '/' expression
   63           | expression . KW_DIV expression
   64           | expression . KW_MOD expression
   65           | expression . '+' expression
   66           | expression . '-' expression
   69           | expression . '=' expression
   70           | expression . KW_DIFFERENT expression
   71           | expression . '<' expression
   72           | expression . '>' expression
   73           | expression . KW_LESS_OR_EQ expression
   74           | expression . KW_MORE_OR_EQ expression
   74           | expression KW_MORE_OR_EQ expression .  [IDENT, KW_BEGIN, KW_END, KW_AND, KW_FUNCTION, KW_PROCEDURE, KW_RESULT, KW_DO, KW_GOTO, KW_RETURN, KW_ELSE, KW_IF, KW_THEN, KW_FOR, KW_OR, KW_REPEAT, KW_UNTIL, KW_VAR, KW_WHILE, KW_TO, KW_DOWNTO, KW_DIFFERENT, KW_LESS_OR_EQ, KW_MORE_OR_EQ, KW_AND_SYMB, KW_OR_SYMB, KW_TYPE, '<', '>', '=', ')', ';', ',']
   75           | expression . KW_AND expression
   76           | expression . KW_OR expression
   77           | expression . KW_AND_SYMB expression
   78           | expression . KW_OR_SYMB expression

    KW_DIV  shift, and go to state 113
    KW_MOD  shift, and go to state 114
    '+'     shift, and go to state 125
    '-'     shift, and go to state 126
    '*'     shift, and go to state 127
    '/'     shift, and go to state 128

    $default  reduce using rule 74 (expression)

    Conflict between rule 74 and token KW_AND resolved as reduce (KW_AND < KW_MORE_OR_EQ).
    Conflict between rule 74 and token KW_DIV resolved as shift (KW_MORE_OR_EQ < KW_DIV).
    Conflict between rule 74 and token KW_MOD resolved as shift (KW_MORE_OR_EQ < KW_MOD).
    Conflict between rule 74 and token KW_OR resolved as reduce (KW_OR < KW_MORE_OR_EQ).
    Conflict between rule 74 and token KW_DIFFERENT resolved as reduce (%left KW_DIFFERENT).
    Conflict between rule 74 and token KW_LESS_OR_EQ resolved as reduce (%left KW_LESS_OR_EQ).
    Conflict between rule 74 and token KW_MORE_OR_EQ resolved as reduce (%left KW_MORE_OR_EQ).
    Conflict between rule 74 and token KW_AND_SYMB resolved as reduce (KW_AND_SYMB < KW_MORE_OR_EQ).
    Conflict between rule 74 and token KW_OR_SYMB resolved as reduce (KW_OR_SYMB < KW_MORE_OR_EQ).
    Conflict between rule 74 and token '<' resolved as reduce (%left '<').
    Conflict between rule 74 and token '>' resolved as reduce (%left '>').
    Conflict between rule 74 and token '=' resolved as reduce (%left '=').
    Conflict between rule 74 and token '+' resolved as shift (KW_MORE_OR_EQ < '+').
    Conflict between rule 74 and token '-' resolved as shift (KW_MORE_OR_EQ < '-').
    Conflict between rule 74 and token '*' resolved as shift (KW_MORE_OR_EQ < '*').
    Conflict between rule 74 and token '/' resolved as shift (KW_MORE_OR_EQ < '/').


State 183

   61 expression: expression . '*' expression
   62           | expression . '/' expression
   63           | expression . KW_DIV expression
   64           | expression . KW_MOD expression
   65           | expression . '+' expression
   66           | expression . '-' expression
   69           | expression . '=' expression
   70           | expression . KW_DIFFERENT expression
   71           | expression . '<' expression
   72           | expression . '>' expression
   73           | expression . KW_LESS_OR_EQ expression
   74           | expression . KW_MORE_OR_EQ expression
   75           | expression . KW_AND expression
   76           | expression . KW_OR expression
   77           | expression . KW_AND_SYMB expression
   77           | expression KW_AND_SYMB expression .  [IDENT, KW_BEGIN, KW_END, KW_AND, KW_FUNCTION, KW_PROCEDURE, KW_RESULT, KW_DO, KW_GOTO, KW_RETURN, KW_ELSE, KW_IF, KW_THEN, KW_FOR, KW_OR, KW_REPEAT, KW_UNTIL, KW_VAR, KW_WHILE, KW_TO, KW_DOWNTO, KW_AND_SYMB, KW_OR_SYMB, KW_TYPE, ')', ';', ',']
   78           | expression . KW_OR_SYMB expression

    KW_DIV         shift, and go to state 113
    KW_MOD         shift, and go to state 114
    KW_DIFFERENT   shift, and go to state 117
    KW_LESS_OR_EQ  shift, and go to state 118
    KW_MORE_OR_EQ  shift, and go to state 119
    '<'            shift, and go to state 122
    '>'            shift, and go to state 123
    '='            shift, and go to state 124
    '+'            shift, and go to state 125
    '-'            shift, and go to state 126
    '*'            shift, and go to state 127
    '/'            shift, and go to state 128

    $default  reduce using rule 77 (expression)

    Conflict between rule 77 and token KW_AND resolved as reduce (%left KW_AND).
    Conflict between rule 77 and token KW_DIV resolved as shift (KW_AND_SYMB < KW_DIV).
    Conflict between rule 77 and token KW_MOD resolved as shift (KW_AND_SYMB < KW_MOD).
    Conflict between rule 77 and token KW_OR resolved as reduce (KW_OR < KW_AND_SYMB).
    Conflict between rule 77 and token KW_DIFFERENT resolved as shift (KW_AND_SYMB < KW_DIFFERENT).
    Conflict between rule 77 and token KW_LESS_OR_EQ resolved as shift (KW_AND_SYMB < KW_LESS_OR_EQ).
    Conflict between rule 77 and token KW_MORE_OR_EQ resolved as shift (KW_AND_SYMB < KW_MORE_OR_EQ).
    Conflict between rule 77 and token KW_AND_SYMB resolved as reduce (%left KW_AND_SYMB).
    Conflict between rule 77 and token KW_OR_SYMB resolved as reduce (KW_OR_SYMB < KW_AND_SYMB).
    Conflict between rule 77 and token '<' resolved as shift (KW_AND_SYMB < '<').
    Conflict between rule 77 and token '>' resolved as shift (KW_AND_SYMB < '>').
    Conflict between rule 77 and token '=' resolved as shift (KW_AND_SYMB < '=').
    Conflict between rule 77 and token '+' resolved as shift (KW_AND_SYMB < '+').
    Conflict between rule 77 and token '-' resolved as shift (KW_AND_SYMB < '-').
    Conflict between rule 77 and token '*' resolved as shift (KW_AND_SYMB < '*').
    Conflict between rule 77 and token '/' resolved as shift (KW_AND_SYMB < '/').


State 184

   61 expression: expression . '*' expression
   62           | expression . '/' expression
   63           | expression . KW_DIV expression
   64           | expression . KW_MOD expression
   65           | expression . '+' expression
   66           | expression . '-' expression
   69           | expression . '=' expression
   70           | expression . KW_DIFFERENT expression
   71           | expression . '<' expression
   72           | expression . '>' expression
   73           | expression . KW_LESS_OR_EQ expression
   74           | expression . KW_MORE_OR_EQ expression
   75           | expression . KW_AND expression
   76           | expression . KW_OR expression
   77           | expression . KW_AND_SYMB expression
   78           | expression . KW_OR_SYMB expression
   78           | expression KW_OR_SYMB expression .  [IDENT, KW_BEGIN, KW_END, KW_FUNCTION, KW_PROCEDURE, KW_RESULT, KW_DO, KW_GOTO, KW_RETURN, KW_ELSE, KW_IF, KW_THEN, KW_FOR, KW_OR, KW_REPEAT, KW_UNTIL, KW_VAR, KW_WHILE, KW_TO, KW_DOWNTO, KW_OR_SYMB, KW_TYPE, ')', ';', ',']

    KW_AND         shift, and go to state 112
    KW_DIV         shift, and go to state 113
    KW_MOD         shift, and go to state 114
    KW_DIFFERENT   shift, and go to state 117
    KW_LESS_OR_EQ  shift, and go to state 118
    KW_MORE_OR_EQ  shift, and go to state 119
    KW_AND_SYMB    shift, and go to state 120
    '<'            shift, and go to state 122
    '>'            shift, and go to state 123
    '='            shift, and go to state 124
    '+'            shift, and go to state 125
    '-'            shift, and go to state 126
    '*'            shift, and go to state 127
    '/'            shift, and go to state 128

    $default  reduce using rule 78 (expression)

    Conflict between rule 78 and token KW_AND resolved as shift (KW_OR_SYMB < KW_AND).
    Conflict between rule 78 and token KW_DIV resolved as shift (KW_OR_SYMB < KW_DIV).
    Conflict between rule 78 and token KW_MOD resolved as shift (KW_OR_SYMB < KW_MOD).
    Conflict between rule 78 and token KW_OR resolved as reduce (%left KW_OR).
    Conflict between rule 78 and token KW_DIFFERENT resolved as shift (KW_OR_SYMB < KW_DIFFERENT).
    Conflict between rule 78 and token KW_LESS_OR_EQ resolved as shift (KW_OR_SYMB < KW_LESS_OR_EQ).
    Conflict between rule 78 and token KW_MORE_OR_EQ resolved as shift (KW_OR_SYMB < KW_MORE_OR_EQ).
    Conflict between rule 78 and token KW_AND_SYMB resolved as shift (KW_OR_SYMB < KW_AND_SYMB).
    Conflict between rule 78 and token KW_OR_SYMB resolved as reduce (%left KW_OR_SYMB).
    Conflict between rule 78 and token '<' resolved as shift (KW_OR_SYMB < '<').
    Conflict between rule 78 and token '>' resolved as shift (KW_OR_SYMB < '>').
    Conflict between rule 78 and token '=' resolved as shift (KW_OR_SYMB < '=').
    Conflict between rule 78 and token '+' resolved as shift (KW_OR_SYMB < '+').
    Conflict between rule 78 and token '-' resolved as shift (KW_OR_SYMB < '-').
    Conflict between rule 78 and token '*' resolved as shift (KW_OR_SYMB < '*').
    Conflict between rule 78 and token '/' resolved as shift (KW_OR_SYMB < '/').


State 185

   61 expression: expression . '*' expression
   62           | expression . '/' expression
   63           | expression . KW_DIV expression
   64           | expression . KW_MOD expression
   65           | expression . '+' expression
   66           | expression . '-' expression
   69           | expression . '=' expression
   70           | expression . KW_DIFFERENT expression
   71           | expression . '<' expression
   71           | expression '<' expression .  [IDENT, KW_BEGIN, KW_END, KW_AND, KW_FUNCTION, KW_PROCEDURE, KW_RESULT, KW_DO, KW_GOTO, KW_RETURN, KW_ELSE, KW_IF, KW_THEN, KW_FOR, KW_OR, KW_REPEAT, KW_UNTIL, KW_VAR, KW_WHILE, KW_TO, KW_DOWNTO, KW_DIFFERENT, KW_LESS_OR_EQ, KW_MORE_OR_EQ, KW_AND_SYMB, KW_OR_SYMB, KW_TYPE, '<', '>', '=', ')', ';', ',']
   72           | expression . '>' expression
   73           | expression . KW_LESS_OR_EQ expression
   74           | expression . KW_MORE_OR_EQ expression
   75           | expression . KW_AND expression
   76           | expression . KW_OR expression
   77           | expression . KW_AND_SYMB expression
   78           | expression . KW_OR_SYMB expression

    KW_DIV  shift, and go to state 113
    KW_MOD  shift, and go to state 114
    '+'     shift, and go to state 125
    '-'     shift, and go to state 126
    '*'     shift, and go to state 127
    '/'     shift, and go to state 128

    $default  reduce using rule 71 (expression)

    Conflict between rule 71 and token KW_AND resolved as reduce (KW_AND < '<').
    Conflict between rule 71 and token KW_DIV resolved as shift ('<' < KW_DIV).
    Conflict between rule 71 and token KW_MOD resolved as shift ('<' < KW_MOD).
    Conflict between rule 71 and token KW_OR resolved as reduce (KW_OR < '<').
    Conflict between rule 71 and token KW_DIFFERENT resolved as reduce (%left KW_DIFFERENT).
    Conflict between rule 71 and token KW_LESS_OR_EQ resolved as reduce (%left KW_LESS_OR_EQ).
    Conflict between rule 71 and token KW_MORE_OR_EQ resolved as reduce (%left KW_MORE_OR_EQ).
    Conflict between rule 71 and token KW_AND_SYMB resolved as reduce (KW_AND_SYMB < '<').
    Conflict between rule 71 and token KW_OR_SYMB resolved as reduce (KW_OR_SYMB < '<').
    Conflict between rule 71 and token '<' resolved as reduce (%left '<').
    Conflict between rule 71 and token '>' resolved as reduce (%left '>').
    Conflict between rule 71 and token '=' resolved as reduce (%left '=').
    Conflict between rule 71 and token '+' resolved as shift ('<' < '+').
    Conflict between rule 71 and token '-' resolved as shift ('<' < '-').
    Conflict between rule 71 and token '*' resolved as shift ('<' < '*').
    Conflict between rule 71 and token '/' resolved as shift ('<' < '/').


State 186

   61 expression: expression . '*' expression
   62           | expression . '/' expression
   63           | expression . KW_DIV expression
   64           | expression . KW_MOD expression
   65           | expression . '+' expression
   66           | expression . '-' expression
   69           | expression . '=' expression
   70           | expression . KW_DIFFERENT expression
   71           | expression . '<' expression
   72           | expression . '>' expression
   72           | expression '>' expression .  [IDENT, KW_BEGIN, KW_END, KW_AND, KW_FUNCTION, KW_PROCEDURE, KW_RESULT, KW_DO, KW_GOTO, KW_RETURN, KW_ELSE, KW_IF, KW_THEN, KW_FOR, KW_OR, KW_REPEAT, KW_UNTIL, KW_VAR, KW_WHILE, KW_TO, KW_DOWNTO, KW_DIFFERENT, KW_LESS_OR_EQ, KW_MORE_OR_EQ, KW_AND_SYMB, KW_OR_SYMB, KW_TYPE, '<', '>', '=', ')', ';', ',']
   73           | expression . KW_LESS_OR_EQ expression
   74           | expression . KW_MORE_OR_EQ expression
   75           | expression . KW_AND expression
   76           | expression . KW_OR expression
   77           | expression . KW_AND_SYMB expression
   78           | expression . KW_OR_SYMB expression

    KW_DIV  shift, and go to state 113
    KW_MOD  shift, and go to state 114
    '+'     shift, and go to state 125
    '-'     shift, and go to state 126
    '*'     shift, and go to state 127
    '/'     shift, and go to state 128

    $default  reduce using rule 72 (expression)

    Conflict between rule 72 and token KW_AND resolved as reduce (KW_AND < '>').
    Conflict between rule 72 and token KW_DIV resolved as shift ('>' < KW_DIV).
    Conflict between rule 72 and token KW_MOD resolved as shift ('>' < KW_MOD).
    Conflict between rule 72 and token KW_OR resolved as reduce (KW_OR < '>').
    Conflict between rule 72 and token KW_DIFFERENT resolved as reduce (%left KW_DIFFERENT).
    Conflict between rule 72 and token KW_LESS_OR_EQ resolved as reduce (%left KW_LESS_OR_EQ).
    Conflict between rule 72 and token KW_MORE_OR_EQ resolved as reduce (%left KW_MORE_OR_EQ).
    Conflict between rule 72 and token KW_AND_SYMB resolved as reduce (KW_AND_SYMB < '>').
    Conflict between rule 72 and token KW_OR_SYMB resolved as reduce (KW_OR_SYMB < '>').
    Conflict between rule 72 and token '<' resolved as reduce (%left '<').
    Conflict between rule 72 and token '>' resolved as reduce (%left '>').
    Conflict between rule 72 and token '=' resolved as reduce (%left '=').
    Conflict between rule 72 and token '+' resolved as shift ('>' < '+').
    Conflict between rule 72 and token '-' resolved as shift ('>' < '-').
    Conflict between rule 72 and token '*' resolved as shift ('>' < '*').
    Conflict between rule 72 and token '/' resolved as shift ('>' < '/').


State 187

   61 expression: expression . '*' expression
   62           | expression . '/' expression
   63           | expression . KW_DIV expression
   64           | expression . KW_MOD expression
   65           | expression . '+' expression
   66           | expression . '-' expression
   69           | expression . '=' expression
   69           | expression '=' expression .  [IDENT, KW_BEGIN, KW_END, KW_AND, KW_FUNCTION, KW_PROCEDURE, KW_RESULT, KW_DO, KW_GOTO, KW_RETURN, KW_ELSE, KW_IF, KW_THEN, KW_FOR, KW_OR, KW_REPEAT, KW_UNTIL, KW_VAR, KW_WHILE, KW_TO, KW_DOWNTO, KW_DIFFERENT, KW_LESS_OR_EQ, KW_MORE_OR_EQ, KW_AND_SYMB, KW_OR_SYMB, KW_TYPE, '<', '>', '=', ')', ';', ',']
   70           | expression . KW_DIFFERENT expression
   71           | expression . '<' expression
   72           | expression . '>' expression
   73           | expression . KW_LESS_OR_EQ expression
   74           | expression . KW_MORE_OR_EQ expression
   75           | expression . KW_AND expression
   76           | expression . KW_OR expression
   77           | expression . KW_AND_SYMB expression
   78           | expression . KW_OR_SYMB expression

    KW_DIV  shift, and go to state 113
    KW_MOD  shift, and go to state 114
    '+'     shift, and go to state 125
    '-'     shift, and go to state 126
    '*'     shift, and go to state 127
    '/'     shift, and go to state 128

    $default  reduce using rule 69 (expression)

    Conflict between rule 69 and token KW_AND resolved as reduce (KW_AND < '=').
    Conflict between rule 69 and token KW_DIV resolved as shift ('=' < KW_DIV).
    Conflict between rule 69 and token KW_MOD resolved as shift ('=' < KW_MOD).
    Conflict between rule 69 and token KW_OR resolved as reduce (KW_OR < '=').
    Conflict between rule 69 and token KW_DIFFERENT resolved as reduce (%left KW_DIFFERENT).
    Conflict between rule 69 and token KW_LESS_OR_EQ resolved as reduce (%left KW_LESS_OR_EQ).
    Conflict between rule 69 and token KW_MORE_OR_EQ resolved as reduce (%left KW_MORE_OR_EQ).
    Conflict between rule 69 and token KW_AND_SYMB resolved as reduce (KW_AND_SYMB < '=').
    Conflict between rule 69 and token KW_OR_SYMB resolved as reduce (KW_OR_SYMB < '=').
    Conflict between rule 69 and token '<' resolved as reduce (%left '<').
    Conflict between rule 69 and token '>' resolved as reduce (%left '>').
    Conflict between rule 69 and token '=' resolved as reduce (%left '=').
    Conflict between rule 69 and token '+' resolved as shift ('=' < '+').
    Conflict between rule 69 and token '-' resolved as shift ('=' < '-').
    Conflict between rule 69 and token '*' resolved as shift ('=' < '*').
    Conflict between rule 69 and token '/' resolved as shift ('=' < '/').


State 188

   61 expression: expression . '*' expression
   62           | expression . '/' expression
   63           | expression . KW_DIV expression
   64           | expression . KW_MOD expression
   65           | expression . '+' expression
   65           | expression '+' expression .  [IDENT, KW_BEGIN, KW_END, KW_AND, KW_FUNCTION, KW_PROCEDURE, KW_RESULT, KW_DO, KW_GOTO, KW_RETURN, KW_ELSE, KW_IF, KW_THEN, KW_FOR, KW_OR, KW_REPEAT, KW_UNTIL, KW_VAR, KW_WHILE, KW_TO, KW_DOWNTO, KW_DIFFERENT, KW_LESS_OR_EQ, KW_MORE_OR_EQ, KW_AND_SYMB, KW_OR_SYMB, KW_TYPE, '<', '>', '=', '+', '-', ')', ';', ',']
   66           | expression . '-' expression
   69           | expression . '=' expression
   70           | expression . KW_DIFFERENT expression
   71           | expression . '<' expression
   72           | expression . '>' expression
   73           | expression . KW_LESS_OR_EQ expression
   74           | expression . KW_MORE_OR_EQ expression
   75           | expression . KW_AND expression
   76           | expression . KW_OR expression
   77           | expression . KW_AND_SYMB expression
   78           | expression . KW_OR_SYMB expression

    KW_DIV  shift, and go to state 113
    KW_MOD  shift, and go to state 114
    '*'     shift, and go to state 127
    '/'     shift, and go to state 128

    $default  reduce using rule 65 (expression)

    Conflict between rule 65 and token KW_AND resolved as reduce (KW_AND < '+').
    Conflict between rule 65 and token KW_DIV resolved as shift ('+' < KW_DIV).
    Conflict between rule 65 and token KW_MOD resolved as shift ('+' < KW_MOD).
    Conflict between rule 65 and token KW_OR resolved as reduce (KW_OR < '+').
    Conflict between rule 65 and token KW_DIFFERENT resolved as reduce (KW_DIFFERENT < '+').
    Conflict between rule 65 and token KW_LESS_OR_EQ resolved as reduce (KW_LESS_OR_EQ < '+').
    Conflict between rule 65 and token KW_MORE_OR_EQ resolved as reduce (KW_MORE_OR_EQ < '+').
    Conflict between rule 65 and token KW_AND_SYMB resolved as reduce (KW_AND_SYMB < '+').
    Conflict between rule 65 and token KW_OR_SYMB resolved as reduce (KW_OR_SYMB < '+').
    Conflict between rule 65 and token '<' resolved as reduce ('<' < '+').
    Conflict between rule 65 and token '>' resolved as reduce ('>' < '+').
    Conflict between rule 65 and token '=' resolved as reduce ('=' < '+').
    Conflict between rule 65 and token '+' resolved as reduce (%left '+').
    Conflict between rule 65 and token '-' resolved as reduce (%left '-').
    Conflict between rule 65 and token '*' resolved as shift ('+' < '*').
    Conflict between rule 65 and token '/' resolved as shift ('+' < '/').


State 189

   61 expression: expression . '*' expression
   62           | expression . '/' expression
   63           | expression . KW_DIV expression
   64           | expression . KW_MOD expression
   65           | expression . '+' expression
   66           | expression . '-' expression
   66           | expression '-' expression .  [IDENT, KW_BEGIN, KW_END, KW_AND, KW_FUNCTION, KW_PROCEDURE, KW_RESULT, KW_DO, KW_GOTO, KW_RETURN, KW_ELSE, KW_IF, KW_THEN, KW_FOR, KW_OR, KW_REPEAT, KW_UNTIL, KW_VAR, KW_WHILE, KW_TO, KW_DOWNTO, KW_DIFFERENT, KW_LESS_OR_EQ, KW_MORE_OR_EQ, KW_AND_SYMB, KW_OR_SYMB, KW_TYPE, '<', '>', '=', '+', '-', ')', ';', ',']
   69           | expression . '=' expression
   70           | expression . KW_DIFFERENT expression
   71           | expression . '<' expression
   72           | expression . '>' expression
   73           | expression . KW_LESS_OR_EQ expression
   74           | expression . KW_MORE_OR_EQ expression
   75           | expression . KW_AND expression
   76           | expression . KW_OR expression
   77           | expression . KW_AND_SYMB expression
   78           | expression . KW_OR_SYMB expression

    KW_DIV  shift, and go to state 113
    KW_MOD  shift, and go to state 114
    '*'     shift, and go to state 127
    '/'     shift, and go to state 128

    $default  reduce using rule 66 (expression)

    Conflict between rule 66 and token KW_AND resolved as reduce (KW_AND < '-').
    Conflict between rule 66 and token KW_DIV resolved as shift ('-' < KW_DIV).
    Conflict between rule 66 and token KW_MOD resolved as shift ('-' < KW_MOD).
    Conflict between rule 66 and token KW_OR resolved as reduce (KW_OR < '-').
    Conflict between rule 66 and token KW_DIFFERENT resolved as reduce (KW_DIFFERENT < '-').
    Conflict between rule 66 and token KW_LESS_OR_EQ resolved as reduce (KW_LESS_OR_EQ < '-').
    Conflict between rule 66 and token KW_MORE_OR_EQ resolved as reduce (KW_MORE_OR_EQ < '-').
    Conflict between rule 66 and token KW_AND_SYMB resolved as reduce (KW_AND_SYMB < '-').
    Conflict between rule 66 and token KW_OR_SYMB resolved as reduce (KW_OR_SYMB < '-').
    Conflict between rule 66 and token '<' resolved as reduce ('<' < '-').
    Conflict between rule 66 and token '>' resolved as reduce ('>' < '-').
    Conflict between rule 66 and token '=' resolved as reduce ('=' < '-').
    Conflict between rule 66 and token '+' resolved as reduce (%left '+').
    Conflict between rule 66 and token '-' resolved as reduce (%left '-').
    Conflict between rule 66 and token '*' resolved as shift ('-' < '*').
    Conflict between rule 66 and token '/' resolved as shift ('-' < '/').


State 190

   61 expression: expression . '*' expression
   61           | expression '*' expression .  [IDENT, KW_BEGIN, KW_END, KW_AND, KW_DIV, KW_FUNCTION, KW_MOD, KW_PROCEDURE, KW_RESULT, KW_DO, KW_GOTO, KW_RETURN, KW_ELSE, KW_IF, KW_THEN, KW_FOR, KW_OR, KW_REPEAT, KW_UNTIL, KW_VAR, KW_WHILE, KW_TO, KW_DOWNTO, KW_DIFFERENT, KW_LESS_OR_EQ, KW_MORE_OR_EQ, KW_AND_SYMB, KW_OR_SYMB, KW_TYPE, '<', '>', '=', '+', '-', '*', '/', ')', ';', ',']
   62           | expression . '/' expression
   63           | expression . KW_DIV expression
   64           | expression . KW_MOD expression
   65           | expression . '+' expression
   66           | expression . '-' expression
   69           | expression . '=' expression
   70           | expression . KW_DIFFERENT expression
   71           | expression . '<' expression
   72           | expression . '>' expression
   73           | expression . KW_LESS_OR_EQ expression
   74           | expression . KW_MORE_OR_EQ expression
   75           | expression . KW_AND expression
   76           | expression . KW_OR expression
   77           | expression . KW_AND_SYMB expression
   78           | expression . KW_OR_SYMB expression

    $default  reduce using rule 61 (expression)

    Conflict between rule 61 and token KW_AND resolved as reduce (KW_AND < '*').
    Conflict between rule 61 and token KW_DIV resolved as reduce (%left KW_DIV).
    Conflict between rule 61 and token KW_MOD resolved as reduce (%left KW_MOD).
    Conflict between rule 61 and token KW_OR resolved as reduce (KW_OR < '*').
    Conflict between rule 61 and token KW_DIFFERENT resolved as reduce (KW_DIFFERENT < '*').
    Conflict between rule 61 and token KW_LESS_OR_EQ resolved as reduce (KW_LESS_OR_EQ < '*').
    Conflict between rule 61 and token KW_MORE_OR_EQ resolved as reduce (KW_MORE_OR_EQ < '*').
    Conflict between rule 61 and token KW_AND_SYMB resolved as reduce (KW_AND_SYMB < '*').
    Conflict between rule 61 and token KW_OR_SYMB resolved as reduce (KW_OR_SYMB < '*').
    Conflict between rule 61 and token '<' resolved as reduce ('<' < '*').
    Conflict between rule 61 and token '>' resolved as reduce ('>' < '*').
    Conflict between rule 61 and token '=' resolved as reduce ('=' < '*').
    Conflict between rule 61 and token '+' resolved as reduce ('+' < '*').
    Conflict between rule 61 and token '-' resolved as reduce ('-' < '*').
    Conflict between rule 61 and token '*' resolved as reduce (%left '*').
    Conflict between rule 61 and token '/' resolved as reduce (%left '/').


State 191

   61 expression: expression . '*' expression
   62           | expression . '/' expression
   62           | expression '/' expression .  [IDENT, KW_BEGIN, KW_END, KW_AND, KW_DIV, KW_FUNCTION, KW_MOD, KW_PROCEDURE, KW_RESULT, KW_DO, KW_GOTO, KW_RETURN, KW_ELSE, KW_IF, KW_THEN, KW_FOR, KW_OR, KW_REPEAT, KW_UNTIL, KW_VAR, KW_WHILE, KW_TO, KW_DOWNTO, KW_DIFFERENT, KW_LESS_OR_EQ, KW_MORE_OR_EQ, KW_AND_SYMB, KW_OR_SYMB, KW_TYPE, '<', '>', '=', '+', '-', '*', '/', ')', ';', ',']
   63           | expression . KW_DIV expression
   64           | expression . KW_MOD expression
   65           | expression . '+' expression
   66           | expression . '-' expression
   69           | expression . '=' expression
   70           | expression . KW_DIFFERENT expression
   71           | expression . '<' expression
   72           | expression . '>' expression
   73           | expression . KW_LESS_OR_EQ expression
   74           | expression . KW_MORE_OR_EQ expression
   75           | expression . KW_AND expression
   76           | expression . KW_OR expression
   77           | expression . KW_AND_SYMB expression
   78           | expression . KW_OR_SYMB expression

    $default  reduce using rule 62 (expression)

    Conflict between rule 62 and token KW_AND resolved as reduce (KW_AND < '/').
    Conflict between rule 62 and token KW_DIV resolved as reduce (%left KW_DIV).
    Conflict between rule 62 and token KW_MOD resolved as reduce (%left KW_MOD).
    Conflict between rule 62 and token KW_OR resolved as reduce (KW_OR < '/').
    Conflict between rule 62 and token KW_DIFFERENT resolved as reduce (KW_DIFFERENT < '/').
    Conflict between rule 62 and token KW_LESS_OR_EQ resolved as reduce (KW_LESS_OR_EQ < '/').
    Conflict between rule 62 and token KW_MORE_OR_EQ resolved as reduce (KW_MORE_OR_EQ < '/').
    Conflict between rule 62 and token KW_AND_SYMB resolved as reduce (KW_AND_SYMB < '/').
    Conflict between rule 62 and token KW_OR_SYMB resolved as reduce (KW_OR_SYMB < '/').
    Conflict between rule 62 and token '<' resolved as reduce ('<' < '/').
    Conflict between rule 62 and token '>' resolved as reduce ('>' < '/').
    Conflict between rule 62 and token '=' resolved as reduce ('=' < '/').
    Conflict between rule 62 and token '+' resolved as reduce ('+' < '/').
    Conflict between rule 62 and token '-' resolved as reduce ('-' < '/').
    Conflict between rule 62 and token '*' resolved as reduce (%left '*').
    Conflict between rule 62 and token '/' resolved as reduce (%left '/').


State 192

   28 for_statement: KW_FOR IDENT ASSIGN expression . KW_TO expression KW_DO KW_BEGIN statement_list KW_END ';'
   29              | KW_FOR IDENT ASSIGN expression . KW_DOWNTO expression KW_DO KW_BEGIN statement_list KW_END ';'
   30              | KW_FOR IDENT ASSIGN expression . KW_TO expression KW_DO statement
   31              | KW_FOR IDENT ASSIGN expression . KW_DOWNTO expression KW_DO statement
   61 expression: expression . '*' expression
   62           | expression . '/' expression
   63           | expression . KW_DIV expression
   64           | expression . KW_MOD expression
   65           | expression . '+' expression
   66           | expression . '-' expression
   69           | expression . '=' expression
   70           | expression . KW_DIFFERENT expression
   71           | expression . '<' expression
   72           | expression . '>' expression
   73           | expression . KW_LESS_OR_EQ expression
   74           | expression . KW_MORE_OR_EQ expression
   75           | expression . KW_AND expression
   76           | expression . KW_OR expression
   77           | expression . KW_AND_SYMB expression
   78           | expression . KW_OR_SYMB expression

    KW_AND         shift, and go to state 112
    KW_DIV         shift, and go to state 113
    KW_MOD         shift, and go to state 114
    KW_OR          shift, and go to state 116
    KW_TO          shift, and go to state 236
    KW_DOWNTO      shift, and go to state 237
    KW_DIFFERENT   shift, and go to state 117
    KW_LESS_OR_EQ  shift, and go to state 118
    KW_MORE_OR_EQ  shift, and go to state 119
    KW_AND_SYMB    shift, and go to state 120
    KW_OR_SYMB     shift, and go to state 121
    '<'            shift, and go to state 122
    '>'            shift, and go to state 123
    '='            shift, and go to state 124
    '+'            shift, and go to state 125
    '-'            shift, and go to state 126
    '*'            shift, and go to state 127
    '/'            shift, and go to state 128


State 193

   25 while_statement: KW_REPEAT KW_BEGIN statement_list KW_END . ';' KW_UNTIL expression

    ';'  shift, and go to state 238


State 194

   27 while_statement: KW_REPEAT statement KW_UNTIL expression .  [IDENT, KW_BEGIN, KW_END, KW_FUNCTION, KW_PROCEDURE, KW_RESULT, KW_GOTO, KW_RETURN, KW_ELSE, KW_IF, KW_FOR, KW_REPEAT, KW_UNTIL, KW_VAR, KW_WHILE, KW_TYPE, ';']
   61 expression: expression . '*' expression
   62           | expression . '/' expression
   63           | expression . KW_DIV expression
   64           | expression . KW_MOD expression
   65           | expression . '+' expression
   66           | expression . '-' expression
   69           | expression . '=' expression
   70           | expression . KW_DIFFERENT expression
   71           | expression . '<' expression
   72           | expression . '>' expression
   73           | expression . KW_LESS_OR_EQ expression
   74           | expression . KW_MORE_OR_EQ expression
   75           | expression . KW_AND expression
   76           | expression . KW_OR expression
   77           | expression . KW_AND_SYMB expression
   78           | expression . KW_OR_SYMB expression

    KW_AND         shift, and go to state 112
    KW_DIV         shift, and go to state 113
    KW_MOD         shift, and go to state 114
    KW_OR          shift, and go to state 116
    KW_DIFFERENT   shift, and go to state 117
    KW_LESS_OR_EQ  shift, and go to state 118
    KW_MORE_OR_EQ  shift, and go to state 119
    KW_AND_SYMB    shift, and go to state 120
    KW_OR_SYMB     shift, and go to state 121
    '<'            shift, and go to state 122
    '>'            shift, and go to state 123
    '='            shift, and go to state 124
    '+'            shift, and go to state 125
    '-'            shift, and go to state 126
    '*'            shift, and go to state 127
    '/'            shift, and go to state 128

    $default  reduce using rule 27 (while_statement)


State 195

  146 names: IDENT ',' names .

    $default  reduce using rule 146 (names)


State 196

  114 basic_types: IDENT .

    $default  reduce using rule 114 (basic_types)


State 197

  121 array_brackets: . %empty  [KW_OF]
  122               | . '[' array_arg ']' array_brackets
  141 var_declaration: KW_VAR names ':' ARRAY . array_brackets KW_OF basic_types var_decl_more

    '['  shift, and go to state 85

    $default  reduce using rule 121 (array_brackets)

    array_brackets  go to state 239


State 198

  140 var_declaration: KW_VAR names ':' basic_types . var_decl_more
  142 var_decl_more: . ';' names ':' basic_types var_decl_more
  143              | . ';' names ':' ARRAY array_brackets KW_OF basic_types var_decl_more
  144              | . ';'

    ';'  shift, and go to state 240

    var_decl_more  go to state 241


State 199

    4 statement_list: . %empty  [KW_END]
    5               | . statement statement_list
    6 statement: . subprogram_def
    7          | . proc_call ';'
    8          | . label_decl
    9          | . goto_statement
   10          | . assignment
   11          | . KW_RETURN
   12          | . type_def
   13          | . var_declaration
   14          | . loops
   15 loops: . if_statement
   16      | . for_statement
   17      | . while_statement
   18 if_statement: . KW_IF expression KW_THEN KW_BEGIN statement_list KW_END ';'
   19             | . KW_IF expression KW_THEN KW_BEGIN statement_list KW_END ';' KW_ELSE KW_BEGIN statement_list KW_END ';'
   20             | . KW_IF expression KW_THEN statement
   21             | . KW_IF expression KW_THEN statement KW_ELSE statement
   22             | . KW_IF expression KW_THEN statement KW_ELSE KW_BEGIN statement_list KW_END ';'
   23             | . KW_IF expression KW_THEN KW_BEGIN statement_list KW_END ';' KW_ELSE statement
   24 while_statement: . KW_WHILE expression KW_DO KW_BEGIN statement_list KW_END ';'
   24                | KW_WHILE expression KW_DO KW_BEGIN . statement_list KW_END ';'
   25                | . KW_REPEAT KW_BEGIN statement_list KW_END ';' KW_UNTIL expression
   26                | . KW_WHILE expression KW_DO statement
   27                | . KW_REPEAT statement KW_UNTIL expression
   28 for_statement: . KW_FOR IDENT ASSIGN expression KW_TO expression KW_DO KW_BEGIN statement_list KW_END ';'
   29              | . KW_FOR IDENT ASSIGN expression KW_DOWNTO expression KW_DO KW_BEGIN statement_list KW_END ';'
   30              | . KW_FOR IDENT ASSIGN expression KW_TO expression KW_DO statement
   31              | . KW_FOR IDENT ASSIGN expression KW_DOWNTO expression KW_DO statement
   32 label_decl: . IDENT ':' label_body
   42 goto_statement: . KW_GOTO IDENT ';'
   43 proc_call: . IDENT '(' arguments ')'
  108 assignment: . IDENT ASSIGN expression ';'
  109           | . KW_RESULT ASSIGN expression ';'
  123 subprogram_def: . KW_FUNCTION IDENT '(' proc_def_arguments ')' ':' FuncReturnTypes ';' statement_list body ';'
  124               | . KW_PROCEDURE IDENT '(' proc_def_arguments ')' ';' statement_list body ';'
  132 type_def: . KW_TYPE type_def_body
  140 var_declaration: . KW_VAR names ':' basic_types var_decl_more
  141                | . KW_VAR names ':' ARRAY array_brackets KW_OF basic_types var_decl_more

    IDENT         shift, and go to state 6
    KW_FUNCTION   shift, and go to state 7
    KW_PROCEDURE  shift, and go to state 8
    KW_RESULT     shift, and go to state 9
    KW_GOTO       shift, and go to state 10
    KW_RETURN     shift, and go to state 11
    KW_IF         shift, and go to state 12
    KW_FOR        shift, and go to state 13
    KW_REPEAT     shift, and go to state 14
    KW_VAR        shift, and go to state 15
    KW_WHILE      shift, and go to state 16
    KW_TYPE       shift, and go to state 17

    $default  reduce using rule 4 (statement_list)

    statement_list   go to state 242
    statement        go to state 19
    loops            go to state 20
    if_statement     go to state 21
    while_statement  go to state 22
    for_statement    go to state 23
    label_decl       go to state 24
    goto_statement   go to state 25
    proc_call        go to state 26
    assignment       go to state 27
    subprogram_def   go to state 28
    type_def         go to state 29
    var_declaration  go to state 30


State 200

   26 while_statement: KW_WHILE expression KW_DO statement .

    $default  reduce using rule 26 (while_statement)


State 201

  134 type_def_body: IDENT '=' KW_FUNCTION . '(' proc_def_arguments ')' ':' FuncReturnTypes after_type_def

    '('  shift, and go to state 243


State 202

  135 type_def_body: IDENT '=' ARRAY . typedef_array_brackets KW_OF basic_types after_type_def
  136 typedef_array_brackets: . %empty  [KW_OF]
  137                       | . '[' array_arg ']' typedef_array_brackets

    '['  shift, and go to state 244

    $default  reduce using rule 136 (typedef_array_brackets)

    typedef_array_brackets  go to state 245


State 203

  133 type_def_body: IDENT '=' basic_types . after_type_def
  138 after_type_def: . ';' type_def_body
  139               | . ';'

    ';'  shift, and go to state 246

    after_type_def  go to state 247


State 204

    3 body: KW_BEGIN statement_list KW_END .

    $default  reduce using rule 3 (body)


State 205

   46 arguments: expression ',' arguments .

    $default  reduce using rule 46 (arguments)


State 206

  115 proc_def_arg_main: . names ':' ARRAY KW_OF basic_types
  116                  | . names ':' basic_types
  117 proc_def_arguments: . %empty  [')']
  118                   | . proc_def_arg_main
  119                   | . proc_def_arg_main ';' proc_def_arguments
  119                   | proc_def_arg_main ';' . proc_def_arguments
  145 names: . IDENT
  146      | . IDENT ',' names

    IDENT  shift, and go to state 59

    $default  reduce using rule 117 (proc_def_arguments)

    proc_def_arg_main   go to state 143
    proc_def_arguments  go to state 248
    names               go to state 145


State 207

  123 subprogram_def: KW_FUNCTION IDENT '(' proc_def_arguments ')' . ':' FuncReturnTypes ';' statement_list body ';'

    ':'  shift, and go to state 249


State 208

  110 basic_types: . KW_BOOLEAN
  111            | . KW_INTEGER
  112            | . KW_REAL
  113            | . KW_CHAR
  114            | . IDENT
  115 proc_def_arg_main: names ':' . ARRAY KW_OF basic_types
  116                  | names ':' . basic_types

    IDENT       shift, and go to state 196
    ARRAY       shift, and go to state 250
    KW_BOOLEAN  shift, and go to state 98
    KW_REAL     shift, and go to state 99
    KW_CHAR     shift, and go to state 100
    KW_INTEGER  shift, and go to state 101

    basic_types  go to state 251


State 209

  124 subprogram_def: KW_PROCEDURE IDENT '(' proc_def_arguments ')' . ';' statement_list body ';'

    ';'  shift, and go to state 252


State 210

  127 array_arg: . POSINT
  128          | . array_arg '+' array_arg
  128          | array_arg '+' . array_arg
  129          | . array_arg '-' array_arg
  130          | . array_arg '*' array_arg
  131          | . array_arg '/' array_arg

    POSINT  shift, and go to state 148

    array_arg  go to state 253


State 211

  127 array_arg: . POSINT
  128          | . array_arg '+' array_arg
  129          | . array_arg '-' array_arg
  129          | array_arg '-' . array_arg
  130          | . array_arg '*' array_arg
  131          | . array_arg '/' array_arg

    POSINT  shift, and go to state 148

    array_arg  go to state 254


State 212

  127 array_arg: . POSINT
  128          | . array_arg '+' array_arg
  129          | . array_arg '-' array_arg
  130          | . array_arg '*' array_arg
  130          | array_arg '*' . array_arg
  131          | . array_arg '/' array_arg

    POSINT  shift, and go to state 148

    array_arg  go to state 255


State 213

  127 array_arg: . POSINT
  128          | . array_arg '+' array_arg
  129          | . array_arg '-' array_arg
  130          | . array_arg '*' array_arg
  131          | . array_arg '/' array_arg
  131          | array_arg '/' . array_arg

    POSINT  shift, and go to state 148

    array_arg  go to state 256


State 214

  121 array_brackets: . %empty  [KW_OF]
  122               | . '[' array_arg ']' array_brackets
  122               | '[' array_arg ']' . array_brackets

    '['  shift, and go to state 85

    $default  reduce using rule 121 (array_brackets)

    array_brackets  go to state 257


State 215

  120 arrays: ARRAY array_brackets KW_OF basic_types .

    $default  reduce using rule 120 (arrays)


State 216

   48 casting: '(' ARRAY array_brackets KW_OF . basic_types ')' expression
  110 basic_types: . KW_BOOLEAN
  111            | . KW_INTEGER
  112            | . KW_REAL
  113            | . KW_CHAR
  114            | . IDENT
  120 arrays: ARRAY array_brackets KW_OF . basic_types

    IDENT       shift, and go to state 196
    KW_BOOLEAN  shift, and go to state 98
    KW_REAL     shift, and go to state 99
    KW_CHAR     shift, and go to state 100
    KW_INTEGER  shift, and go to state 101

    basic_types  go to state 258


State 217

   61 expression: expression . '*' expression
   62           | expression . '/' expression
   63           | expression . KW_DIV expression
   64           | expression . KW_MOD expression
   65           | expression . '+' expression
   66           | expression . '-' expression
   69           | expression . '=' expression
   70           | expression . KW_DIFFERENT expression
   71           | expression . '<' expression
   72           | expression . '>' expression
   73           | expression . KW_LESS_OR_EQ expression
   74           | expression . KW_MORE_OR_EQ expression
   75           | expression . KW_AND expression
   75           | expression KW_AND expression .  [KW_AND, KW_OR, KW_AND_SYMB, KW_OR_SYMB]
   76           | expression . KW_OR expression
   77           | expression . KW_AND_SYMB expression
   78           | expression . KW_OR_SYMB expression
  104 in_brackets: expression KW_AND expression .  [')']

    KW_DIV         shift, and go to state 113
    KW_MOD         shift, and go to state 114
    KW_DIFFERENT   shift, and go to state 117
    KW_LESS_OR_EQ  shift, and go to state 118
    KW_MORE_OR_EQ  shift, and go to state 119
    '<'            shift, and go to state 122
    '>'            shift, and go to state 123
    '='            shift, and go to state 124
    '+'            shift, and go to state 125
    '-'            shift, and go to state 126
    '*'            shift, and go to state 127
    '/'            shift, and go to state 128

    ')'       reduce using rule 104 (in_brackets)
    $default  reduce using rule 75 (expression)

    Conflict between rule 75 and token KW_AND resolved as reduce (%left KW_AND).
    Conflict between rule 75 and token KW_DIV resolved as shift (KW_AND < KW_DIV).
    Conflict between rule 75 and token KW_MOD resolved as shift (KW_AND < KW_MOD).
    Conflict between rule 75 and token KW_OR resolved as reduce (KW_OR < KW_AND).
    Conflict between rule 75 and token KW_DIFFERENT resolved as shift (KW_AND < KW_DIFFERENT).
    Conflict between rule 75 and token KW_LESS_OR_EQ resolved as shift (KW_AND < KW_LESS_OR_EQ).
    Conflict between rule 75 and token KW_MORE_OR_EQ resolved as shift (KW_AND < KW_MORE_OR_EQ).
    Conflict between rule 75 and token KW_AND_SYMB resolved as reduce (%left KW_AND_SYMB).
    Conflict between rule 75 and token KW_OR_SYMB resolved as reduce (KW_OR_SYMB < KW_AND).
    Conflict between rule 75 and token '<' resolved as shift (KW_AND < '<').
    Conflict between rule 75 and token '>' resolved as shift (KW_AND < '>').
    Conflict between rule 75 and token '=' resolved as shift (KW_AND < '=').
    Conflict between rule 75 and token '+' resolved as shift (KW_AND < '+').
    Conflict between rule 75 and token '-' resolved as shift (KW_AND < '-').
    Conflict between rule 75 and token '*' resolved as shift (KW_AND < '*').
    Conflict between rule 75 and token '/' resolved as shift (KW_AND < '/').


State 218

   61 expression: expression . '*' expression
   62           | expression . '/' expression
   63           | expression . KW_DIV expression
   63           | expression KW_DIV expression .  [KW_AND, KW_DIV, KW_MOD, KW_OR, KW_DIFFERENT, KW_LESS_OR_EQ, KW_MORE_OR_EQ, KW_AND_SYMB, KW_OR_SYMB, '<', '>', '=', '+', '-', '*', '/']
   64           | expression . KW_MOD expression
   65           | expression . '+' expression
   66           | expression . '-' expression
   69           | expression . '=' expression
   70           | expression . KW_DIFFERENT expression
   71           | expression . '<' expression
   72           | expression . '>' expression
   73           | expression . KW_LESS_OR_EQ expression
   74           | expression . KW_MORE_OR_EQ expression
   75           | expression . KW_AND expression
   76           | expression . KW_OR expression
   77           | expression . KW_AND_SYMB expression
   78           | expression . KW_OR_SYMB expression
   92 in_brackets: expression KW_DIV expression .  [')']

    ')'       reduce using rule 92 (in_brackets)
    $default  reduce using rule 63 (expression)

    Conflict between rule 63 and token KW_AND resolved as reduce (KW_AND < KW_DIV).
    Conflict between rule 63 and token KW_DIV resolved as reduce (%left KW_DIV).
    Conflict between rule 63 and token KW_MOD resolved as reduce (%left KW_MOD).
    Conflict between rule 63 and token KW_OR resolved as reduce (KW_OR < KW_DIV).
    Conflict between rule 63 and token KW_DIFFERENT resolved as reduce (KW_DIFFERENT < KW_DIV).
    Conflict between rule 63 and token KW_LESS_OR_EQ resolved as reduce (KW_LESS_OR_EQ < KW_DIV).
    Conflict between rule 63 and token KW_MORE_OR_EQ resolved as reduce (KW_MORE_OR_EQ < KW_DIV).
    Conflict between rule 63 and token KW_AND_SYMB resolved as reduce (KW_AND_SYMB < KW_DIV).
    Conflict between rule 63 and token KW_OR_SYMB resolved as reduce (KW_OR_SYMB < KW_DIV).
    Conflict between rule 63 and token '<' resolved as reduce ('<' < KW_DIV).
    Conflict between rule 63 and token '>' resolved as reduce ('>' < KW_DIV).
    Conflict between rule 63 and token '=' resolved as reduce ('=' < KW_DIV).
    Conflict between rule 63 and token '+' resolved as reduce ('+' < KW_DIV).
    Conflict between rule 63 and token '-' resolved as reduce ('-' < KW_DIV).
    Conflict between rule 63 and token '*' resolved as reduce (%left '*').
    Conflict between rule 63 and token '/' resolved as reduce (%left '/').


State 219

   61 expression: expression . '*' expression
   62           | expression . '/' expression
   63           | expression . KW_DIV expression
   64           | expression . KW_MOD expression
   64           | expression KW_MOD expression .  [KW_AND, KW_DIV, KW_MOD, KW_OR, KW_DIFFERENT, KW_LESS_OR_EQ, KW_MORE_OR_EQ, KW_AND_SYMB, KW_OR_SYMB, '<', '>', '=', '+', '-', '*', '/']
   65           | expression . '+' expression
   66           | expression . '-' expression
   69           | expression . '=' expression
   70           | expression . KW_DIFFERENT expression
   71           | expression . '<' expression
   72           | expression . '>' expression
   73           | expression . KW_LESS_OR_EQ expression
   74           | expression . KW_MORE_OR_EQ expression
   75           | expression . KW_AND expression
   76           | expression . KW_OR expression
   77           | expression . KW_AND_SYMB expression
   78           | expression . KW_OR_SYMB expression
   93 in_brackets: expression KW_MOD expression .  [')']

    ')'       reduce using rule 93 (in_brackets)
    $default  reduce using rule 64 (expression)

    Conflict between rule 64 and token KW_AND resolved as reduce (KW_AND < KW_MOD).
    Conflict between rule 64 and token KW_DIV resolved as reduce (%left KW_DIV).
    Conflict between rule 64 and token KW_MOD resolved as reduce (%left KW_MOD).
    Conflict between rule 64 and token KW_OR resolved as reduce (KW_OR < KW_MOD).
    Conflict between rule 64 and token KW_DIFFERENT resolved as reduce (KW_DIFFERENT < KW_MOD).
    Conflict between rule 64 and token KW_LESS_OR_EQ resolved as reduce (KW_LESS_OR_EQ < KW_MOD).
    Conflict between rule 64 and token KW_MORE_OR_EQ resolved as reduce (KW_MORE_OR_EQ < KW_MOD).
    Conflict between rule 64 and token KW_AND_SYMB resolved as reduce (KW_AND_SYMB < KW_MOD).
    Conflict between rule 64 and token KW_OR_SYMB resolved as reduce (KW_OR_SYMB < KW_MOD).
    Conflict between rule 64 and token '<' resolved as reduce ('<' < KW_MOD).
    Conflict between rule 64 and token '>' resolved as reduce ('>' < KW_MOD).
    Conflict between rule 64 and token '=' resolved as reduce ('=' < KW_MOD).
    Conflict between rule 64 and token '+' resolved as reduce ('+' < KW_MOD).
    Conflict between rule 64 and token '-' resolved as reduce ('-' < KW_MOD).
    Conflict between rule 64 and token '*' resolved as reduce (%left '*').
    Conflict between rule 64 and token '/' resolved as reduce (%left '/').


State 220

   61 expression: expression . '*' expression
   62           | expression . '/' expression
   63           | expression . KW_DIV expression
   64           | expression . KW_MOD expression
   65           | expression . '+' expression
   66           | expression . '-' expression
   69           | expression . '=' expression
   70           | expression . KW_DIFFERENT expression
   71           | expression . '<' expression
   72           | expression . '>' expression
   73           | expression . KW_LESS_OR_EQ expression
   74           | expression . KW_MORE_OR_EQ expression
   75           | expression . KW_AND expression
   76           | expression . KW_OR expression
   76           | expression KW_OR expression .  [KW_OR, KW_OR_SYMB]
   77           | expression . KW_AND_SYMB expression
   78           | expression . KW_OR_SYMB expression
  105 in_brackets: expression KW_OR expression .  [')']

    KW_AND         shift, and go to state 112
    KW_DIV         shift, and go to state 113
    KW_MOD         shift, and go to state 114
    KW_DIFFERENT   shift, and go to state 117
    KW_LESS_OR_EQ  shift, and go to state 118
    KW_MORE_OR_EQ  shift, and go to state 119
    KW_AND_SYMB    shift, and go to state 120
    '<'            shift, and go to state 122
    '>'            shift, and go to state 123
    '='            shift, and go to state 124
    '+'            shift, and go to state 125
    '-'            shift, and go to state 126
    '*'            shift, and go to state 127
    '/'            shift, and go to state 128

    ')'       reduce using rule 105 (in_brackets)
    $default  reduce using rule 76 (expression)

    Conflict between rule 76 and token KW_AND resolved as shift (KW_OR < KW_AND).
    Conflict between rule 76 and token KW_DIV resolved as shift (KW_OR < KW_DIV).
    Conflict between rule 76 and token KW_MOD resolved as shift (KW_OR < KW_MOD).
    Conflict between rule 76 and token KW_OR resolved as reduce (%left KW_OR).
    Conflict between rule 76 and token KW_DIFFERENT resolved as shift (KW_OR < KW_DIFFERENT).
    Conflict between rule 76 and token KW_LESS_OR_EQ resolved as shift (KW_OR < KW_LESS_OR_EQ).
    Conflict between rule 76 and token KW_MORE_OR_EQ resolved as shift (KW_OR < KW_MORE_OR_EQ).
    Conflict between rule 76 and token KW_AND_SYMB resolved as shift (KW_OR < KW_AND_SYMB).
    Conflict between rule 76 and token KW_OR_SYMB resolved as reduce (%left KW_OR_SYMB).
    Conflict between rule 76 and token '<' resolved as shift (KW_OR < '<').
    Conflict between rule 76 and token '>' resolved as shift (KW_OR < '>').
    Conflict between rule 76 and token '=' resolved as shift (KW_OR < '=').
    Conflict between rule 76 and token '+' resolved as shift (KW_OR < '+').
    Conflict between rule 76 and token '-' resolved as shift (KW_OR < '-').
    Conflict between rule 76 and token '*' resolved as shift (KW_OR < '*').
    Conflict between rule 76 and token '/' resolved as shift (KW_OR < '/').


State 221

   61 expression: expression . '*' expression
   62           | expression . '/' expression
   63           | expression . KW_DIV expression
   64           | expression . KW_MOD expression
   65           | expression . '+' expression
   66           | expression . '-' expression
   69           | expression . '=' expression
   70           | expression . KW_DIFFERENT expression
   70           | expression KW_DIFFERENT expression .  [KW_AND, KW_OR, KW_DIFFERENT, KW_LESS_OR_EQ, KW_MORE_OR_EQ, KW_AND_SYMB, KW_OR_SYMB, '<', '>', '=']
   71           | expression . '<' expression
   72           | expression . '>' expression
   73           | expression . KW_LESS_OR_EQ expression
   74           | expression . KW_MORE_OR_EQ expression
   75           | expression . KW_AND expression
   76           | expression . KW_OR expression
   77           | expression . KW_AND_SYMB expression
   78           | expression . KW_OR_SYMB expression
   99 in_brackets: expression KW_DIFFERENT expression .  [')']

    KW_DIV  shift, and go to state 113
    KW_MOD  shift, and go to state 114
    '+'     shift, and go to state 125
    '-'     shift, and go to state 126
    '*'     shift, and go to state 127
    '/'     shift, and go to state 128

    ')'       reduce using rule 99 (in_brackets)
    $default  reduce using rule 70 (expression)

    Conflict between rule 70 and token KW_AND resolved as reduce (KW_AND < KW_DIFFERENT).
    Conflict between rule 70 and token KW_DIV resolved as shift (KW_DIFFERENT < KW_DIV).
    Conflict between rule 70 and token KW_MOD resolved as shift (KW_DIFFERENT < KW_MOD).
    Conflict between rule 70 and token KW_OR resolved as reduce (KW_OR < KW_DIFFERENT).
    Conflict between rule 70 and token KW_DIFFERENT resolved as reduce (%left KW_DIFFERENT).
    Conflict between rule 70 and token KW_LESS_OR_EQ resolved as reduce (%left KW_LESS_OR_EQ).
    Conflict between rule 70 and token KW_MORE_OR_EQ resolved as reduce (%left KW_MORE_OR_EQ).
    Conflict between rule 70 and token KW_AND_SYMB resolved as reduce (KW_AND_SYMB < KW_DIFFERENT).
    Conflict between rule 70 and token KW_OR_SYMB resolved as reduce (KW_OR_SYMB < KW_DIFFERENT).
    Conflict between rule 70 and token '<' resolved as reduce (%left '<').
    Conflict between rule 70 and token '>' resolved as reduce (%left '>').
    Conflict between rule 70 and token '=' resolved as reduce (%left '=').
    Conflict between rule 70 and token '+' resolved as shift (KW_DIFFERENT < '+').
    Conflict between rule 70 and token '-' resolved as shift (KW_DIFFERENT < '-').
    Conflict between rule 70 and token '*' resolved as shift (KW_DIFFERENT < '*').
    Conflict between rule 70 and token '/' resolved as shift (KW_DIFFERENT < '/').


State 222

   61 expression: expression . '*' expression
   62           | expression . '/' expression
   63           | expression . KW_DIV expression
   64           | expression . KW_MOD expression
   65           | expression . '+' expression
   66           | expression . '-' expression
   69           | expression . '=' expression
   70           | expression . KW_DIFFERENT expression
   71           | expression . '<' expression
   72           | expression . '>' expression
   73           | expression . KW_LESS_OR_EQ expression
   73           | expression KW_LESS_OR_EQ expression .  [KW_AND, KW_OR, KW_DIFFERENT, KW_LESS_OR_EQ, KW_MORE_OR_EQ, KW_AND_SYMB, KW_OR_SYMB, '<', '>', '=']
   74           | expression . KW_MORE_OR_EQ expression
   75           | expression . KW_AND expression
   76           | expression . KW_OR expression
   77           | expression . KW_AND_SYMB expression
   78           | expression . KW_OR_SYMB expression
  102 in_brackets: expression KW_LESS_OR_EQ expression .  [')']

    KW_DIV  shift, and go to state 113
    KW_MOD  shift, and go to state 114
    '+'     shift, and go to state 125
    '-'     shift, and go to state 126
    '*'     shift, and go to state 127
    '/'     shift, and go to state 128

    ')'       reduce using rule 102 (in_brackets)
    $default  reduce using rule 73 (expression)

    Conflict between rule 73 and token KW_AND resolved as reduce (KW_AND < KW_LESS_OR_EQ).
    Conflict between rule 73 and token KW_DIV resolved as shift (KW_LESS_OR_EQ < KW_DIV).
    Conflict between rule 73 and token KW_MOD resolved as shift (KW_LESS_OR_EQ < KW_MOD).
    Conflict between rule 73 and token KW_OR resolved as reduce (KW_OR < KW_LESS_OR_EQ).
    Conflict between rule 73 and token KW_DIFFERENT resolved as reduce (%left KW_DIFFERENT).
    Conflict between rule 73 and token KW_LESS_OR_EQ resolved as reduce (%left KW_LESS_OR_EQ).
    Conflict between rule 73 and token KW_MORE_OR_EQ resolved as reduce (%left KW_MORE_OR_EQ).
    Conflict between rule 73 and token KW_AND_SYMB resolved as reduce (KW_AND_SYMB < KW_LESS_OR_EQ).
    Conflict between rule 73 and token KW_OR_SYMB resolved as reduce (KW_OR_SYMB < KW_LESS_OR_EQ).
    Conflict between rule 73 and token '<' resolved as reduce (%left '<').
    Conflict between rule 73 and token '>' resolved as reduce (%left '>').
    Conflict between rule 73 and token '=' resolved as reduce (%left '=').
    Conflict between rule 73 and token '+' resolved as shift (KW_LESS_OR_EQ < '+').
    Conflict between rule 73 and token '-' resolved as shift (KW_LESS_OR_EQ < '-').
    Conflict between rule 73 and token '*' resolved as shift (KW_LESS_OR_EQ < '*').
    Conflict between rule 73 and token '/' resolved as shift (KW_LESS_OR_EQ < '/').


State 223

   61 expression: expression . '*' expression
   62           | expression . '/' expression
   63           | expression . KW_DIV expression
   64           | expression . KW_MOD expression
   65           | expression . '+' expression
   66           | expression . '-' expression
   69           | expression . '=' expression
   70           | expression . KW_DIFFERENT expression
   71           | expression . '<' expression
   72           | expression . '>' expression
   73           | expression . KW_LESS_OR_EQ expression
   74           | expression . KW_MORE_OR_EQ expression
   74           | expression KW_MORE_OR_EQ expression .  [KW_AND, KW_OR, KW_DIFFERENT, KW_LESS_OR_EQ, KW_MORE_OR_EQ, KW_AND_SYMB, KW_OR_SYMB, '<', '>', '=']
   75           | expression . KW_AND expression
   76           | expression . KW_OR expression
   77           | expression . KW_AND_SYMB expression
   78           | expression . KW_OR_SYMB expression
  103 in_brackets: expression KW_MORE_OR_EQ expression .  [')']

    KW_DIV  shift, and go to state 113
    KW_MOD  shift, and go to state 114
    '+'     shift, and go to state 125
    '-'     shift, and go to state 126
    '*'     shift, and go to state 127
    '/'     shift, and go to state 128

    ')'       reduce using rule 103 (in_brackets)
    $default  reduce using rule 74 (expression)

    Conflict between rule 74 and token KW_AND resolved as reduce (KW_AND < KW_MORE_OR_EQ).
    Conflict between rule 74 and token KW_DIV resolved as shift (KW_MORE_OR_EQ < KW_DIV).
    Conflict between rule 74 and token KW_MOD resolved as shift (KW_MORE_OR_EQ < KW_MOD).
    Conflict between rule 74 and token KW_OR resolved as reduce (KW_OR < KW_MORE_OR_EQ).
    Conflict between rule 74 and token KW_DIFFERENT resolved as reduce (%left KW_DIFFERENT).
    Conflict between rule 74 and token KW_LESS_OR_EQ resolved as reduce (%left KW_LESS_OR_EQ).
    Conflict between rule 74 and token KW_MORE_OR_EQ resolved as reduce (%left KW_MORE_OR_EQ).
    Conflict between rule 74 and token KW_AND_SYMB resolved as reduce (KW_AND_SYMB < KW_MORE_OR_EQ).
    Conflict between rule 74 and token KW_OR_SYMB resolved as reduce (KW_OR_SYMB < KW_MORE_OR_EQ).
    Conflict between rule 74 and token '<' resolved as reduce (%left '<').
    Conflict between rule 74 and token '>' resolved as reduce (%left '>').
    Conflict between rule 74 and token '=' resolved as reduce (%left '=').
    Conflict between rule 74 and token '+' resolved as shift (KW_MORE_OR_EQ < '+').
    Conflict between rule 74 and token '-' resolved as shift (KW_MORE_OR_EQ < '-').
    Conflict between rule 74 and token '*' resolved as shift (KW_MORE_OR_EQ < '*').
    Conflict between rule 74 and token '/' resolved as shift (KW_MORE_OR_EQ < '/').


State 224

   61 expression: expression . '*' expression
   62           | expression . '/' expression
   63           | expression . KW_DIV expression
   64           | expression . KW_MOD expression
   65           | expression . '+' expression
   66           | expression . '-' expression
   69           | expression . '=' expression
   70           | expression . KW_DIFFERENT expression
   71           | expression . '<' expression
   72           | expression . '>' expression
   73           | expression . KW_LESS_OR_EQ expression
   74           | expression . KW_MORE_OR_EQ expression
   75           | expression . KW_AND expression
   76           | expression . KW_OR expression
   77           | expression . KW_AND_SYMB expression
   77           | expression KW_AND_SYMB expression .  [KW_AND, KW_OR, KW_AND_SYMB, KW_OR_SYMB]
   78           | expression . KW_OR_SYMB expression
  106 in_brackets: expression KW_AND_SYMB expression .  [')']

    KW_DIV         shift, and go to state 113
    KW_MOD         shift, and go to state 114
    KW_DIFFERENT   shift, and go to state 117
    KW_LESS_OR_EQ  shift, and go to state 118
    KW_MORE_OR_EQ  shift, and go to state 119
    '<'            shift, and go to state 122
    '>'            shift, and go to state 123
    '='            shift, and go to state 124
    '+'            shift, and go to state 125
    '-'            shift, and go to state 126
    '*'            shift, and go to state 127
    '/'            shift, and go to state 128

    ')'       reduce using rule 106 (in_brackets)
    $default  reduce using rule 77 (expression)

    Conflict between rule 77 and token KW_AND resolved as reduce (%left KW_AND).
    Conflict between rule 77 and token KW_DIV resolved as shift (KW_AND_SYMB < KW_DIV).
    Conflict between rule 77 and token KW_MOD resolved as shift (KW_AND_SYMB < KW_MOD).
    Conflict between rule 77 and token KW_OR resolved as reduce (KW_OR < KW_AND_SYMB).
    Conflict between rule 77 and token KW_DIFFERENT resolved as shift (KW_AND_SYMB < KW_DIFFERENT).
    Conflict between rule 77 and token KW_LESS_OR_EQ resolved as shift (KW_AND_SYMB < KW_LESS_OR_EQ).
    Conflict between rule 77 and token KW_MORE_OR_EQ resolved as shift (KW_AND_SYMB < KW_MORE_OR_EQ).
    Conflict between rule 77 and token KW_AND_SYMB resolved as reduce (%left KW_AND_SYMB).
    Conflict between rule 77 and token KW_OR_SYMB resolved as reduce (KW_OR_SYMB < KW_AND_SYMB).
    Conflict between rule 77 and token '<' resolved as shift (KW_AND_SYMB < '<').
    Conflict between rule 77 and token '>' resolved as shift (KW_AND_SYMB < '>').
    Conflict between rule 77 and token '=' resolved as shift (KW_AND_SYMB < '=').
    Conflict between rule 77 and token '+' resolved as shift (KW_AND_SYMB < '+').
    Conflict between rule 77 and token '-' resolved as shift (KW_AND_SYMB < '-').
    Conflict between rule 77 and token '*' resolved as shift (KW_AND_SYMB < '*').
    Conflict between rule 77 and token '/' resolved as shift (KW_AND_SYMB < '/').


State 225

   61 expression: expression . '*' expression
   62           | expression . '/' expression
   63           | expression . KW_DIV expression
   64           | expression . KW_MOD expression
   65           | expression . '+' expression
   66           | expression . '-' expression
   69           | expression . '=' expression
   70           | expression . KW_DIFFERENT expression
   71           | expression . '<' expression
   72           | expression . '>' expression
   73           | expression . KW_LESS_OR_EQ expression
   74           | expression . KW_MORE_OR_EQ expression
   75           | expression . KW_AND expression
   76           | expression . KW_OR expression
   77           | expression . KW_AND_SYMB expression
   78           | expression . KW_OR_SYMB expression
   78           | expression KW_OR_SYMB expression .  [KW_OR, KW_OR_SYMB]
  107 in_brackets: expression KW_OR_SYMB expression .  [')']

    KW_AND         shift, and go to state 112
    KW_DIV         shift, and go to state 113
    KW_MOD         shift, and go to state 114
    KW_DIFFERENT   shift, and go to state 117
    KW_LESS_OR_EQ  shift, and go to state 118
    KW_MORE_OR_EQ  shift, and go to state 119
    KW_AND_SYMB    shift, and go to state 120
    '<'            shift, and go to state 122
    '>'            shift, and go to state 123
    '='            shift, and go to state 124
    '+'            shift, and go to state 125
    '-'            shift, and go to state 126
    '*'            shift, and go to state 127
    '/'            shift, and go to state 128

    ')'       reduce using rule 107 (in_brackets)
    $default  reduce using rule 78 (expression)

    Conflict between rule 78 and token KW_AND resolved as shift (KW_OR_SYMB < KW_AND).
    Conflict between rule 78 and token KW_DIV resolved as shift (KW_OR_SYMB < KW_DIV).
    Conflict between rule 78 and token KW_MOD resolved as shift (KW_OR_SYMB < KW_MOD).
    Conflict between rule 78 and token KW_OR resolved as reduce (%left KW_OR).
    Conflict between rule 78 and token KW_DIFFERENT resolved as shift (KW_OR_SYMB < KW_DIFFERENT).
    Conflict between rule 78 and token KW_LESS_OR_EQ resolved as shift (KW_OR_SYMB < KW_LESS_OR_EQ).
    Conflict between rule 78 and token KW_MORE_OR_EQ resolved as shift (KW_OR_SYMB < KW_MORE_OR_EQ).
    Conflict between rule 78 and token KW_AND_SYMB resolved as shift (KW_OR_SYMB < KW_AND_SYMB).
    Conflict between rule 78 and token KW_OR_SYMB resolved as reduce (%left KW_OR_SYMB).
    Conflict between rule 78 and token '<' resolved as shift (KW_OR_SYMB < '<').
    Conflict between rule 78 and token '>' resolved as shift (KW_OR_SYMB < '>').
    Conflict between rule 78 and token '=' resolved as shift (KW_OR_SYMB < '=').
    Conflict between rule 78 and token '+' resolved as shift (KW_OR_SYMB < '+').
    Conflict between rule 78 and token '-' resolved as shift (KW_OR_SYMB < '-').
    Conflict between rule 78 and token '*' resolved as shift (KW_OR_SYMB < '*').
    Conflict between rule 78 and token '/' resolved as shift (KW_OR_SYMB < '/').


State 226

   61 expression: expression . '*' expression
   62           | expression . '/' expression
   63           | expression . KW_DIV expression
   64           | expression . KW_MOD expression
   65           | expression . '+' expression
   66           | expression . '-' expression
   69           | expression . '=' expression
   70           | expression . KW_DIFFERENT expression
   71           | expression . '<' expression
   71           | expression '<' expression .  [KW_AND, KW_OR, KW_DIFFERENT, KW_LESS_OR_EQ, KW_MORE_OR_EQ, KW_AND_SYMB, KW_OR_SYMB, '<', '>', '=']
   72           | expression . '>' expression
   73           | expression . KW_LESS_OR_EQ expression
   74           | expression . KW_MORE_OR_EQ expression
   75           | expression . KW_AND expression
   76           | expression . KW_OR expression
   77           | expression . KW_AND_SYMB expression
   78           | expression . KW_OR_SYMB expression
  100 in_brackets: expression '<' expression .  [')']

    KW_DIV  shift, and go to state 113
    KW_MOD  shift, and go to state 114
    '+'     shift, and go to state 125
    '-'     shift, and go to state 126
    '*'     shift, and go to state 127
    '/'     shift, and go to state 128

    ')'       reduce using rule 100 (in_brackets)
    $default  reduce using rule 71 (expression)

    Conflict between rule 71 and token KW_AND resolved as reduce (KW_AND < '<').
    Conflict between rule 71 and token KW_DIV resolved as shift ('<' < KW_DIV).
    Conflict between rule 71 and token KW_MOD resolved as shift ('<' < KW_MOD).
    Conflict between rule 71 and token KW_OR resolved as reduce (KW_OR < '<').
    Conflict between rule 71 and token KW_DIFFERENT resolved as reduce (%left KW_DIFFERENT).
    Conflict between rule 71 and token KW_LESS_OR_EQ resolved as reduce (%left KW_LESS_OR_EQ).
    Conflict between rule 71 and token KW_MORE_OR_EQ resolved as reduce (%left KW_MORE_OR_EQ).
    Conflict between rule 71 and token KW_AND_SYMB resolved as reduce (KW_AND_SYMB < '<').
    Conflict between rule 71 and token KW_OR_SYMB resolved as reduce (KW_OR_SYMB < '<').
    Conflict between rule 71 and token '<' resolved as reduce (%left '<').
    Conflict between rule 71 and token '>' resolved as reduce (%left '>').
    Conflict between rule 71 and token '=' resolved as reduce (%left '=').
    Conflict between rule 71 and token '+' resolved as shift ('<' < '+').
    Conflict between rule 71 and token '-' resolved as shift ('<' < '-').
    Conflict between rule 71 and token '*' resolved as shift ('<' < '*').
    Conflict between rule 71 and token '/' resolved as shift ('<' < '/').


State 227

   61 expression: expression . '*' expression
   62           | expression . '/' expression
   63           | expression . KW_DIV expression
   64           | expression . KW_MOD expression
   65           | expression . '+' expression
   66           | expression . '-' expression
   69           | expression . '=' expression
   70           | expression . KW_DIFFERENT expression
   71           | expression . '<' expression
   72           | expression . '>' expression
   72           | expression '>' expression .  [KW_AND, KW_OR, KW_DIFFERENT, KW_LESS_OR_EQ, KW_MORE_OR_EQ, KW_AND_SYMB, KW_OR_SYMB, '<', '>', '=']
   73           | expression . KW_LESS_OR_EQ expression
   74           | expression . KW_MORE_OR_EQ expression
   75           | expression . KW_AND expression
   76           | expression . KW_OR expression
   77           | expression . KW_AND_SYMB expression
   78           | expression . KW_OR_SYMB expression
  101 in_brackets: expression '>' expression .  [')']

    KW_DIV  shift, and go to state 113
    KW_MOD  shift, and go to state 114
    '+'     shift, and go to state 125
    '-'     shift, and go to state 126
    '*'     shift, and go to state 127
    '/'     shift, and go to state 128

    ')'       reduce using rule 101 (in_brackets)
    $default  reduce using rule 72 (expression)

    Conflict between rule 72 and token KW_AND resolved as reduce (KW_AND < '>').
    Conflict between rule 72 and token KW_DIV resolved as shift ('>' < KW_DIV).
    Conflict between rule 72 and token KW_MOD resolved as shift ('>' < KW_MOD).
    Conflict between rule 72 and token KW_OR resolved as reduce (KW_OR < '>').
    Conflict between rule 72 and token KW_DIFFERENT resolved as reduce (%left KW_DIFFERENT).
    Conflict between rule 72 and token KW_LESS_OR_EQ resolved as reduce (%left KW_LESS_OR_EQ).
    Conflict between rule 72 and token KW_MORE_OR_EQ resolved as reduce (%left KW_MORE_OR_EQ).
    Conflict between rule 72 and token KW_AND_SYMB resolved as reduce (KW_AND_SYMB < '>').
    Conflict between rule 72 and token KW_OR_SYMB resolved as reduce (KW_OR_SYMB < '>').
    Conflict between rule 72 and token '<' resolved as reduce (%left '<').
    Conflict between rule 72 and token '>' resolved as reduce (%left '>').
    Conflict between rule 72 and token '=' resolved as reduce (%left '=').
    Conflict between rule 72 and token '+' resolved as shift ('>' < '+').
    Conflict between rule 72 and token '-' resolved as shift ('>' < '-').
    Conflict between rule 72 and token '*' resolved as shift ('>' < '*').
    Conflict between rule 72 and token '/' resolved as shift ('>' < '/').


State 228

   61 expression: expression . '*' expression
   62           | expression . '/' expression
   63           | expression . KW_DIV expression
   64           | expression . KW_MOD expression
   65           | expression . '+' expression
   66           | expression . '-' expression
   69           | expression . '=' expression
   69           | expression '=' expression .  [KW_AND, KW_OR, KW_DIFFERENT, KW_LESS_OR_EQ, KW_MORE_OR_EQ, KW_AND_SYMB, KW_OR_SYMB, '<', '>', '=']
   70           | expression . KW_DIFFERENT expression
   71           | expression . '<' expression
   72           | expression . '>' expression
   73           | expression . KW_LESS_OR_EQ expression
   74           | expression . KW_MORE_OR_EQ expression
   75           | expression . KW_AND expression
   76           | expression . KW_OR expression
   77           | expression . KW_AND_SYMB expression
   78           | expression . KW_OR_SYMB expression
   98 in_brackets: expression '=' expression .  [')']

    KW_DIV  shift, and go to state 113
    KW_MOD  shift, and go to state 114
    '+'     shift, and go to state 125
    '-'     shift, and go to state 126
    '*'     shift, and go to state 127
    '/'     shift, and go to state 128

    ')'       reduce using rule 98 (in_brackets)
    $default  reduce using rule 69 (expression)

    Conflict between rule 69 and token KW_AND resolved as reduce (KW_AND < '=').
    Conflict between rule 69 and token KW_DIV resolved as shift ('=' < KW_DIV).
    Conflict between rule 69 and token KW_MOD resolved as shift ('=' < KW_MOD).
    Conflict between rule 69 and token KW_OR resolved as reduce (KW_OR < '=').
    Conflict between rule 69 and token KW_DIFFERENT resolved as reduce (%left KW_DIFFERENT).
    Conflict between rule 69 and token KW_LESS_OR_EQ resolved as reduce (%left KW_LESS_OR_EQ).
    Conflict between rule 69 and token KW_MORE_OR_EQ resolved as reduce (%left KW_MORE_OR_EQ).
    Conflict between rule 69 and token KW_AND_SYMB resolved as reduce (KW_AND_SYMB < '=').
    Conflict between rule 69 and token KW_OR_SYMB resolved as reduce (KW_OR_SYMB < '=').
    Conflict between rule 69 and token '<' resolved as reduce (%left '<').
    Conflict between rule 69 and token '>' resolved as reduce (%left '>').
    Conflict between rule 69 and token '=' resolved as reduce (%left '=').
    Conflict between rule 69 and token '+' resolved as shift ('=' < '+').
    Conflict between rule 69 and token '-' resolved as shift ('=' < '-').
    Conflict between rule 69 and token '*' resolved as shift ('=' < '*').
    Conflict between rule 69 and token '/' resolved as shift ('=' < '/').


State 229

   61 expression: expression . '*' expression
   62           | expression . '/' expression
   63           | expression . KW_DIV expression
   64           | expression . KW_MOD expression
   65           | expression . '+' expression
   65           | expression '+' expression .  [KW_AND, KW_OR, KW_DIFFERENT, KW_LESS_OR_EQ, KW_MORE_OR_EQ, KW_AND_SYMB, KW_OR_SYMB, '<', '>', '=', '+', '-']
   66           | expression . '-' expression
   69           | expression . '=' expression
   70           | expression . KW_DIFFERENT expression
   71           | expression . '<' expression
   72           | expression . '>' expression
   73           | expression . KW_LESS_OR_EQ expression
   74           | expression . KW_MORE_OR_EQ expression
   75           | expression . KW_AND expression
   76           | expression . KW_OR expression
   77           | expression . KW_AND_SYMB expression
   78           | expression . KW_OR_SYMB expression
   94 in_brackets: expression '+' expression .  [')']

    KW_DIV  shift, and go to state 113
    KW_MOD  shift, and go to state 114
    '*'     shift, and go to state 127
    '/'     shift, and go to state 128

    ')'       reduce using rule 94 (in_brackets)
    $default  reduce using rule 65 (expression)

    Conflict between rule 65 and token KW_AND resolved as reduce (KW_AND < '+').
    Conflict between rule 65 and token KW_DIV resolved as shift ('+' < KW_DIV).
    Conflict between rule 65 and token KW_MOD resolved as shift ('+' < KW_MOD).
    Conflict between rule 65 and token KW_OR resolved as reduce (KW_OR < '+').
    Conflict between rule 65 and token KW_DIFFERENT resolved as reduce (KW_DIFFERENT < '+').
    Conflict between rule 65 and token KW_LESS_OR_EQ resolved as reduce (KW_LESS_OR_EQ < '+').
    Conflict between rule 65 and token KW_MORE_OR_EQ resolved as reduce (KW_MORE_OR_EQ < '+').
    Conflict between rule 65 and token KW_AND_SYMB resolved as reduce (KW_AND_SYMB < '+').
    Conflict between rule 65 and token KW_OR_SYMB resolved as reduce (KW_OR_SYMB < '+').
    Conflict between rule 65 and token '<' resolved as reduce ('<' < '+').
    Conflict between rule 65 and token '>' resolved as reduce ('>' < '+').
    Conflict between rule 65 and token '=' resolved as reduce ('=' < '+').
    Conflict between rule 65 and token '+' resolved as reduce (%left '+').
    Conflict between rule 65 and token '-' resolved as reduce (%left '-').
    Conflict between rule 65 and token '*' resolved as shift ('+' < '*').
    Conflict between rule 65 and token '/' resolved as shift ('+' < '/').


State 230

   61 expression: expression . '*' expression
   62           | expression . '/' expression
   63           | expression . KW_DIV expression
   64           | expression . KW_MOD expression
   65           | expression . '+' expression
   66           | expression . '-' expression
   66           | expression '-' expression .  [KW_AND, KW_OR, KW_DIFFERENT, KW_LESS_OR_EQ, KW_MORE_OR_EQ, KW_AND_SYMB, KW_OR_SYMB, '<', '>', '=', '+', '-']
   69           | expression . '=' expression
   70           | expression . KW_DIFFERENT expression
   71           | expression . '<' expression
   72           | expression . '>' expression
   73           | expression . KW_LESS_OR_EQ expression
   74           | expression . KW_MORE_OR_EQ expression
   75           | expression . KW_AND expression
   76           | expression . KW_OR expression
   77           | expression . KW_AND_SYMB expression
   78           | expression . KW_OR_SYMB expression
   95 in_brackets: expression '-' expression .  [')']

    KW_DIV  shift, and go to state 113
    KW_MOD  shift, and go to state 114
    '*'     shift, and go to state 127
    '/'     shift, and go to state 128

    ')'       reduce using rule 95 (in_brackets)
    $default  reduce using rule 66 (expression)

    Conflict between rule 66 and token KW_AND resolved as reduce (KW_AND < '-').
    Conflict between rule 66 and token KW_DIV resolved as shift ('-' < KW_DIV).
    Conflict between rule 66 and token KW_MOD resolved as shift ('-' < KW_MOD).
    Conflict between rule 66 and token KW_OR resolved as reduce (KW_OR < '-').
    Conflict between rule 66 and token KW_DIFFERENT resolved as reduce (KW_DIFFERENT < '-').
    Conflict between rule 66 and token KW_LESS_OR_EQ resolved as reduce (KW_LESS_OR_EQ < '-').
    Conflict between rule 66 and token KW_MORE_OR_EQ resolved as reduce (KW_MORE_OR_EQ < '-').
    Conflict between rule 66 and token KW_AND_SYMB resolved as reduce (KW_AND_SYMB < '-').
    Conflict between rule 66 and token KW_OR_SYMB resolved as reduce (KW_OR_SYMB < '-').
    Conflict between rule 66 and token '<' resolved as reduce ('<' < '-').
    Conflict between rule 66 and token '>' resolved as reduce ('>' < '-').
    Conflict between rule 66 and token '=' resolved as reduce ('=' < '-').
    Conflict between rule 66 and token '+' resolved as reduce (%left '+').
    Conflict between rule 66 and token '-' resolved as reduce (%left '-').
    Conflict between rule 66 and token '*' resolved as shift ('-' < '*').
    Conflict between rule 66 and token '/' resolved as shift ('-' < '/').


State 231

   61 expression: expression . '*' expression
   61           | expression '*' expression .  [KW_AND, KW_DIV, KW_MOD, KW_OR, KW_DIFFERENT, KW_LESS_OR_EQ, KW_MORE_OR_EQ, KW_AND_SYMB, KW_OR_SYMB, '<', '>', '=', '+', '-', '*', '/']
   62           | expression . '/' expression
   63           | expression . KW_DIV expression
   64           | expression . KW_MOD expression
   65           | expression . '+' expression
   66           | expression . '-' expression
   69           | expression . '=' expression
   70           | expression . KW_DIFFERENT expression
   71           | expression . '<' expression
   72           | expression . '>' expression
   73           | expression . KW_LESS_OR_EQ expression
   74           | expression . KW_MORE_OR_EQ expression
   75           | expression . KW_AND expression
   76           | expression . KW_OR expression
   77           | expression . KW_AND_SYMB expression
   78           | expression . KW_OR_SYMB expression
   90 in_brackets: expression '*' expression .  [')']

    ')'       reduce using rule 90 (in_brackets)
    $default  reduce using rule 61 (expression)

    Conflict between rule 61 and token KW_AND resolved as reduce (KW_AND < '*').
    Conflict between rule 61 and token KW_DIV resolved as reduce (%left KW_DIV).
    Conflict between rule 61 and token KW_MOD resolved as reduce (%left KW_MOD).
    Conflict between rule 61 and token KW_OR resolved as reduce (KW_OR < '*').
    Conflict between rule 61 and token KW_DIFFERENT resolved as reduce (KW_DIFFERENT < '*').
    Conflict between rule 61 and token KW_LESS_OR_EQ resolved as reduce (KW_LESS_OR_EQ < '*').
    Conflict between rule 61 and token KW_MORE_OR_EQ resolved as reduce (KW_MORE_OR_EQ < '*').
    Conflict between rule 61 and token KW_AND_SYMB resolved as reduce (KW_AND_SYMB < '*').
    Conflict between rule 61 and token KW_OR_SYMB resolved as reduce (KW_OR_SYMB < '*').
    Conflict between rule 61 and token '<' resolved as reduce ('<' < '*').
    Conflict between rule 61 and token '>' resolved as reduce ('>' < '*').
    Conflict between rule 61 and token '=' resolved as reduce ('=' < '*').
    Conflict between rule 61 and token '+' resolved as reduce ('+' < '*').
    Conflict between rule 61 and token '-' resolved as reduce ('-' < '*').
    Conflict between rule 61 and token '*' resolved as reduce (%left '*').
    Conflict between rule 61 and token '/' resolved as reduce (%left '/').


State 232

   61 expression: expression . '*' expression
   62           | expression . '/' expression
   62           | expression '/' expression .  [KW_AND, KW_DIV, KW_MOD, KW_OR, KW_DIFFERENT, KW_LESS_OR_EQ, KW_MORE_OR_EQ, KW_AND_SYMB, KW_OR_SYMB, '<', '>', '=', '+', '-', '*', '/']
   63           | expression . KW_DIV expression
   64           | expression . KW_MOD expression
   65           | expression . '+' expression
   66           | expression . '-' expression
   69           | expression . '=' expression
   70           | expression . KW_DIFFERENT expression
   71           | expression . '<' expression
   72           | expression . '>' expression
   73           | expression . KW_LESS_OR_EQ expression
   74           | expression . KW_MORE_OR_EQ expression
   75           | expression . KW_AND expression
   76           | expression . KW_OR expression
   77           | expression . KW_AND_SYMB expression
   78           | expression . KW_OR_SYMB expression
   91 in_brackets: expression '/' expression .  [')']

    ')'       reduce using rule 91 (in_brackets)
    $default  reduce using rule 62 (expression)

    Conflict between rule 62 and token KW_AND resolved as reduce (KW_AND < '/').
    Conflict between rule 62 and token KW_DIV resolved as reduce (%left KW_DIV).
    Conflict between rule 62 and token KW_MOD resolved as reduce (%left KW_MOD).
    Conflict between rule 62 and token KW_OR resolved as reduce (KW_OR < '/').
    Conflict between rule 62 and token KW_DIFFERENT resolved as reduce (KW_DIFFERENT < '/').
    Conflict between rule 62 and token KW_LESS_OR_EQ resolved as reduce (KW_LESS_OR_EQ < '/').
    Conflict between rule 62 and token KW_MORE_OR_EQ resolved as reduce (KW_MORE_OR_EQ < '/').
    Conflict between rule 62 and token KW_AND_SYMB resolved as reduce (KW_AND_SYMB < '/').
    Conflict between rule 62 and token KW_OR_SYMB resolved as reduce (KW_OR_SYMB < '/').
    Conflict between rule 62 and token '<' resolved as reduce ('<' < '/').
    Conflict between rule 62 and token '>' resolved as reduce ('>' < '/').
    Conflict between rule 62 and token '=' resolved as reduce ('=' < '/').
    Conflict between rule 62 and token '+' resolved as reduce ('+' < '/').
    Conflict between rule 62 and token '-' resolved as reduce ('-' < '/').
    Conflict between rule 62 and token '*' resolved as reduce (%left '*').
    Conflict between rule 62 and token '/' resolved as reduce (%left '/').


State 233

   47 casting: '(' basic_types ')' expression .  [IDENT, KW_BEGIN, KW_END, KW_AND, KW_DIV, KW_FUNCTION, KW_MOD, KW_PROCEDURE, KW_RESULT, KW_DO, KW_GOTO, KW_RETURN, KW_ELSE, KW_IF, KW_THEN, KW_FOR, KW_OR, KW_REPEAT, KW_UNTIL, KW_VAR, KW_WHILE, KW_TO, KW_DOWNTO, KW_DIFFERENT, KW_LESS_OR_EQ, KW_MORE_OR_EQ, KW_AND_SYMB, KW_OR_SYMB, KW_TYPE, '<', '>', '=', '+', '-', '*', '/', ')', ';', ',']
   61 expression: expression . '*' expression
   62           | expression . '/' expression
   63           | expression . KW_DIV expression
   64           | expression . KW_MOD expression
   65           | expression . '+' expression
   66           | expression . '-' expression
   69           | expression . '=' expression
   70           | expression . KW_DIFFERENT expression
   71           | expression . '<' expression
   72           | expression . '>' expression
   73           | expression . KW_LESS_OR_EQ expression
   74           | expression . KW_MORE_OR_EQ expression
   75           | expression . KW_AND expression
   76           | expression . KW_OR expression
   77           | expression . KW_AND_SYMB expression
   78           | expression . KW_OR_SYMB expression

    $default  reduce using rule 47 (casting)

    Conflict between rule 47 and token KW_AND resolved as reduce (KW_AND < ')').
    Conflict between rule 47 and token KW_DIV resolved as reduce (KW_DIV < ')').
    Conflict between rule 47 and token KW_MOD resolved as reduce (KW_MOD < ')').
    Conflict between rule 47 and token KW_OR resolved as reduce (KW_OR < ')').
    Conflict between rule 47 and token KW_DIFFERENT resolved as reduce (KW_DIFFERENT < ')').
    Conflict between rule 47 and token KW_LESS_OR_EQ resolved as reduce (KW_LESS_OR_EQ < ')').
    Conflict between rule 47 and token KW_MORE_OR_EQ resolved as reduce (KW_MORE_OR_EQ < ')').
    Conflict between rule 47 and token KW_AND_SYMB resolved as reduce (KW_AND_SYMB < ')').
    Conflict between rule 47 and token KW_OR_SYMB resolved as reduce (KW_OR_SYMB < ')').
    Conflict between rule 47 and token '<' resolved as reduce ('<' < ')').
    Conflict between rule 47 and token '>' resolved as reduce ('>' < ')').
    Conflict between rule 47 and token '=' resolved as reduce ('=' < ')').
    Conflict between rule 47 and token '+' resolved as reduce ('+' < ')').
    Conflict between rule 47 and token '-' resolved as reduce ('-' < ')').
    Conflict between rule 47 and token '*' resolved as reduce ('*' < ')').
    Conflict between rule 47 and token '/' resolved as reduce ('/' < ')').


State 234

   18 if_statement: KW_IF expression KW_THEN KW_BEGIN statement_list . KW_END ';'
   19             | KW_IF expression KW_THEN KW_BEGIN statement_list . KW_END ';' KW_ELSE KW_BEGIN statement_list KW_END ';'
   23             | KW_IF expression KW_THEN KW_BEGIN statement_list . KW_END ';' KW_ELSE statement

    KW_END  shift, and go to state 259


State 235

    6 statement: . subprogram_def
    7          | . proc_call ';'
    8          | . label_decl
    9          | . goto_statement
   10          | . assignment
   11          | . KW_RETURN
   12          | . type_def
   13          | . var_declaration
   14          | . loops
   15 loops: . if_statement
   16      | . for_statement
   17      | . while_statement
   18 if_statement: . KW_IF expression KW_THEN KW_BEGIN statement_list KW_END ';'
   19             | . KW_IF expression KW_THEN KW_BEGIN statement_list KW_END ';' KW_ELSE KW_BEGIN statement_list KW_END ';'
   20             | . KW_IF expression KW_THEN statement
   21             | . KW_IF expression KW_THEN statement KW_ELSE statement
   21             | KW_IF expression KW_THEN statement KW_ELSE . statement
   22             | . KW_IF expression KW_THEN statement KW_ELSE KW_BEGIN statement_list KW_END ';'
   22             | KW_IF expression KW_THEN statement KW_ELSE . KW_BEGIN statement_list KW_END ';'
   23             | . KW_IF expression KW_THEN KW_BEGIN statement_list KW_END ';' KW_ELSE statement
   24 while_statement: . KW_WHILE expression KW_DO KW_BEGIN statement_list KW_END ';'
   25                | . KW_REPEAT KW_BEGIN statement_list KW_END ';' KW_UNTIL expression
   26                | . KW_WHILE expression KW_DO statement
   27                | . KW_REPEAT statement KW_UNTIL expression
   28 for_statement: . KW_FOR IDENT ASSIGN expression KW_TO expression KW_DO KW_BEGIN statement_list KW_END ';'
   29              | . KW_FOR IDENT ASSIGN expression KW_DOWNTO expression KW_DO KW_BEGIN statement_list KW_END ';'
   30              | . KW_FOR IDENT ASSIGN expression KW_TO expression KW_DO statement
   31              | . KW_FOR IDENT ASSIGN expression KW_DOWNTO expression KW_DO statement
   32 label_decl: . IDENT ':' label_body
   42 goto_statement: . KW_GOTO IDENT ';'
   43 proc_call: . IDENT '(' arguments ')'
  108 assignment: . IDENT ASSIGN expression ';'
  109           | . KW_RESULT ASSIGN expression ';'
  123 subprogram_def: . KW_FUNCTION IDENT '(' proc_def_arguments ')' ':' FuncReturnTypes ';' statement_list body ';'
  124               | . KW_PROCEDURE IDENT '(' proc_def_arguments ')' ';' statement_list body ';'
  132 type_def: . KW_TYPE type_def_body
  140 var_declaration: . KW_VAR names ':' basic_types var_decl_more
  141                | . KW_VAR names ':' ARRAY array_brackets KW_OF basic_types var_decl_more

    IDENT         shift, and go to state 6
    KW_BEGIN      shift, and go to state 260
    KW_FUNCTION   shift, and go to state 7
    KW_PROCEDURE  shift, and go to state 8
    KW_RESULT     shift, and go to state 9
    KW_GOTO       shift, and go to state 10
    KW_RETURN     shift, and go to state 11
    KW_IF         shift, and go to state 12
    KW_FOR        shift, and go to state 13
    KW_REPEAT     shift, and go to state 14
    KW_VAR        shift, and go to state 15
    KW_WHILE      shift, and go to state 16
    KW_TYPE       shift, and go to state 17

    statement        go to state 261
    loops            go to state 20
    if_statement     go to state 21
    while_statement  go to state 22
    for_statement    go to state 23
    label_decl       go to state 24
    goto_statement   go to state 25
    proc_call        go to state 26
    assignment       go to state 27
    subprogram_def   go to state 28
    type_def         go to state 29
    var_declaration  go to state 30


State 236

   28 for_statement: KW_FOR IDENT ASSIGN expression KW_TO . expression KW_DO KW_BEGIN statement_list KW_END ';'
   30              | KW_FOR IDENT ASSIGN expression KW_TO . expression KW_DO statement
   43 proc_call: . IDENT '(' arguments ')'
   47 casting: . '(' basic_types ')' expression
   48        | . '(' ARRAY array_brackets KW_OF basic_types ')' expression
   49 expression: . POSINT
   50           | . REAL
   51           | . arrays
   52           | . IDENT
   53           | . proc_call
   54           | . KW_RESULT
   55           | . STRING
   56           | . casting
   57           | . KW_TRUE
   58           | . KW_FALSE
   59           | . '+' expression
   60           | . '-' expression
   61           | . expression '*' expression
   62           | . expression '/' expression
   63           | . expression KW_DIV expression
   64           | . expression KW_MOD expression
   65           | . expression '+' expression
   66           | . expression '-' expression
   67           | . KW_NOT expression
   68           | . '!' expression
   69           | . expression '=' expression
   70           | . expression KW_DIFFERENT expression
   71           | . expression '<' expression
   72           | . expression '>' expression
   73           | . expression KW_LESS_OR_EQ expression
   74           | . expression KW_MORE_OR_EQ expression
   75           | . expression KW_AND expression
   76           | . expression KW_OR expression
   77           | . expression KW_AND_SYMB expression
   78           | . expression KW_OR_SYMB expression
   79           | . '(' in_brackets ')'
  120 arrays: . ARRAY array_brackets KW_OF basic_types

    IDENT      shift, and go to state 39
    POSINT     shift, and go to state 40
    REAL       shift, and go to state 41
    STRING     shift, and go to state 42
    KW_RESULT  shift, and go to state 43
    ARRAY      shift, and go to state 44
    KW_NOT     shift, and go to state 45
    KW_TRUE    shift, and go to state 46
    KW_FALSE   shift, and go to state 47
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '('        shift, and go to state 51

    proc_call   go to state 52
    casting     go to state 53
    expression  go to state 262
    arrays      go to state 55


State 237

   29 for_statement: KW_FOR IDENT ASSIGN expression KW_DOWNTO . expression KW_DO KW_BEGIN statement_list KW_END ';'
   31              | KW_FOR IDENT ASSIGN expression KW_DOWNTO . expression KW_DO statement
   43 proc_call: . IDENT '(' arguments ')'
   47 casting: . '(' basic_types ')' expression
   48        | . '(' ARRAY array_brackets KW_OF basic_types ')' expression
   49 expression: . POSINT
   50           | . REAL
   51           | . arrays
   52           | . IDENT
   53           | . proc_call
   54           | . KW_RESULT
   55           | . STRING
   56           | . casting
   57           | . KW_TRUE
   58           | . KW_FALSE
   59           | . '+' expression
   60           | . '-' expression
   61           | . expression '*' expression
   62           | . expression '/' expression
   63           | . expression KW_DIV expression
   64           | . expression KW_MOD expression
   65           | . expression '+' expression
   66           | . expression '-' expression
   67           | . KW_NOT expression
   68           | . '!' expression
   69           | . expression '=' expression
   70           | . expression KW_DIFFERENT expression
   71           | . expression '<' expression
   72           | . expression '>' expression
   73           | . expression KW_LESS_OR_EQ expression
   74           | . expression KW_MORE_OR_EQ expression
   75           | . expression KW_AND expression
   76           | . expression KW_OR expression
   77           | . expression KW_AND_SYMB expression
   78           | . expression KW_OR_SYMB expression
   79           | . '(' in_brackets ')'
  120 arrays: . ARRAY array_brackets KW_OF basic_types

    IDENT      shift, and go to state 39
    POSINT     shift, and go to state 40
    REAL       shift, and go to state 41
    STRING     shift, and go to state 42
    KW_RESULT  shift, and go to state 43
    ARRAY      shift, and go to state 44
    KW_NOT     shift, and go to state 45
    KW_TRUE    shift, and go to state 46
    KW_FALSE   shift, and go to state 47
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '('        shift, and go to state 51

    proc_call   go to state 52
    casting     go to state 53
    expression  go to state 263
    arrays      go to state 55


State 238

   25 while_statement: KW_REPEAT KW_BEGIN statement_list KW_END ';' . KW_UNTIL expression

    KW_UNTIL  shift, and go to state 264


State 239

  141 var_declaration: KW_VAR names ':' ARRAY array_brackets . KW_OF basic_types var_decl_more

    KW_OF  shift, and go to state 265


State 240

  142 var_decl_more: ';' . names ':' basic_types var_decl_more
  143              | ';' . names ':' ARRAY array_brackets KW_OF basic_types var_decl_more
  144              | ';' .  [KW_BEGIN, KW_END, KW_FUNCTION, KW_PROCEDURE, KW_RESULT, KW_GOTO, KW_RETURN, KW_ELSE, KW_IF, KW_FOR, KW_REPEAT, KW_UNTIL, KW_VAR, KW_WHILE, KW_TYPE, ';']
  145 names: . IDENT
  146      | . IDENT ',' names

    IDENT  shift, and go to state 59

    $default  reduce using rule 144 (var_decl_more)

    names  go to state 266

    Conflict between rule 144 and token IDENT resolved as shift (';' < IDENT).


State 241

  140 var_declaration: KW_VAR names ':' basic_types var_decl_more .

    $default  reduce using rule 140 (var_declaration)


State 242

   24 while_statement: KW_WHILE expression KW_DO KW_BEGIN statement_list . KW_END ';'

    KW_END  shift, and go to state 267


State 243

  115 proc_def_arg_main: . names ':' ARRAY KW_OF basic_types
  116                  | . names ':' basic_types
  117 proc_def_arguments: . %empty  [')']
  118                   | . proc_def_arg_main
  119                   | . proc_def_arg_main ';' proc_def_arguments
  134 type_def_body: IDENT '=' KW_FUNCTION '(' . proc_def_arguments ')' ':' FuncReturnTypes after_type_def
  145 names: . IDENT
  146      | . IDENT ',' names

    IDENT  shift, and go to state 59

    $default  reduce using rule 117 (proc_def_arguments)

    proc_def_arg_main   go to state 143
    proc_def_arguments  go to state 268
    names               go to state 145


State 244

  127 array_arg: . POSINT
  128          | . array_arg '+' array_arg
  129          | . array_arg '-' array_arg
  130          | . array_arg '*' array_arg
  131          | . array_arg '/' array_arg
  137 typedef_array_brackets: '[' . array_arg ']' typedef_array_brackets

    POSINT  shift, and go to state 148

    array_arg  go to state 269


State 245

  135 type_def_body: IDENT '=' ARRAY typedef_array_brackets . KW_OF basic_types after_type_def

    KW_OF  shift, and go to state 270


State 246

  133 type_def_body: . IDENT '=' basic_types after_type_def
  134              | . IDENT '=' KW_FUNCTION '(' proc_def_arguments ')' ':' FuncReturnTypes after_type_def
  135              | . IDENT '=' ARRAY typedef_array_brackets KW_OF basic_types after_type_def
  138 after_type_def: ';' . type_def_body
  139               | ';' .  [KW_BEGIN, KW_END, KW_FUNCTION, KW_PROCEDURE, KW_RESULT, KW_GOTO, KW_RETURN, KW_ELSE, KW_IF, KW_FOR, KW_REPEAT, KW_UNTIL, KW_VAR, KW_WHILE, KW_TYPE, ';']

    IDENT  shift, and go to state 62

    $default  reduce using rule 139 (after_type_def)

    type_def_body  go to state 271

    Conflict between rule 139 and token IDENT resolved as shift (';' < IDENT).


State 247

  133 type_def_body: IDENT '=' basic_types after_type_def .

    $default  reduce using rule 133 (type_def_body)


State 248

  119 proc_def_arguments: proc_def_arg_main ';' proc_def_arguments .

    $default  reduce using rule 119 (proc_def_arguments)


State 249

  110 basic_types: . KW_BOOLEAN
  111            | . KW_INTEGER
  112            | . KW_REAL
  113            | . KW_CHAR
  114            | . IDENT
  120 arrays: . ARRAY array_brackets KW_OF basic_types
  123 subprogram_def: KW_FUNCTION IDENT '(' proc_def_arguments ')' ':' . FuncReturnTypes ';' statement_list body ';'
  125 FuncReturnTypes: . basic_types
  126                | . arrays

    IDENT       shift, and go to state 196
    ARRAY       shift, and go to state 44
    KW_BOOLEAN  shift, and go to state 98
    KW_REAL     shift, and go to state 99
    KW_CHAR     shift, and go to state 100
    KW_INTEGER  shift, and go to state 101

    basic_types      go to state 272
    arrays           go to state 273
    FuncReturnTypes  go to state 274


State 250

  115 proc_def_arg_main: names ':' ARRAY . KW_OF basic_types

    KW_OF  shift, and go to state 275


State 251

  116 proc_def_arg_main: names ':' basic_types .

    $default  reduce using rule 116 (proc_def_arg_main)


State 252

    4 statement_list: . %empty  [KW_BEGIN]
    5               | . statement statement_list
    6 statement: . subprogram_def
    7          | . proc_call ';'
    8          | . label_decl
    9          | . goto_statement
   10          | . assignment
   11          | . KW_RETURN
   12          | . type_def
   13          | . var_declaration
   14          | . loops
   15 loops: . if_statement
   16      | . for_statement
   17      | . while_statement
   18 if_statement: . KW_IF expression KW_THEN KW_BEGIN statement_list KW_END ';'
   19             | . KW_IF expression KW_THEN KW_BEGIN statement_list KW_END ';' KW_ELSE KW_BEGIN statement_list KW_END ';'
   20             | . KW_IF expression KW_THEN statement
   21             | . KW_IF expression KW_THEN statement KW_ELSE statement
   22             | . KW_IF expression KW_THEN statement KW_ELSE KW_BEGIN statement_list KW_END ';'
   23             | . KW_IF expression KW_THEN KW_BEGIN statement_list KW_END ';' KW_ELSE statement
   24 while_statement: . KW_WHILE expression KW_DO KW_BEGIN statement_list KW_END ';'
   25                | . KW_REPEAT KW_BEGIN statement_list KW_END ';' KW_UNTIL expression
   26                | . KW_WHILE expression KW_DO statement
   27                | . KW_REPEAT statement KW_UNTIL expression
   28 for_statement: . KW_FOR IDENT ASSIGN expression KW_TO expression KW_DO KW_BEGIN statement_list KW_END ';'
   29              | . KW_FOR IDENT ASSIGN expression KW_DOWNTO expression KW_DO KW_BEGIN statement_list KW_END ';'
   30              | . KW_FOR IDENT ASSIGN expression KW_TO expression KW_DO statement
   31              | . KW_FOR IDENT ASSIGN expression KW_DOWNTO expression KW_DO statement
   32 label_decl: . IDENT ':' label_body
   42 goto_statement: . KW_GOTO IDENT ';'
   43 proc_call: . IDENT '(' arguments ')'
  108 assignment: . IDENT ASSIGN expression ';'
  109           | . KW_RESULT ASSIGN expression ';'
  123 subprogram_def: . KW_FUNCTION IDENT '(' proc_def_arguments ')' ':' FuncReturnTypes ';' statement_list body ';'
  124               | . KW_PROCEDURE IDENT '(' proc_def_arguments ')' ';' statement_list body ';'
  124               | KW_PROCEDURE IDENT '(' proc_def_arguments ')' ';' . statement_list body ';'
  132 type_def: . KW_TYPE type_def_body
  140 var_declaration: . KW_VAR names ':' basic_types var_decl_more
  141                | . KW_VAR names ':' ARRAY array_brackets KW_OF basic_types var_decl_more

    IDENT         shift, and go to state 6
    KW_FUNCTION   shift, and go to state 7
    KW_PROCEDURE  shift, and go to state 8
    KW_RESULT     shift, and go to state 9
    KW_GOTO       shift, and go to state 10
    KW_RETURN     shift, and go to state 11
    KW_IF         shift, and go to state 12
    KW_FOR        shift, and go to state 13
    KW_REPEAT     shift, and go to state 14
    KW_VAR        shift, and go to state 15
    KW_WHILE      shift, and go to state 16
    KW_TYPE       shift, and go to state 17

    $default  reduce using rule 4 (statement_list)

    statement_list   go to state 276
    statement        go to state 19
    loops            go to state 20
    if_statement     go to state 21
    while_statement  go to state 22
    for_statement    go to state 23
    label_decl       go to state 24
    goto_statement   go to state 25
    proc_call        go to state 26
    assignment       go to state 27
    subprogram_def   go to state 28
    type_def         go to state 29
    var_declaration  go to state 30


State 253

  128 array_arg: array_arg . '+' array_arg
  128          | array_arg '+' array_arg .  ['+', '-', ']']
  129          | array_arg . '-' array_arg
  130          | array_arg . '*' array_arg
  131          | array_arg . '/' array_arg

    '*'  shift, and go to state 212
    '/'  shift, and go to state 213

    $default  reduce using rule 128 (array_arg)

    Conflict between rule 128 and token '+' resolved as reduce (%left '+').
    Conflict between rule 128 and token '-' resolved as reduce (%left '-').
    Conflict between rule 128 and token '*' resolved as shift ('+' < '*').
    Conflict between rule 128 and token '/' resolved as shift ('+' < '/').


State 254

  128 array_arg: array_arg . '+' array_arg
  129          | array_arg . '-' array_arg
  129          | array_arg '-' array_arg .  ['+', '-', ']']
  130          | array_arg . '*' array_arg
  131          | array_arg . '/' array_arg

    '*'  shift, and go to state 212
    '/'  shift, and go to state 213

    $default  reduce using rule 129 (array_arg)

    Conflict between rule 129 and token '+' resolved as reduce (%left '+').
    Conflict between rule 129 and token '-' resolved as reduce (%left '-').
    Conflict between rule 129 and token '*' resolved as shift ('-' < '*').
    Conflict between rule 129 and token '/' resolved as shift ('-' < '/').


State 255

  128 array_arg: array_arg . '+' array_arg
  129          | array_arg . '-' array_arg
  130          | array_arg . '*' array_arg
  130          | array_arg '*' array_arg .  ['+', '-', '*', '/', ']']
  131          | array_arg . '/' array_arg

    $default  reduce using rule 130 (array_arg)

    Conflict between rule 130 and token '+' resolved as reduce ('+' < '*').
    Conflict between rule 130 and token '-' resolved as reduce ('-' < '*').
    Conflict between rule 130 and token '*' resolved as reduce (%left '*').
    Conflict between rule 130 and token '/' resolved as reduce (%left '/').


State 256

  128 array_arg: array_arg . '+' array_arg
  129          | array_arg . '-' array_arg
  130          | array_arg . '*' array_arg
  131          | array_arg . '/' array_arg
  131          | array_arg '/' array_arg .  ['+', '-', '*', '/', ']']

    $default  reduce using rule 131 (array_arg)

    Conflict between rule 131 and token '+' resolved as reduce ('+' < '/').
    Conflict between rule 131 and token '-' resolved as reduce ('-' < '/').
    Conflict between rule 131 and token '*' resolved as reduce (%left '*').
    Conflict between rule 131 and token '/' resolved as reduce (%left '/').


State 257

  122 array_brackets: '[' array_arg ']' array_brackets .

    $default  reduce using rule 122 (array_brackets)


State 258

   48 casting: '(' ARRAY array_brackets KW_OF basic_types . ')' expression
  120 arrays: ARRAY array_brackets KW_OF basic_types .  [KW_AND, KW_DIV, KW_MOD, KW_OR, KW_DIFFERENT, KW_LESS_OR_EQ, KW_MORE_OR_EQ, KW_AND_SYMB, KW_OR_SYMB, '<', '>', '=', '+', '-', '*', '/']

    ')'  shift, and go to state 277

    $default  reduce using rule 120 (arrays)


State 259

   18 if_statement: KW_IF expression KW_THEN KW_BEGIN statement_list KW_END . ';'
   19             | KW_IF expression KW_THEN KW_BEGIN statement_list KW_END . ';' KW_ELSE KW_BEGIN statement_list KW_END ';'
   23             | KW_IF expression KW_THEN KW_BEGIN statement_list KW_END . ';' KW_ELSE statement

    ';'  shift, and go to state 278


State 260

    4 statement_list: . %empty  [KW_END]
    5               | . statement statement_list
    6 statement: . subprogram_def
    7          | . proc_call ';'
    8          | . label_decl
    9          | . goto_statement
   10          | . assignment
   11          | . KW_RETURN
   12          | . type_def
   13          | . var_declaration
   14          | . loops
   15 loops: . if_statement
   16      | . for_statement
   17      | . while_statement
   18 if_statement: . KW_IF expression KW_THEN KW_BEGIN statement_list KW_END ';'
   19             | . KW_IF expression KW_THEN KW_BEGIN statement_list KW_END ';' KW_ELSE KW_BEGIN statement_list KW_END ';'
   20             | . KW_IF expression KW_THEN statement
   21             | . KW_IF expression KW_THEN statement KW_ELSE statement
   22             | . KW_IF expression KW_THEN statement KW_ELSE KW_BEGIN statement_list KW_END ';'
   22             | KW_IF expression KW_THEN statement KW_ELSE KW_BEGIN . statement_list KW_END ';'
   23             | . KW_IF expression KW_THEN KW_BEGIN statement_list KW_END ';' KW_ELSE statement
   24 while_statement: . KW_WHILE expression KW_DO KW_BEGIN statement_list KW_END ';'
   25                | . KW_REPEAT KW_BEGIN statement_list KW_END ';' KW_UNTIL expression
   26                | . KW_WHILE expression KW_DO statement
   27                | . KW_REPEAT statement KW_UNTIL expression
   28 for_statement: . KW_FOR IDENT ASSIGN expression KW_TO expression KW_DO KW_BEGIN statement_list KW_END ';'
   29              | . KW_FOR IDENT ASSIGN expression KW_DOWNTO expression KW_DO KW_BEGIN statement_list KW_END ';'
   30              | . KW_FOR IDENT ASSIGN expression KW_TO expression KW_DO statement
   31              | . KW_FOR IDENT ASSIGN expression KW_DOWNTO expression KW_DO statement
   32 label_decl: . IDENT ':' label_body
   42 goto_statement: . KW_GOTO IDENT ';'
   43 proc_call: . IDENT '(' arguments ')'
  108 assignment: . IDENT ASSIGN expression ';'
  109           | . KW_RESULT ASSIGN expression ';'
  123 subprogram_def: . KW_FUNCTION IDENT '(' proc_def_arguments ')' ':' FuncReturnTypes ';' statement_list body ';'
  124               | . KW_PROCEDURE IDENT '(' proc_def_arguments ')' ';' statement_list body ';'
  132 type_def: . KW_TYPE type_def_body
  140 var_declaration: . KW_VAR names ':' basic_types var_decl_more
  141                | . KW_VAR names ':' ARRAY array_brackets KW_OF basic_types var_decl_more

    IDENT         shift, and go to state 6
    KW_FUNCTION   shift, and go to state 7
    KW_PROCEDURE  shift, and go to state 8
    KW_RESULT     shift, and go to state 9
    KW_GOTO       shift, and go to state 10
    KW_RETURN     shift, and go to state 11
    KW_IF         shift, and go to state 12
    KW_FOR        shift, and go to state 13
    KW_REPEAT     shift, and go to state 14
    KW_VAR        shift, and go to state 15
    KW_WHILE      shift, and go to state 16
    KW_TYPE       shift, and go to state 17

    $default  reduce using rule 4 (statement_list)

    statement_list   go to state 279
    statement        go to state 19
    loops            go to state 20
    if_statement     go to state 21
    while_statement  go to state 22
    for_statement    go to state 23
    label_decl       go to state 24
    goto_statement   go to state 25
    proc_call        go to state 26
    assignment       go to state 27
    subprogram_def   go to state 28
    type_def         go to state 29
    var_declaration  go to state 30


State 261

   21 if_statement: KW_IF expression KW_THEN statement KW_ELSE statement .

    $default  reduce using rule 21 (if_statement)


State 262

   28 for_statement: KW_FOR IDENT ASSIGN expression KW_TO expression . KW_DO KW_BEGIN statement_list KW_END ';'
   30              | KW_FOR IDENT ASSIGN expression KW_TO expression . KW_DO statement
   61 expression: expression . '*' expression
   62           | expression . '/' expression
   63           | expression . KW_DIV expression
   64           | expression . KW_MOD expression
   65           | expression . '+' expression
   66           | expression . '-' expression
   69           | expression . '=' expression
   70           | expression . KW_DIFFERENT expression
   71           | expression . '<' expression
   72           | expression . '>' expression
   73           | expression . KW_LESS_OR_EQ expression
   74           | expression . KW_MORE_OR_EQ expression
   75           | expression . KW_AND expression
   76           | expression . KW_OR expression
   77           | expression . KW_AND_SYMB expression
   78           | expression . KW_OR_SYMB expression

    KW_AND         shift, and go to state 112
    KW_DIV         shift, and go to state 113
    KW_MOD         shift, and go to state 114
    KW_DO          shift, and go to state 280
    KW_OR          shift, and go to state 116
    KW_DIFFERENT   shift, and go to state 117
    KW_LESS_OR_EQ  shift, and go to state 118
    KW_MORE_OR_EQ  shift, and go to state 119
    KW_AND_SYMB    shift, and go to state 120
    KW_OR_SYMB     shift, and go to state 121
    '<'            shift, and go to state 122
    '>'            shift, and go to state 123
    '='            shift, and go to state 124
    '+'            shift, and go to state 125
    '-'            shift, and go to state 126
    '*'            shift, and go to state 127
    '/'            shift, and go to state 128


State 263

   29 for_statement: KW_FOR IDENT ASSIGN expression KW_DOWNTO expression . KW_DO KW_BEGIN statement_list KW_END ';'
   31              | KW_FOR IDENT ASSIGN expression KW_DOWNTO expression . KW_DO statement
   61 expression: expression . '*' expression
   62           | expression . '/' expression
   63           | expression . KW_DIV expression
   64           | expression . KW_MOD expression
   65           | expression . '+' expression
   66           | expression . '-' expression
   69           | expression . '=' expression
   70           | expression . KW_DIFFERENT expression
   71           | expression . '<' expression
   72           | expression . '>' expression
   73           | expression . KW_LESS_OR_EQ expression
   74           | expression . KW_MORE_OR_EQ expression
   75           | expression . KW_AND expression
   76           | expression . KW_OR expression
   77           | expression . KW_AND_SYMB expression
   78           | expression . KW_OR_SYMB expression

    KW_AND         shift, and go to state 112
    KW_DIV         shift, and go to state 113
    KW_MOD         shift, and go to state 114
    KW_DO          shift, and go to state 281
    KW_OR          shift, and go to state 116
    KW_DIFFERENT   shift, and go to state 117
    KW_LESS_OR_EQ  shift, and go to state 118
    KW_MORE_OR_EQ  shift, and go to state 119
    KW_AND_SYMB    shift, and go to state 120
    KW_OR_SYMB     shift, and go to state 121
    '<'            shift, and go to state 122
    '>'            shift, and go to state 123
    '='            shift, and go to state 124
    '+'            shift, and go to state 125
    '-'            shift, and go to state 126
    '*'            shift, and go to state 127
    '/'            shift, and go to state 128


State 264

   25 while_statement: KW_REPEAT KW_BEGIN statement_list KW_END ';' KW_UNTIL . expression
   43 proc_call: . IDENT '(' arguments ')'
   47 casting: . '(' basic_types ')' expression
   48        | . '(' ARRAY array_brackets KW_OF basic_types ')' expression
   49 expression: . POSINT
   50           | . REAL
   51           | . arrays
   52           | . IDENT
   53           | . proc_call
   54           | . KW_RESULT
   55           | . STRING
   56           | . casting
   57           | . KW_TRUE
   58           | . KW_FALSE
   59           | . '+' expression
   60           | . '-' expression
   61           | . expression '*' expression
   62           | . expression '/' expression
   63           | . expression KW_DIV expression
   64           | . expression KW_MOD expression
   65           | . expression '+' expression
   66           | . expression '-' expression
   67           | . KW_NOT expression
   68           | . '!' expression
   69           | . expression '=' expression
   70           | . expression KW_DIFFERENT expression
   71           | . expression '<' expression
   72           | . expression '>' expression
   73           | . expression KW_LESS_OR_EQ expression
   74           | . expression KW_MORE_OR_EQ expression
   75           | . expression KW_AND expression
   76           | . expression KW_OR expression
   77           | . expression KW_AND_SYMB expression
   78           | . expression KW_OR_SYMB expression
   79           | . '(' in_brackets ')'
  120 arrays: . ARRAY array_brackets KW_OF basic_types

    IDENT      shift, and go to state 39
    POSINT     shift, and go to state 40
    REAL       shift, and go to state 41
    STRING     shift, and go to state 42
    KW_RESULT  shift, and go to state 43
    ARRAY      shift, and go to state 44
    KW_NOT     shift, and go to state 45
    KW_TRUE    shift, and go to state 46
    KW_FALSE   shift, and go to state 47
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '('        shift, and go to state 51

    proc_call   go to state 52
    casting     go to state 53
    expression  go to state 282
    arrays      go to state 55


State 265

  110 basic_types: . KW_BOOLEAN
  111            | . KW_INTEGER
  112            | . KW_REAL
  113            | . KW_CHAR
  114            | . IDENT
  141 var_declaration: KW_VAR names ':' ARRAY array_brackets KW_OF . basic_types var_decl_more

    IDENT       shift, and go to state 196
    KW_BOOLEAN  shift, and go to state 98
    KW_REAL     shift, and go to state 99
    KW_CHAR     shift, and go to state 100
    KW_INTEGER  shift, and go to state 101

    basic_types  go to state 283


State 266

  142 var_decl_more: ';' names . ':' basic_types var_decl_more
  143              | ';' names . ':' ARRAY array_brackets KW_OF basic_types var_decl_more

    ':'  shift, and go to state 284


State 267

   24 while_statement: KW_WHILE expression KW_DO KW_BEGIN statement_list KW_END . ';'

    ';'  shift, and go to state 285


State 268

  134 type_def_body: IDENT '=' KW_FUNCTION '(' proc_def_arguments . ')' ':' FuncReturnTypes after_type_def

    ')'  shift, and go to state 286


State 269

  128 array_arg: array_arg . '+' array_arg
  129          | array_arg . '-' array_arg
  130          | array_arg . '*' array_arg
  131          | array_arg . '/' array_arg
  137 typedef_array_brackets: '[' array_arg . ']' typedef_array_brackets

    '+'  shift, and go to state 210
    '-'  shift, and go to state 211
    '*'  shift, and go to state 212
    '/'  shift, and go to state 213
    ']'  shift, and go to state 287


State 270

  110 basic_types: . KW_BOOLEAN
  111            | . KW_INTEGER
  112            | . KW_REAL
  113            | . KW_CHAR
  114            | . IDENT
  135 type_def_body: IDENT '=' ARRAY typedef_array_brackets KW_OF . basic_types after_type_def

    IDENT       shift, and go to state 196
    KW_BOOLEAN  shift, and go to state 98
    KW_REAL     shift, and go to state 99
    KW_CHAR     shift, and go to state 100
    KW_INTEGER  shift, and go to state 101

    basic_types  go to state 288


State 271

  138 after_type_def: ';' type_def_body .

    $default  reduce using rule 138 (after_type_def)


State 272

  125 FuncReturnTypes: basic_types .

    $default  reduce using rule 125 (FuncReturnTypes)


State 273

  126 FuncReturnTypes: arrays .

    $default  reduce using rule 126 (FuncReturnTypes)


State 274

  123 subprogram_def: KW_FUNCTION IDENT '(' proc_def_arguments ')' ':' FuncReturnTypes . ';' statement_list body ';'

    ';'  shift, and go to state 289


State 275

  110 basic_types: . KW_BOOLEAN
  111            | . KW_INTEGER
  112            | . KW_REAL
  113            | . KW_CHAR
  114            | . IDENT
  115 proc_def_arg_main: names ':' ARRAY KW_OF . basic_types

    IDENT       shift, and go to state 196
    KW_BOOLEAN  shift, and go to state 98
    KW_REAL     shift, and go to state 99
    KW_CHAR     shift, and go to state 100
    KW_INTEGER  shift, and go to state 101

    basic_types  go to state 290


State 276

    3 body: . KW_BEGIN statement_list KW_END
  124 subprogram_def: KW_PROCEDURE IDENT '(' proc_def_arguments ')' ';' statement_list . body ';'

    KW_BEGIN  shift, and go to state 64

    body  go to state 291


State 277

   43 proc_call: . IDENT '(' arguments ')'
   47 casting: . '(' basic_types ')' expression
   48        | . '(' ARRAY array_brackets KW_OF basic_types ')' expression
   48        | '(' ARRAY array_brackets KW_OF basic_types ')' . expression
   49 expression: . POSINT
   50           | . REAL
   51           | . arrays
   52           | . IDENT
   53           | . proc_call
   54           | . KW_RESULT
   55           | . STRING
   56           | . casting
   57           | . KW_TRUE
   58           | . KW_FALSE
   59           | . '+' expression
   60           | . '-' expression
   61           | . expression '*' expression
   62           | . expression '/' expression
   63           | . expression KW_DIV expression
   64           | . expression KW_MOD expression
   65           | . expression '+' expression
   66           | . expression '-' expression
   67           | . KW_NOT expression
   68           | . '!' expression
   69           | . expression '=' expression
   70           | . expression KW_DIFFERENT expression
   71           | . expression '<' expression
   72           | . expression '>' expression
   73           | . expression KW_LESS_OR_EQ expression
   74           | . expression KW_MORE_OR_EQ expression
   75           | . expression KW_AND expression
   76           | . expression KW_OR expression
   77           | . expression KW_AND_SYMB expression
   78           | . expression KW_OR_SYMB expression
   79           | . '(' in_brackets ')'
  120 arrays: . ARRAY array_brackets KW_OF basic_types

    IDENT      shift, and go to state 39
    POSINT     shift, and go to state 40
    REAL       shift, and go to state 41
    STRING     shift, and go to state 42
    KW_RESULT  shift, and go to state 43
    ARRAY      shift, and go to state 44
    KW_NOT     shift, and go to state 45
    KW_TRUE    shift, and go to state 46
    KW_FALSE   shift, and go to state 47
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '('        shift, and go to state 51

    proc_call   go to state 52
    casting     go to state 53
    expression  go to state 292
    arrays      go to state 55


State 278

   18 if_statement: KW_IF expression KW_THEN KW_BEGIN statement_list KW_END ';' .  [IDENT, KW_BEGIN, KW_END, KW_FUNCTION, KW_PROCEDURE, KW_RESULT, KW_GOTO, KW_RETURN, KW_IF, KW_FOR, KW_REPEAT, KW_UNTIL, KW_VAR, KW_WHILE, KW_TYPE, ';']
   19             | KW_IF expression KW_THEN KW_BEGIN statement_list KW_END ';' . KW_ELSE KW_BEGIN statement_list KW_END ';'
   23             | KW_IF expression KW_THEN KW_BEGIN statement_list KW_END ';' . KW_ELSE statement

    KW_ELSE  shift, and go to state 293

    $default  reduce using rule 18 (if_statement)

    Conflict between rule 18 and token KW_ELSE resolved as shift (';' < KW_ELSE).


State 279

   22 if_statement: KW_IF expression KW_THEN statement KW_ELSE KW_BEGIN statement_list . KW_END ';'

    KW_END  shift, and go to state 294


State 280

    6 statement: . subprogram_def
    7          | . proc_call ';'
    8          | . label_decl
    9          | . goto_statement
   10          | . assignment
   11          | . KW_RETURN
   12          | . type_def
   13          | . var_declaration
   14          | . loops
   15 loops: . if_statement
   16      | . for_statement
   17      | . while_statement
   18 if_statement: . KW_IF expression KW_THEN KW_BEGIN statement_list KW_END ';'
   19             | . KW_IF expression KW_THEN KW_BEGIN statement_list KW_END ';' KW_ELSE KW_BEGIN statement_list KW_END ';'
   20             | . KW_IF expression KW_THEN statement
   21             | . KW_IF expression KW_THEN statement KW_ELSE statement
   22             | . KW_IF expression KW_THEN statement KW_ELSE KW_BEGIN statement_list KW_END ';'
   23             | . KW_IF expression KW_THEN KW_BEGIN statement_list KW_END ';' KW_ELSE statement
   24 while_statement: . KW_WHILE expression KW_DO KW_BEGIN statement_list KW_END ';'
   25                | . KW_REPEAT KW_BEGIN statement_list KW_END ';' KW_UNTIL expression
   26                | . KW_WHILE expression KW_DO statement
   27                | . KW_REPEAT statement KW_UNTIL expression
   28 for_statement: . KW_FOR IDENT ASSIGN expression KW_TO expression KW_DO KW_BEGIN statement_list KW_END ';'
   28              | KW_FOR IDENT ASSIGN expression KW_TO expression KW_DO . KW_BEGIN statement_list KW_END ';'
   29              | . KW_FOR IDENT ASSIGN expression KW_DOWNTO expression KW_DO KW_BEGIN statement_list KW_END ';'
   30              | . KW_FOR IDENT ASSIGN expression KW_TO expression KW_DO statement
   30              | KW_FOR IDENT ASSIGN expression KW_TO expression KW_DO . statement
   31              | . KW_FOR IDENT ASSIGN expression KW_DOWNTO expression KW_DO statement
   32 label_decl: . IDENT ':' label_body
   42 goto_statement: . KW_GOTO IDENT ';'
   43 proc_call: . IDENT '(' arguments ')'
  108 assignment: . IDENT ASSIGN expression ';'
  109           | . KW_RESULT ASSIGN expression ';'
  123 subprogram_def: . KW_FUNCTION IDENT '(' proc_def_arguments ')' ':' FuncReturnTypes ';' statement_list body ';'
  124               | . KW_PROCEDURE IDENT '(' proc_def_arguments ')' ';' statement_list body ';'
  132 type_def: . KW_TYPE type_def_body
  140 var_declaration: . KW_VAR names ':' basic_types var_decl_more
  141                | . KW_VAR names ':' ARRAY array_brackets KW_OF basic_types var_decl_more

    IDENT         shift, and go to state 6
    KW_BEGIN      shift, and go to state 295
    KW_FUNCTION   shift, and go to state 7
    KW_PROCEDURE  shift, and go to state 8
    KW_RESULT     shift, and go to state 9
    KW_GOTO       shift, and go to state 10
    KW_RETURN     shift, and go to state 11
    KW_IF         shift, and go to state 12
    KW_FOR        shift, and go to state 13
    KW_REPEAT     shift, and go to state 14
    KW_VAR        shift, and go to state 15
    KW_WHILE      shift, and go to state 16
    KW_TYPE       shift, and go to state 17

    statement        go to state 296
    loops            go to state 20
    if_statement     go to state 21
    while_statement  go to state 22
    for_statement    go to state 23
    label_decl       go to state 24
    goto_statement   go to state 25
    proc_call        go to state 26
    assignment       go to state 27
    subprogram_def   go to state 28
    type_def         go to state 29
    var_declaration  go to state 30


State 281

    6 statement: . subprogram_def
    7          | . proc_call ';'
    8          | . label_decl
    9          | . goto_statement
   10          | . assignment
   11          | . KW_RETURN
   12          | . type_def
   13          | . var_declaration
   14          | . loops
   15 loops: . if_statement
   16      | . for_statement
   17      | . while_statement
   18 if_statement: . KW_IF expression KW_THEN KW_BEGIN statement_list KW_END ';'
   19             | . KW_IF expression KW_THEN KW_BEGIN statement_list KW_END ';' KW_ELSE KW_BEGIN statement_list KW_END ';'
   20             | . KW_IF expression KW_THEN statement
   21             | . KW_IF expression KW_THEN statement KW_ELSE statement
   22             | . KW_IF expression KW_THEN statement KW_ELSE KW_BEGIN statement_list KW_END ';'
   23             | . KW_IF expression KW_THEN KW_BEGIN statement_list KW_END ';' KW_ELSE statement
   24 while_statement: . KW_WHILE expression KW_DO KW_BEGIN statement_list KW_END ';'
   25                | . KW_REPEAT KW_BEGIN statement_list KW_END ';' KW_UNTIL expression
   26                | . KW_WHILE expression KW_DO statement
   27                | . KW_REPEAT statement KW_UNTIL expression
   28 for_statement: . KW_FOR IDENT ASSIGN expression KW_TO expression KW_DO KW_BEGIN statement_list KW_END ';'
   29              | . KW_FOR IDENT ASSIGN expression KW_DOWNTO expression KW_DO KW_BEGIN statement_list KW_END ';'
   29              | KW_FOR IDENT ASSIGN expression KW_DOWNTO expression KW_DO . KW_BEGIN statement_list KW_END ';'
   30              | . KW_FOR IDENT ASSIGN expression KW_TO expression KW_DO statement
   31              | . KW_FOR IDENT ASSIGN expression KW_DOWNTO expression KW_DO statement
   31              | KW_FOR IDENT ASSIGN expression KW_DOWNTO expression KW_DO . statement
   32 label_decl: . IDENT ':' label_body
   42 goto_statement: . KW_GOTO IDENT ';'
   43 proc_call: . IDENT '(' arguments ')'
  108 assignment: . IDENT ASSIGN expression ';'
  109           | . KW_RESULT ASSIGN expression ';'
  123 subprogram_def: . KW_FUNCTION IDENT '(' proc_def_arguments ')' ':' FuncReturnTypes ';' statement_list body ';'
  124               | . KW_PROCEDURE IDENT '(' proc_def_arguments ')' ';' statement_list body ';'
  132 type_def: . KW_TYPE type_def_body
  140 var_declaration: . KW_VAR names ':' basic_types var_decl_more
  141                | . KW_VAR names ':' ARRAY array_brackets KW_OF basic_types var_decl_more

    IDENT         shift, and go to state 6
    KW_BEGIN      shift, and go to state 297
    KW_FUNCTION   shift, and go to state 7
    KW_PROCEDURE  shift, and go to state 8
    KW_RESULT     shift, and go to state 9
    KW_GOTO       shift, and go to state 10
    KW_RETURN     shift, and go to state 11
    KW_IF         shift, and go to state 12
    KW_FOR        shift, and go to state 13
    KW_REPEAT     shift, and go to state 14
    KW_VAR        shift, and go to state 15
    KW_WHILE      shift, and go to state 16
    KW_TYPE       shift, and go to state 17

    statement        go to state 298
    loops            go to state 20
    if_statement     go to state 21
    while_statement  go to state 22
    for_statement    go to state 23
    label_decl       go to state 24
    goto_statement   go to state 25
    proc_call        go to state 26
    assignment       go to state 27
    subprogram_def   go to state 28
    type_def         go to state 29
    var_declaration  go to state 30


State 282

   25 while_statement: KW_REPEAT KW_BEGIN statement_list KW_END ';' KW_UNTIL expression .  [IDENT, KW_BEGIN, KW_END, KW_FUNCTION, KW_PROCEDURE, KW_RESULT, KW_GOTO, KW_RETURN, KW_ELSE, KW_IF, KW_FOR, KW_REPEAT, KW_UNTIL, KW_VAR, KW_WHILE, KW_TYPE, ';']
   61 expression: expression . '*' expression
   62           | expression . '/' expression
   63           | expression . KW_DIV expression
   64           | expression . KW_MOD expression
   65           | expression . '+' expression
   66           | expression . '-' expression
   69           | expression . '=' expression
   70           | expression . KW_DIFFERENT expression
   71           | expression . '<' expression
   72           | expression . '>' expression
   73           | expression . KW_LESS_OR_EQ expression
   74           | expression . KW_MORE_OR_EQ expression
   75           | expression . KW_AND expression
   76           | expression . KW_OR expression
   77           | expression . KW_AND_SYMB expression
   78           | expression . KW_OR_SYMB expression

    KW_AND         shift, and go to state 112
    KW_DIV         shift, and go to state 113
    KW_MOD         shift, and go to state 114
    KW_OR          shift, and go to state 116
    KW_DIFFERENT   shift, and go to state 117
    KW_LESS_OR_EQ  shift, and go to state 118
    KW_MORE_OR_EQ  shift, and go to state 119
    KW_AND_SYMB    shift, and go to state 120
    KW_OR_SYMB     shift, and go to state 121
    '<'            shift, and go to state 122
    '>'            shift, and go to state 123
    '='            shift, and go to state 124
    '+'            shift, and go to state 125
    '-'            shift, and go to state 126
    '*'            shift, and go to state 127
    '/'            shift, and go to state 128

    $default  reduce using rule 25 (while_statement)


State 283

  141 var_declaration: KW_VAR names ':' ARRAY array_brackets KW_OF basic_types . var_decl_more
  142 var_decl_more: . ';' names ':' basic_types var_decl_more
  143              | . ';' names ':' ARRAY array_brackets KW_OF basic_types var_decl_more
  144              | . ';'

    ';'  shift, and go to state 240

    var_decl_more  go to state 299


State 284

  110 basic_types: . KW_BOOLEAN
  111            | . KW_INTEGER
  112            | . KW_REAL
  113            | . KW_CHAR
  114            | . IDENT
  142 var_decl_more: ';' names ':' . basic_types var_decl_more
  143              | ';' names ':' . ARRAY array_brackets KW_OF basic_types var_decl_more

    IDENT       shift, and go to state 196
    ARRAY       shift, and go to state 300
    KW_BOOLEAN  shift, and go to state 98
    KW_REAL     shift, and go to state 99
    KW_CHAR     shift, and go to state 100
    KW_INTEGER  shift, and go to state 101

    basic_types  go to state 301


State 285

   24 while_statement: KW_WHILE expression KW_DO KW_BEGIN statement_list KW_END ';' .

    $default  reduce using rule 24 (while_statement)


State 286

  134 type_def_body: IDENT '=' KW_FUNCTION '(' proc_def_arguments ')' . ':' FuncReturnTypes after_type_def

    ':'  shift, and go to state 302


State 287

  136 typedef_array_brackets: . %empty  [KW_OF]
  137                       | . '[' array_arg ']' typedef_array_brackets
  137                       | '[' array_arg ']' . typedef_array_brackets

    '['  shift, and go to state 244

    $default  reduce using rule 136 (typedef_array_brackets)

    typedef_array_brackets  go to state 303


State 288

  135 type_def_body: IDENT '=' ARRAY typedef_array_brackets KW_OF basic_types . after_type_def
  138 after_type_def: . ';' type_def_body
  139               | . ';'

    ';'  shift, and go to state 246

    after_type_def  go to state 304


State 289

    4 statement_list: . %empty  [KW_BEGIN]
    5               | . statement statement_list
    6 statement: . subprogram_def
    7          | . proc_call ';'
    8          | . label_decl
    9          | . goto_statement
   10          | . assignment
   11          | . KW_RETURN
   12          | . type_def
   13          | . var_declaration
   14          | . loops
   15 loops: . if_statement
   16      | . for_statement
   17      | . while_statement
   18 if_statement: . KW_IF expression KW_THEN KW_BEGIN statement_list KW_END ';'
   19             | . KW_IF expression KW_THEN KW_BEGIN statement_list KW_END ';' KW_ELSE KW_BEGIN statement_list KW_END ';'
   20             | . KW_IF expression KW_THEN statement
   21             | . KW_IF expression KW_THEN statement KW_ELSE statement
   22             | . KW_IF expression KW_THEN statement KW_ELSE KW_BEGIN statement_list KW_END ';'
   23             | . KW_IF expression KW_THEN KW_BEGIN statement_list KW_END ';' KW_ELSE statement
   24 while_statement: . KW_WHILE expression KW_DO KW_BEGIN statement_list KW_END ';'
   25                | . KW_REPEAT KW_BEGIN statement_list KW_END ';' KW_UNTIL expression
   26                | . KW_WHILE expression KW_DO statement
   27                | . KW_REPEAT statement KW_UNTIL expression
   28 for_statement: . KW_FOR IDENT ASSIGN expression KW_TO expression KW_DO KW_BEGIN statement_list KW_END ';'
   29              | . KW_FOR IDENT ASSIGN expression KW_DOWNTO expression KW_DO KW_BEGIN statement_list KW_END ';'
   30              | . KW_FOR IDENT ASSIGN expression KW_TO expression KW_DO statement
   31              | . KW_FOR IDENT ASSIGN expression KW_DOWNTO expression KW_DO statement
   32 label_decl: . IDENT ':' label_body
   42 goto_statement: . KW_GOTO IDENT ';'
   43 proc_call: . IDENT '(' arguments ')'
  108 assignment: . IDENT ASSIGN expression ';'
  109           | . KW_RESULT ASSIGN expression ';'
  123 subprogram_def: . KW_FUNCTION IDENT '(' proc_def_arguments ')' ':' FuncReturnTypes ';' statement_list body ';'
  123               | KW_FUNCTION IDENT '(' proc_def_arguments ')' ':' FuncReturnTypes ';' . statement_list body ';'
  124               | . KW_PROCEDURE IDENT '(' proc_def_arguments ')' ';' statement_list body ';'
  132 type_def: . KW_TYPE type_def_body
  140 var_declaration: . KW_VAR names ':' basic_types var_decl_more
  141                | . KW_VAR names ':' ARRAY array_brackets KW_OF basic_types var_decl_more

    IDENT         shift, and go to state 6
    KW_FUNCTION   shift, and go to state 7
    KW_PROCEDURE  shift, and go to state 8
    KW_RESULT     shift, and go to state 9
    KW_GOTO       shift, and go to state 10
    KW_RETURN     shift, and go to state 11
    KW_IF         shift, and go to state 12
    KW_FOR        shift, and go to state 13
    KW_REPEAT     shift, and go to state 14
    KW_VAR        shift, and go to state 15
    KW_WHILE      shift, and go to state 16
    KW_TYPE       shift, and go to state 17

    $default  reduce using rule 4 (statement_list)

    statement_list   go to state 305
    statement        go to state 19
    loops            go to state 20
    if_statement     go to state 21
    while_statement  go to state 22
    for_statement    go to state 23
    label_decl       go to state 24
    goto_statement   go to state 25
    proc_call        go to state 26
    assignment       go to state 27
    subprogram_def   go to state 28
    type_def         go to state 29
    var_declaration  go to state 30


State 290

  115 proc_def_arg_main: names ':' ARRAY KW_OF basic_types .

    $default  reduce using rule 115 (proc_def_arg_main)


State 291

  124 subprogram_def: KW_PROCEDURE IDENT '(' proc_def_arguments ')' ';' statement_list body . ';'

    ';'  shift, and go to state 306


State 292

   48 casting: '(' ARRAY array_brackets KW_OF basic_types ')' expression .  [IDENT, KW_BEGIN, KW_END, KW_AND, KW_DIV, KW_FUNCTION, KW_MOD, KW_PROCEDURE, KW_RESULT, KW_DO, KW_GOTO, KW_RETURN, KW_ELSE, KW_IF, KW_THEN, KW_FOR, KW_OR, KW_REPEAT, KW_UNTIL, KW_VAR, KW_WHILE, KW_TO, KW_DOWNTO, KW_DIFFERENT, KW_LESS_OR_EQ, KW_MORE_OR_EQ, KW_AND_SYMB, KW_OR_SYMB, KW_TYPE, '<', '>', '=', '+', '-', '*', '/', ')', ';', ',']
   61 expression: expression . '*' expression
   62           | expression . '/' expression
   63           | expression . KW_DIV expression
   64           | expression . KW_MOD expression
   65           | expression . '+' expression
   66           | expression . '-' expression
   69           | expression . '=' expression
   70           | expression . KW_DIFFERENT expression
   71           | expression . '<' expression
   72           | expression . '>' expression
   73           | expression . KW_LESS_OR_EQ expression
   74           | expression . KW_MORE_OR_EQ expression
   75           | expression . KW_AND expression
   76           | expression . KW_OR expression
   77           | expression . KW_AND_SYMB expression
   78           | expression . KW_OR_SYMB expression

    $default  reduce using rule 48 (casting)

    Conflict between rule 48 and token KW_AND resolved as reduce (KW_AND < ')').
    Conflict between rule 48 and token KW_DIV resolved as reduce (KW_DIV < ')').
    Conflict between rule 48 and token KW_MOD resolved as reduce (KW_MOD < ')').
    Conflict between rule 48 and token KW_OR resolved as reduce (KW_OR < ')').
    Conflict between rule 48 and token KW_DIFFERENT resolved as reduce (KW_DIFFERENT < ')').
    Conflict between rule 48 and token KW_LESS_OR_EQ resolved as reduce (KW_LESS_OR_EQ < ')').
    Conflict between rule 48 and token KW_MORE_OR_EQ resolved as reduce (KW_MORE_OR_EQ < ')').
    Conflict between rule 48 and token KW_AND_SYMB resolved as reduce (KW_AND_SYMB < ')').
    Conflict between rule 48 and token KW_OR_SYMB resolved as reduce (KW_OR_SYMB < ')').
    Conflict between rule 48 and token '<' resolved as reduce ('<' < ')').
    Conflict between rule 48 and token '>' resolved as reduce ('>' < ')').
    Conflict between rule 48 and token '=' resolved as reduce ('=' < ')').
    Conflict between rule 48 and token '+' resolved as reduce ('+' < ')').
    Conflict between rule 48 and token '-' resolved as reduce ('-' < ')').
    Conflict between rule 48 and token '*' resolved as reduce ('*' < ')').
    Conflict between rule 48 and token '/' resolved as reduce ('/' < ')').


State 293

    6 statement: . subprogram_def
    7          | . proc_call ';'
    8          | . label_decl
    9          | . goto_statement
   10          | . assignment
   11          | . KW_RETURN
   12          | . type_def
   13          | . var_declaration
   14          | . loops
   15 loops: . if_statement
   16      | . for_statement
   17      | . while_statement
   18 if_statement: . KW_IF expression KW_THEN KW_BEGIN statement_list KW_END ';'
   19             | . KW_IF expression KW_THEN KW_BEGIN statement_list KW_END ';' KW_ELSE KW_BEGIN statement_list KW_END ';'
   19             | KW_IF expression KW_THEN KW_BEGIN statement_list KW_END ';' KW_ELSE . KW_BEGIN statement_list KW_END ';'
   20             | . KW_IF expression KW_THEN statement
   21             | . KW_IF expression KW_THEN statement KW_ELSE statement
   22             | . KW_IF expression KW_THEN statement KW_ELSE KW_BEGIN statement_list KW_END ';'
   23             | . KW_IF expression KW_THEN KW_BEGIN statement_list KW_END ';' KW_ELSE statement
   23             | KW_IF expression KW_THEN KW_BEGIN statement_list KW_END ';' KW_ELSE . statement
   24 while_statement: . KW_WHILE expression KW_DO KW_BEGIN statement_list KW_END ';'
   25                | . KW_REPEAT KW_BEGIN statement_list KW_END ';' KW_UNTIL expression
   26                | . KW_WHILE expression KW_DO statement
   27                | . KW_REPEAT statement KW_UNTIL expression
   28 for_statement: . KW_FOR IDENT ASSIGN expression KW_TO expression KW_DO KW_BEGIN statement_list KW_END ';'
   29              | . KW_FOR IDENT ASSIGN expression KW_DOWNTO expression KW_DO KW_BEGIN statement_list KW_END ';'
   30              | . KW_FOR IDENT ASSIGN expression KW_TO expression KW_DO statement
   31              | . KW_FOR IDENT ASSIGN expression KW_DOWNTO expression KW_DO statement
   32 label_decl: . IDENT ':' label_body
   42 goto_statement: . KW_GOTO IDENT ';'
   43 proc_call: . IDENT '(' arguments ')'
  108 assignment: . IDENT ASSIGN expression ';'
  109           | . KW_RESULT ASSIGN expression ';'
  123 subprogram_def: . KW_FUNCTION IDENT '(' proc_def_arguments ')' ':' FuncReturnTypes ';' statement_list body ';'
  124               | . KW_PROCEDURE IDENT '(' proc_def_arguments ')' ';' statement_list body ';'
  132 type_def: . KW_TYPE type_def_body
  140 var_declaration: . KW_VAR names ':' basic_types var_decl_more
  141                | . KW_VAR names ':' ARRAY array_brackets KW_OF basic_types var_decl_more

    IDENT         shift, and go to state 6
    KW_BEGIN      shift, and go to state 307
    KW_FUNCTION   shift, and go to state 7
    KW_PROCEDURE  shift, and go to state 8
    KW_RESULT     shift, and go to state 9
    KW_GOTO       shift, and go to state 10
    KW_RETURN     shift, and go to state 11
    KW_IF         shift, and go to state 12
    KW_FOR        shift, and go to state 13
    KW_REPEAT     shift, and go to state 14
    KW_VAR        shift, and go to state 15
    KW_WHILE      shift, and go to state 16
    KW_TYPE       shift, and go to state 17

    statement        go to state 308
    loops            go to state 20
    if_statement     go to state 21
    while_statement  go to state 22
    for_statement    go to state 23
    label_decl       go to state 24
    goto_statement   go to state 25
    proc_call        go to state 26
    assignment       go to state 27
    subprogram_def   go to state 28
    type_def         go to state 29
    var_declaration  go to state 30


State 294

   22 if_statement: KW_IF expression KW_THEN statement KW_ELSE KW_BEGIN statement_list KW_END . ';'

    ';'  shift, and go to state 309


State 295

    4 statement_list: . %empty  [KW_END]
    5               | . statement statement_list
    6 statement: . subprogram_def
    7          | . proc_call ';'
    8          | . label_decl
    9          | . goto_statement
   10          | . assignment
   11          | . KW_RETURN
   12          | . type_def
   13          | . var_declaration
   14          | . loops
   15 loops: . if_statement
   16      | . for_statement
   17      | . while_statement
   18 if_statement: . KW_IF expression KW_THEN KW_BEGIN statement_list KW_END ';'
   19             | . KW_IF expression KW_THEN KW_BEGIN statement_list KW_END ';' KW_ELSE KW_BEGIN statement_list KW_END ';'
   20             | . KW_IF expression KW_THEN statement
   21             | . KW_IF expression KW_THEN statement KW_ELSE statement
   22             | . KW_IF expression KW_THEN statement KW_ELSE KW_BEGIN statement_list KW_END ';'
   23             | . KW_IF expression KW_THEN KW_BEGIN statement_list KW_END ';' KW_ELSE statement
   24 while_statement: . KW_WHILE expression KW_DO KW_BEGIN statement_list KW_END ';'
   25                | . KW_REPEAT KW_BEGIN statement_list KW_END ';' KW_UNTIL expression
   26                | . KW_WHILE expression KW_DO statement
   27                | . KW_REPEAT statement KW_UNTIL expression
   28 for_statement: . KW_FOR IDENT ASSIGN expression KW_TO expression KW_DO KW_BEGIN statement_list KW_END ';'
   28              | KW_FOR IDENT ASSIGN expression KW_TO expression KW_DO KW_BEGIN . statement_list KW_END ';'
   29              | . KW_FOR IDENT ASSIGN expression KW_DOWNTO expression KW_DO KW_BEGIN statement_list KW_END ';'
   30              | . KW_FOR IDENT ASSIGN expression KW_TO expression KW_DO statement
   31              | . KW_FOR IDENT ASSIGN expression KW_DOWNTO expression KW_DO statement
   32 label_decl: . IDENT ':' label_body
   42 goto_statement: . KW_GOTO IDENT ';'
   43 proc_call: . IDENT '(' arguments ')'
  108 assignment: . IDENT ASSIGN expression ';'
  109           | . KW_RESULT ASSIGN expression ';'
  123 subprogram_def: . KW_FUNCTION IDENT '(' proc_def_arguments ')' ':' FuncReturnTypes ';' statement_list body ';'
  124               | . KW_PROCEDURE IDENT '(' proc_def_arguments ')' ';' statement_list body ';'
  132 type_def: . KW_TYPE type_def_body
  140 var_declaration: . KW_VAR names ':' basic_types var_decl_more
  141                | . KW_VAR names ':' ARRAY array_brackets KW_OF basic_types var_decl_more

    IDENT         shift, and go to state 6
    KW_FUNCTION   shift, and go to state 7
    KW_PROCEDURE  shift, and go to state 8
    KW_RESULT     shift, and go to state 9
    KW_GOTO       shift, and go to state 10
    KW_RETURN     shift, and go to state 11
    KW_IF         shift, and go to state 12
    KW_FOR        shift, and go to state 13
    KW_REPEAT     shift, and go to state 14
    KW_VAR        shift, and go to state 15
    KW_WHILE      shift, and go to state 16
    KW_TYPE       shift, and go to state 17

    $default  reduce using rule 4 (statement_list)

    statement_list   go to state 310
    statement        go to state 19
    loops            go to state 20
    if_statement     go to state 21
    while_statement  go to state 22
    for_statement    go to state 23
    label_decl       go to state 24
    goto_statement   go to state 25
    proc_call        go to state 26
    assignment       go to state 27
    subprogram_def   go to state 28
    type_def         go to state 29
    var_declaration  go to state 30


State 296

   30 for_statement: KW_FOR IDENT ASSIGN expression KW_TO expression KW_DO statement .

    $default  reduce using rule 30 (for_statement)


State 297

    4 statement_list: . %empty  [KW_END]
    5               | . statement statement_list
    6 statement: . subprogram_def
    7          | . proc_call ';'
    8          | . label_decl
    9          | . goto_statement
   10          | . assignment
   11          | . KW_RETURN
   12          | . type_def
   13          | . var_declaration
   14          | . loops
   15 loops: . if_statement
   16      | . for_statement
   17      | . while_statement
   18 if_statement: . KW_IF expression KW_THEN KW_BEGIN statement_list KW_END ';'
   19             | . KW_IF expression KW_THEN KW_BEGIN statement_list KW_END ';' KW_ELSE KW_BEGIN statement_list KW_END ';'
   20             | . KW_IF expression KW_THEN statement
   21             | . KW_IF expression KW_THEN statement KW_ELSE statement
   22             | . KW_IF expression KW_THEN statement KW_ELSE KW_BEGIN statement_list KW_END ';'
   23             | . KW_IF expression KW_THEN KW_BEGIN statement_list KW_END ';' KW_ELSE statement
   24 while_statement: . KW_WHILE expression KW_DO KW_BEGIN statement_list KW_END ';'
   25                | . KW_REPEAT KW_BEGIN statement_list KW_END ';' KW_UNTIL expression
   26                | . KW_WHILE expression KW_DO statement
   27                | . KW_REPEAT statement KW_UNTIL expression
   28 for_statement: . KW_FOR IDENT ASSIGN expression KW_TO expression KW_DO KW_BEGIN statement_list KW_END ';'
   29              | . KW_FOR IDENT ASSIGN expression KW_DOWNTO expression KW_DO KW_BEGIN statement_list KW_END ';'
   29              | KW_FOR IDENT ASSIGN expression KW_DOWNTO expression KW_DO KW_BEGIN . statement_list KW_END ';'
   30              | . KW_FOR IDENT ASSIGN expression KW_TO expression KW_DO statement
   31              | . KW_FOR IDENT ASSIGN expression KW_DOWNTO expression KW_DO statement
   32 label_decl: . IDENT ':' label_body
   42 goto_statement: . KW_GOTO IDENT ';'
   43 proc_call: . IDENT '(' arguments ')'
  108 assignment: . IDENT ASSIGN expression ';'
  109           | . KW_RESULT ASSIGN expression ';'
  123 subprogram_def: . KW_FUNCTION IDENT '(' proc_def_arguments ')' ':' FuncReturnTypes ';' statement_list body ';'
  124               | . KW_PROCEDURE IDENT '(' proc_def_arguments ')' ';' statement_list body ';'
  132 type_def: . KW_TYPE type_def_body
  140 var_declaration: . KW_VAR names ':' basic_types var_decl_more
  141                | . KW_VAR names ':' ARRAY array_brackets KW_OF basic_types var_decl_more

    IDENT         shift, and go to state 6
    KW_FUNCTION   shift, and go to state 7
    KW_PROCEDURE  shift, and go to state 8
    KW_RESULT     shift, and go to state 9
    KW_GOTO       shift, and go to state 10
    KW_RETURN     shift, and go to state 11
    KW_IF         shift, and go to state 12
    KW_FOR        shift, and go to state 13
    KW_REPEAT     shift, and go to state 14
    KW_VAR        shift, and go to state 15
    KW_WHILE      shift, and go to state 16
    KW_TYPE       shift, and go to state 17

    $default  reduce using rule 4 (statement_list)

    statement_list   go to state 311
    statement        go to state 19
    loops            go to state 20
    if_statement     go to state 21
    while_statement  go to state 22
    for_statement    go to state 23
    label_decl       go to state 24
    goto_statement   go to state 25
    proc_call        go to state 26
    assignment       go to state 27
    subprogram_def   go to state 28
    type_def         go to state 29
    var_declaration  go to state 30


State 298

   31 for_statement: KW_FOR IDENT ASSIGN expression KW_DOWNTO expression KW_DO statement .

    $default  reduce using rule 31 (for_statement)


State 299

  141 var_declaration: KW_VAR names ':' ARRAY array_brackets KW_OF basic_types var_decl_more .

    $default  reduce using rule 141 (var_declaration)


State 300

  121 array_brackets: . %empty  [KW_OF]
  122               | . '[' array_arg ']' array_brackets
  143 var_decl_more: ';' names ':' ARRAY . array_brackets KW_OF basic_types var_decl_more

    '['  shift, and go to state 85

    $default  reduce using rule 121 (array_brackets)

    array_brackets  go to state 312


State 301

  142 var_decl_more: . ';' names ':' basic_types var_decl_more
  142              | ';' names ':' basic_types . var_decl_more
  143              | . ';' names ':' ARRAY array_brackets KW_OF basic_types var_decl_more
  144              | . ';'

    ';'  shift, and go to state 240

    var_decl_more  go to state 313


State 302

  110 basic_types: . KW_BOOLEAN
  111            | . KW_INTEGER
  112            | . KW_REAL
  113            | . KW_CHAR
  114            | . IDENT
  120 arrays: . ARRAY array_brackets KW_OF basic_types
  125 FuncReturnTypes: . basic_types
  126                | . arrays
  134 type_def_body: IDENT '=' KW_FUNCTION '(' proc_def_arguments ')' ':' . FuncReturnTypes after_type_def

    IDENT       shift, and go to state 196
    ARRAY       shift, and go to state 44
    KW_BOOLEAN  shift, and go to state 98
    KW_REAL     shift, and go to state 99
    KW_CHAR     shift, and go to state 100
    KW_INTEGER  shift, and go to state 101

    basic_types      go to state 272
    arrays           go to state 273
    FuncReturnTypes  go to state 314


State 303

  137 typedef_array_brackets: '[' array_arg ']' typedef_array_brackets .

    $default  reduce using rule 137 (typedef_array_brackets)


State 304

  135 type_def_body: IDENT '=' ARRAY typedef_array_brackets KW_OF basic_types after_type_def .

    $default  reduce using rule 135 (type_def_body)


State 305

    3 body: . KW_BEGIN statement_list KW_END
  123 subprogram_def: KW_FUNCTION IDENT '(' proc_def_arguments ')' ':' FuncReturnTypes ';' statement_list . body ';'

    KW_BEGIN  shift, and go to state 64

    body  go to state 315


State 306

  124 subprogram_def: KW_PROCEDURE IDENT '(' proc_def_arguments ')' ';' statement_list body ';' .

    $default  reduce using rule 124 (subprogram_def)


State 307

    4 statement_list: . %empty  [KW_END]
    5               | . statement statement_list
    6 statement: . subprogram_def
    7          | . proc_call ';'
    8          | . label_decl
    9          | . goto_statement
   10          | . assignment
   11          | . KW_RETURN
   12          | . type_def
   13          | . var_declaration
   14          | . loops
   15 loops: . if_statement
   16      | . for_statement
   17      | . while_statement
   18 if_statement: . KW_IF expression KW_THEN KW_BEGIN statement_list KW_END ';'
   19             | . KW_IF expression KW_THEN KW_BEGIN statement_list KW_END ';' KW_ELSE KW_BEGIN statement_list KW_END ';'
   19             | KW_IF expression KW_THEN KW_BEGIN statement_list KW_END ';' KW_ELSE KW_BEGIN . statement_list KW_END ';'
   20             | . KW_IF expression KW_THEN statement
   21             | . KW_IF expression KW_THEN statement KW_ELSE statement
   22             | . KW_IF expression KW_THEN statement KW_ELSE KW_BEGIN statement_list KW_END ';'
   23             | . KW_IF expression KW_THEN KW_BEGIN statement_list KW_END ';' KW_ELSE statement
   24 while_statement: . KW_WHILE expression KW_DO KW_BEGIN statement_list KW_END ';'
   25                | . KW_REPEAT KW_BEGIN statement_list KW_END ';' KW_UNTIL expression
   26                | . KW_WHILE expression KW_DO statement
   27                | . KW_REPEAT statement KW_UNTIL expression
   28 for_statement: . KW_FOR IDENT ASSIGN expression KW_TO expression KW_DO KW_BEGIN statement_list KW_END ';'
   29              | . KW_FOR IDENT ASSIGN expression KW_DOWNTO expression KW_DO KW_BEGIN statement_list KW_END ';'
   30              | . KW_FOR IDENT ASSIGN expression KW_TO expression KW_DO statement
   31              | . KW_FOR IDENT ASSIGN expression KW_DOWNTO expression KW_DO statement
   32 label_decl: . IDENT ':' label_body
   42 goto_statement: . KW_GOTO IDENT ';'
   43 proc_call: . IDENT '(' arguments ')'
  108 assignment: . IDENT ASSIGN expression ';'
  109           | . KW_RESULT ASSIGN expression ';'
  123 subprogram_def: . KW_FUNCTION IDENT '(' proc_def_arguments ')' ':' FuncReturnTypes ';' statement_list body ';'
  124               | . KW_PROCEDURE IDENT '(' proc_def_arguments ')' ';' statement_list body ';'
  132 type_def: . KW_TYPE type_def_body
  140 var_declaration: . KW_VAR names ':' basic_types var_decl_more
  141                | . KW_VAR names ':' ARRAY array_brackets KW_OF basic_types var_decl_more

    IDENT         shift, and go to state 6
    KW_FUNCTION   shift, and go to state 7
    KW_PROCEDURE  shift, and go to state 8
    KW_RESULT     shift, and go to state 9
    KW_GOTO       shift, and go to state 10
    KW_RETURN     shift, and go to state 11
    KW_IF         shift, and go to state 12
    KW_FOR        shift, and go to state 13
    KW_REPEAT     shift, and go to state 14
    KW_VAR        shift, and go to state 15
    KW_WHILE      shift, and go to state 16
    KW_TYPE       shift, and go to state 17

    $default  reduce using rule 4 (statement_list)

    statement_list   go to state 316
    statement        go to state 19
    loops            go to state 20
    if_statement     go to state 21
    while_statement  go to state 22
    for_statement    go to state 23
    label_decl       go to state 24
    goto_statement   go to state 25
    proc_call        go to state 26
    assignment       go to state 27
    subprogram_def   go to state 28
    type_def         go to state 29
    var_declaration  go to state 30


State 308

   23 if_statement: KW_IF expression KW_THEN KW_BEGIN statement_list KW_END ';' KW_ELSE statement .

    $default  reduce using rule 23 (if_statement)


State 309

   22 if_statement: KW_IF expression KW_THEN statement KW_ELSE KW_BEGIN statement_list KW_END ';' .

    $default  reduce using rule 22 (if_statement)


State 310

   28 for_statement: KW_FOR IDENT ASSIGN expression KW_TO expression KW_DO KW_BEGIN statement_list . KW_END ';'

    KW_END  shift, and go to state 317


State 311

   29 for_statement: KW_FOR IDENT ASSIGN expression KW_DOWNTO expression KW_DO KW_BEGIN statement_list . KW_END ';'

    KW_END  shift, and go to state 318


State 312

  143 var_decl_more: ';' names ':' ARRAY array_brackets . KW_OF basic_types var_decl_more

    KW_OF  shift, and go to state 319


State 313

  142 var_decl_more: ';' names ':' basic_types var_decl_more .

    $default  reduce using rule 142 (var_decl_more)


State 314

  134 type_def_body: IDENT '=' KW_FUNCTION '(' proc_def_arguments ')' ':' FuncReturnTypes . after_type_def
  138 after_type_def: . ';' type_def_body
  139               | . ';'

    ';'  shift, and go to state 246

    after_type_def  go to state 320


State 315

  123 subprogram_def: KW_FUNCTION IDENT '(' proc_def_arguments ')' ':' FuncReturnTypes ';' statement_list body . ';'

    ';'  shift, and go to state 321


State 316

   19 if_statement: KW_IF expression KW_THEN KW_BEGIN statement_list KW_END ';' KW_ELSE KW_BEGIN statement_list . KW_END ';'

    KW_END  shift, and go to state 322


State 317

   28 for_statement: KW_FOR IDENT ASSIGN expression KW_TO expression KW_DO KW_BEGIN statement_list KW_END . ';'

    ';'  shift, and go to state 323


State 318

   29 for_statement: KW_FOR IDENT ASSIGN expression KW_DOWNTO expression KW_DO KW_BEGIN statement_list KW_END . ';'

    ';'  shift, and go to state 324


State 319

  110 basic_types: . KW_BOOLEAN
  111            | . KW_INTEGER
  112            | . KW_REAL
  113            | . KW_CHAR
  114            | . IDENT
  143 var_decl_more: ';' names ':' ARRAY array_brackets KW_OF . basic_types var_decl_more

    IDENT       shift, and go to state 196
    KW_BOOLEAN  shift, and go to state 98
    KW_REAL     shift, and go to state 99
    KW_CHAR     shift, and go to state 100
    KW_INTEGER  shift, and go to state 101

    basic_types  go to state 325


State 320

  134 type_def_body: IDENT '=' KW_FUNCTION '(' proc_def_arguments ')' ':' FuncReturnTypes after_type_def .

    $default  reduce using rule 134 (type_def_body)


State 321

  123 subprogram_def: KW_FUNCTION IDENT '(' proc_def_arguments ')' ':' FuncReturnTypes ';' statement_list body ';' .

    $default  reduce using rule 123 (subprogram_def)


State 322

   19 if_statement: KW_IF expression KW_THEN KW_BEGIN statement_list KW_END ';' KW_ELSE KW_BEGIN statement_list KW_END . ';'

    ';'  shift, and go to state 326


State 323

   28 for_statement: KW_FOR IDENT ASSIGN expression KW_TO expression KW_DO KW_BEGIN statement_list KW_END ';' .

    $default  reduce using rule 28 (for_statement)


State 324

   29 for_statement: KW_FOR IDENT ASSIGN expression KW_DOWNTO expression KW_DO KW_BEGIN statement_list KW_END ';' .

    $default  reduce using rule 29 (for_statement)


State 325

  142 var_decl_more: . ';' names ':' basic_types var_decl_more
  143              | . ';' names ':' ARRAY array_brackets KW_OF basic_types var_decl_more
  143              | ';' names ':' ARRAY array_brackets KW_OF basic_types . var_decl_more
  144              | . ';'

    ';'  shift, and go to state 240

    var_decl_more  go to state 327


State 326

   19 if_statement: KW_IF expression KW_THEN KW_BEGIN statement_list KW_END ';' KW_ELSE KW_BEGIN statement_list KW_END ';' .

    $default  reduce using rule 19 (if_statement)


State 327

  143 var_decl_more: ';' names ':' ARRAY array_brackets KW_OF basic_types var_decl_more .

    $default  reduce using rule 143 (var_decl_more)
